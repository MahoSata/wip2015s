<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f339380d4e0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f33939d2818"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f33939d2818"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f33939cec38"/></to>
    </wire>
    <wire loc="27:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3393758d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33936cfa60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33936cfa60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3393751d98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f339350d350"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f339350d350"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3391c827b0"/></to>
    </wire>
    <wire loc="29:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3393745c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33936ff8d0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33936ff8d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33936f7110"/></to>
    </wire>
    <wire loc="41:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f3393807be0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33932ffa20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33932ffa20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33932bfd10"/></to>
    </wire>
    <wire loc="42:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f339380c848"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3392442020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3392442020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33923de2e8"/></to>
    </wire>
    <wire loc="43:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f3393804cc8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3393353080"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3393353080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f339331e6c8"/></to>
    </wire>
    <wire loc="45:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3393805020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f339245e550"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f339245e550"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33916e7a78"/></to>
    </wire>
    <wire loc="46:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x7f3393781a20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f339208b1d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f339208b1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3391633600"/></to>
    </wire>
    <wire loc="47:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f339378a740"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3393351b60"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f339378ad20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3393351020"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f3393776d98"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f33933252d8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f33933252d8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f3393303020"/></to>
    </wire>
    <wire loc="54:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x7f339376a020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f33920831e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f33920831e8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f33915eb370"/></to>
    </wire>
    <wire loc="55:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x7f339376ed10"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f339207d2b0"/></to>
    </wire>
    <wire loc="62:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f3392064c88"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f33939d2818"/></to>
    </wire>
    <wire loc="63:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x7f339205b060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f339206c100"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f339206c100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33915b0be0"/></to>
    </wire>
    <wire loc="64:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f33920634b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f33920777c8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f33920777c8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f33915cf370"/></to>
    </wire>
    <wire loc="65:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f3392061cf8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f33920727c8"/></to>
    </wire>
    <wire loc="66:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f339331f020"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f3392064020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33915d0b40"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33915edc68"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x7f33921e8020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x7f33921e6e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3392253120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33923e1b98"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f339180fde0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f339182a020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f339183dcc0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f339195f400"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f3392c8fad8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3392db8198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f3391a3b0a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3392f1e238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3391aa9de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3391b64398"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33924ae578"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33927c7980"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33926fed50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3391c6c9d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33936be0c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f339381f308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f3393ac55c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f3393ac55c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f3393a12d88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f339381fce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f3392b8d870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f339381fce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f3392c8f020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f339381fce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33939d3c10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33939d3c10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33939c34f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f339381d418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f33939cc9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33920d9020"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f33939cc9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33929e54e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f33939cc9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33934d96e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33939c6b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f339383dae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f33939c2398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f339383d4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f33939c3b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33936d6460"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f33939c3b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f33939c5a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f33939c5a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f33939ba428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f33939bd108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f33939cc9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f33939b35f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f33939a91a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f33939a91a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3393925430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f33939b97f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f33939bd108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f3393977c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3393890520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f33939917e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f33938fb020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f33938fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391ea6480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f33939857e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f33938ebd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f33938ebd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e37480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f339397c4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f33938db8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f33938db8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dd0480"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f3393971af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3393877c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f33939a74d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3393922740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3393922740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fcb480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f339397e1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f33938dd5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f33938dd5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dd6480"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f33939a57e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f339391b930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f339391b930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f773e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f3393999968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3393909740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3393909740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f0a480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f339398ec78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f33938f8430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f33938f8430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e9c480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f3393982c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f33938e6120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f33938e6120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e2d480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f33939adc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f3393928020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f3393928020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fe5480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f33939a1c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f3393917d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f3393917d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f6d480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f3393996e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3393906bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3393906bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f00480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f339398a1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f33938f48c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f33938f48c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e93480"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f3393979968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f33938d8d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f33938d8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dc6480"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f33939737e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3393881c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f33939884d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f33938eda50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f33938eda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e3d480"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3393925430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fd1480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f339399d348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3393913120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3393913120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f64480"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f33939754d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f339388ccd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f339399b658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f339390b500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f339390b500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f103e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f3393990968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f33938fa120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f33938fa120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391ea3480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f3393984968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f33938e9e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f33938e9e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e33480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f339397b658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f33938daa50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f33938daa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dcc480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f33939a6658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f33939218c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f33939218c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fc8480"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f33939a4968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f339391aa50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f339391aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f74480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f3393998af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f33939088c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f33939088c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f06480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f339398de00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f33938f75b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f33938f75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e99480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f3393981e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f33938e52a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f33938e52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e2a480"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f33939ace00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3393927120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3393927120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fe1480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f33939a0e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3393916e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3393916e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f6a480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f3393994020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f3393905d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f3393905d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391efd480"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f3393978af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f33938d7e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f33938d7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dc3480"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f3393992348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f33938fde40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f33938fde40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391ea93e0"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f3393986658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f33938ecbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f33938ecbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e3a480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f339397d348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f33938dc740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f33938dc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dd3480"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f3393972968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f339387c3e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f33939a8348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f33939235b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f33939235b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fce480"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f339399c4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f33939122a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f33939122a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f61480"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f339397f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f33938df500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f33938df500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dd93e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f339399a7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f339390a5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f339390a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f0d480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f339398faf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f33938f92a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f33938f92a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e9f480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f3393983af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f33938e7020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f33938e7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e30480"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f339397a7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f33938d9bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f33938d9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391dc9480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f33939bca70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f339392adc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f339392adc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fe83e0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f33939a3af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f3393918bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f3393918bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f70480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f3393997c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f3393907a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f3393907a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f03480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f339398b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f33938f6740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f33938f6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e96480"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f3393974658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33938863e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f3393989348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f33938ee930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f33938ee930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391e403e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f33939931a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f3393904e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f3393904e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391efa480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f33939aa020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f33939262a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f33939262a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391fde480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f339399e100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f3393914020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f3393914020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f3391f67480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393a11c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f3393a0d168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f3393ac4e28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f33939f0988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f3393606578"/></to>
    </wire>
    <wire loc="49:MultihopOscilloscopeC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f339374eb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33936d6460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33936fbb08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f33936f6850"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f33936d9060"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f33936d9060"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f33939ace00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f33936f5ae0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f33936d81f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f33936d81f0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f33939adc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f33936f4c68"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f33936d7378"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f33936d7378"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f33939bca70"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33936bedb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f33936bedb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33935325e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33936be0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33936b68e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f33936b4298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3393523128"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33936b68e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33935ab020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f339352c858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f339357eab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3393579c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f33936af1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f33936af1c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33935ab7c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f339351a330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f33936a53b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f33936a53b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33935a8a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33935a8a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3391cf3ca8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33935ab020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3391cf7398"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f33935ab7c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3391cf7b40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3391cef020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f339361f618"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f339361f618"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f339360f020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3391ce3e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f339361a5c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f339361a5c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f339360a020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3391ce0060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f3393619980"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3393619980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f3393609340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f3391cdc200"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f3393615c38"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f3393615c38"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f3393606c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f3393575cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f3393527930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3391c827b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3391c7e558"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3391c7e558"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f33934f81c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3391c7db00"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3393367d18"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f33934f4ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3391c7db00"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33934ebc28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33934e8778"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33934e51c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3391c7c3f0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f33934f81c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f339338c680"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f33934f2df8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f33933bc428"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3393372720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33934ebc28"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f33933b99a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f33934f4ba8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f3393373060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f33933be6a0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33933bab18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33934e1ac8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33934e1ac8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33934d4ce0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f33933b5e50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f33933bfc28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f33934db420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f33934d86a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33934e8778"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33933e3840"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33933e3840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3391c69060"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33933df3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33934e51c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f33934c5320"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3393494230"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3393494230"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f339348f5e8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33934d2798"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33939c6b98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33933dc060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33934d4528"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33933dcd18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33933e2dd8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33933e2dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3391c684c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f339348dad8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f33939f13c8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33933e2698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3391c69d58"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33933e09d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3391c670e0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3391c67980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33933df3c8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3391c65130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f3391c6b020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3391c632e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3391c32020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33933dc060"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3391c32740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f33933dc780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3391c32cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33933dcd18"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3391c31908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33933c7908"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f33933a5368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f3393303020"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f33924b3e08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f3393341d30"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f3393310020"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x7f3393310020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x7f33927c2700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f339334ab48"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f3393312b88"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x7f3393312b88"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x7f33927c34d8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33933410d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33933112a8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33933112a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33927c3a90"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3393351b60"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3393312050"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3393312050"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f33927c5db0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3393353ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3393315370"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3393315370"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33927c6860"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f339332f020"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f339330eb58"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f339330eb58"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f33924b2700"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3393351020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33933144e8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33933144e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33927c5698"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f3393323a88"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f339330b788"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f339330b788"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f33927bf3f0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f3393330350"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f3393310dc0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f3393310dc0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f33927c1578"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f339331e6c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33927c6020"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f339331e6c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33924b0d20"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f339331e6c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33927001a8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f3393302020"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f3393322020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f3393302750"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f339331f020"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f3393304568"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f33926ffbe0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f33927a4698"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f3393302020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x7f33927b00e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f339276c228"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f339276c228"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f339182a6c0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x7f33927ad868"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f3392794020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f3392794020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f339183c3f0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f33927b6d58"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f33927666e0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x7f33927a9020"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f3392747e10"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x7f3392747e10"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x7f339180e4f8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f33927b83f8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f33926ffbe0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x7f33924aebb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392700978"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x7f33924ad8c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33926ff5c0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x7f33924ade60"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x7f33926ffbe0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x7f339249c060"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x7f33926fb020"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33924ab020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932b5020"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f33924aa5b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33932ffa20"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x7f33924a9168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392716cf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3392716cf8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x7f33924a4540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f339270f350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f339270f350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f339249fcb8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f3393302750"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x7f33927a0268"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x7f3393302750"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x7f33927a75b8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x7f33924b2700"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x7f339249e908"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x7f33927bf3f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x7f33927bd3b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392493350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3392493350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f339249f598"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3392dbeb98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f3392dbeb98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3392db7a08"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f33927a1a10"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3392dbeb98"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33927bfbb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33925c2080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33925c2080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33917e3620"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33927a8940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33925b61c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33925b61c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33932fbc38"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x7f33927a7020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33925ab1c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33925ab1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f33932fa818"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f33927b6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33925c2c38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33925c2c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33917e2268"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f33927a5b98"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f33924b3e08"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f33927b7578"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x7f33924b33d8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f33927a0e60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33932ffa20"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33927be888"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f33925bf020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f33925bf020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f33917e0430"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33927a4e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33925c1888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33925c1888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33917e2e20"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33927a23f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33936ff8d0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f33926f5328"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3392dbeb98"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33926fb678"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33924891a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33924891a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f339170d5e8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33926f6668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3392484710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3392484710"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33932fbc38"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f33926f7968"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3392489d60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3392489d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f339170c268"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x7f33926fa370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3392488940"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3392488940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339170ce20"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33926f6cb8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33932a0990"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33932a0990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f339326c668"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33932bfd10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3393298810"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f33932f5df8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f33932b94e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f33932b94e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3393290020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932b7360"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33932b7360"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f339328d550"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33932fcaa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33932bccb0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33932bccb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3393294798"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f33932fa818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f33932ba9b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f33932ba9b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3393291498"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932d7418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932b3020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932b3020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932786a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33932fbc38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33932bbe40"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33932bbe40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3393293928"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932decb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932b4658"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932b4658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3393281cf8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f33932cf1d8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f33932b3ab8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f33932b3ab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f33932772d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33932b5020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339328fe50"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f33932cdc48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f33932b2780"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f33932b2780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3393276020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f33932c58c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f33932a15d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f33932a15d0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f339326a298"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33932c3758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f339329c478"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f339329c478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3393266378"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3393298810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3392e71020"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f33932a60c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f339326f348"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f339326f348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f3392caed28"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3393266378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3392cf9c38"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f3393290020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f33930d0020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f339328d550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33930d3578"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3393294798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33930d2388"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f3393291498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f33930d17e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f33932afd80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3393272020"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3393272020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3392cb19c0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932786a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3392e6f888"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3393293928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33930d10c8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f339326a298"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3392cf59f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f33932a21d8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f339326ce78"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f339326ce78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392ca4e78"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f33932ab930"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3393276b78"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3393276b78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3392ca74b0"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3393281cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3392da1e38"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f33932b81c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3393290be0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3393290be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f33930d0738"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f33932772d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3392e8d3f0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f339328fe50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33930d5020"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f3393276020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3392dff268"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f339326c668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3392ca4668"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f33932b8d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f339328f860"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f339328f860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f33930d0e50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3392e71020"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3392e6e490"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f3392caed28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f3392c88d28"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f3393284218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f339302bb50"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f3393284dd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f339305f748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f339305f748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3391b61720"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f33930d0020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f3391bb9388"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33930d2388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3391bbc698"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f33930d17e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f3391bbbc28"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3393279c80"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3392f5b900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3392f5b900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3391af8d98"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f3393281060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3393059b38"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3392cb19c0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3392c8b9c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f3392e6f888"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f3391a43328"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33930d3578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f3391bbd888"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33930d10c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3391bbb510"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3392cf59f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f33919af270"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392ca4e78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392b91438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3392ca74b0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3392c814b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f3393285d80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f339302c888"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f33930d0738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3391bb9aa0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f3392e8d3f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3391a878c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f3392dff268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f3391a3a5b8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33930d5020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f3391bbe268"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3392cf9c38"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33919b3590"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f339328baf0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f339302b5b8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3392ca4668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3392c7e668"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f33930d0e50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f3391bb81e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f339321c5e8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3392f5e980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3392f5e980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3391afed50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f33932163f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f33931b5910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3393219730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3392cf59f0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f339320f688"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cb28a8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cb28a8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392c8c8a8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f339318a958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3392ca2150"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3392ca2150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3392b952e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f33930cd2a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f3393238760"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33930ce2a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f33930c5100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33930ceb90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f3392fec430"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f33930cf4d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f3392feca08"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33930b73f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f339305f748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33930c5a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f3392feea50"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f339302a2c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3392f5e980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33930260a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f339301ed20"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3393026988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3392fef638"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f33930272e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3392fefc10"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392feb928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392ef1470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3392ef1470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3391aadda0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392fea2a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3392e8fe30"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3392e8fe30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3392e8b740"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3392fea880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392f5ab98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392f5ab98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3391af6020"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3392f58ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392e8c020"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392e8c020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3391a86578"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392eef580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f339324cb40"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392ef0510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392e8f548"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3392e8f548"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3391a87020"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3392e8aa90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3392da1e38"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392e8ce00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392e71a90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3392e71a90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3392e6d020"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392e8b740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3392e70430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3392e70430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3392e6d908"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3392e8bd18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392e709c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392e709c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3392e6c020"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f3392e6e490"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3392e01708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3392e01708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f3391a3c600"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392e6d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392e002a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3392e002a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3391a3b678"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392e6d908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3392e00b90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3392e00b90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3391a3a020"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3392e6c020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cf1410"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cf1410"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f33919adc78"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3392dfda10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392daa640"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3392daa640"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f33919ff9b0"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3392dfc3f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392ef1d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3392ef1d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3391aa96c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3392dffb70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3392cc4020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3392cc4020"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f3392cbe328"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392ef0df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392da9020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3392da9020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f33919fe3f0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392da65b8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f33932440d0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392da97e0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392da2e38"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392da8120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392da1718"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392da8840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f33931b5910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f3392d74740"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3392ce91a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392d76840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f33931b5910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392d755b8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f3393251af0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392d777b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392d59a10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3392d59a10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3392d52020"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392d76120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392d583f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3392d583f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3392d52908"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392d505b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f3393235300"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392d52020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392cc4d60"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3392cc4d60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3392cbd2a8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392d52908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392cc3630"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3392cc3630"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3392cbdb90"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3392d510a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f3392cb2118"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f3392cb2118"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f3392c8c118"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392cf0410"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392ca4e78"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3392cef438"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392ce9bf0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3392cee2a8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3392ce91a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3392ccaab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cb28a8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392cbba50"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f3393235300"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3392cbd2a8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392cb3020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3392cb3020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392c8d020"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3392cbdb90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392cb3948"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3392cb3948"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392c8d948"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f3392cbe328"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3392cb4128"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3392cb4128"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3392c8e128"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392c9e390"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f339325ae48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3392c9d400"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3392cf59f0"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3392c99020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3392ce91a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f3392c99b50"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3392ce91a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3392c98828"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f3392ce91a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392c97458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f33931b5910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f33931b5910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3391beeb40"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3391bedaf8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f339318a958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f3391bea9f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f3393189220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3391bb5700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33930ea560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3391bb8838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f33930cf4d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3391bb7740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f33930ce2a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3391bb6060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f33930ceb90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3391bb6638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f33930cd2a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f339305e510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3391b60510"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f339305ec50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3391b60c50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3391b5f570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f339305d550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3391b5fcf0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f3391b64970"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3391b5e800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3391af6dc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33930ea560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3391af5890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3392f58ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f3391aa6020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f3392f24d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f3392f24d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f3392f1e850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3391aa6bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3391aa2140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3391aa2140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3392f1db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3391aa8458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3392ef0510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3391aa8d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3392ef0df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f3391aa74a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3392eef580"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3391a85490"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3392e8ce00"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3391a85d38"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3392e8aa90"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f3391a7f700"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3392e8bd18"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f3391a84778"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3391a7bd88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3391a7bd88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f3391a7e5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3391a38020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f3392dffb70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f3391a38d60"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f3393189220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f3391a377b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f3392dfda10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f3391a360e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f3392dfc3f0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f3391a35060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f3391a35800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f3391a36880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33919febb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3392da97e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f33919fa0a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3392da65b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33919fc5b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3392da8120"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f33919fccd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392da8840"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f33919fb908"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f3392dbeb98"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f33919fab50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f3392dbcb10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f3392db89f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3392dc2e10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3392db8198"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3392d5b338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3392d56658"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f3392d58b10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3392d510a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f3392d5abe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f3392d53020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392d57268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3392d51800"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3392d56020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3392d505b8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f3392d5a648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f3392d55a08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f3392d5bd68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f3392d55120"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f33919a88a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3392cef438"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f33919aa6c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392cf0410"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f33919a98c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3392cfea28"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f3392cfea28"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f33936b4298"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f33919abab0"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3392cee2a8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f3392cc6630"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3392cc18e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f3392cc3d50"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3392cbc430"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cc24a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f3392cbcb90"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3392cc12a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3392cbba50"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f3392cc5988"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f3392cc0d18"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f3392cc50e0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f3392cc0430"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3392b952e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f339299f578"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3392caa130"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3392c84130"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392b91438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f339299ae68"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f3392c6e2f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f3392c9e390"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3392c6d060"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3392c99020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f3392c6db90"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f3392c99b50"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3392c6c828"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3392c98828"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3392c6b730"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3392c9d400"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f3392c6f208"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392b91438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392c67e28"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392c97458"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f3392c7ed70"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f3392b9d710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f3392b9d710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f33939a57e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3392c7c020"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f3392b9a990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3392b9a990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3392b65e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392c76c18"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b995e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b995e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b6d9d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f3392c7b7e0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f3392b98140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f3392b98140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f339399c4d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f3392c7a958"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f3392b97338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f3392b97338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f33939a74d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f3392c74100"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f3392b964c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f3392b964c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f3392b90cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f3392c67390"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f3393189220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f3392c74e30"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f33933bfc28"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f3392bdbd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f339299f578"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f339192b750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b6d9d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b62628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f339299ae68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3392951988"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f3392b81c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f339398b020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f3392b80e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f339398ec78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f3392b83540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f3392a90020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f3392a90020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f3392a76808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f3392b651d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f3392b61120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f3392b6d388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f3392b62020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3392b8ecd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3392b66a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3392b65e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3392b61d88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f3392b443c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3392aa4b50"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3392aa4b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f339195d918"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3392b43020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3392aa1268"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3392aa1268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f339195cdd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f3392b45150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f3392af8020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f3392af8020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f3392af5dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f3392b437c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f33939f13c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f3392b23b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f3392aea970"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f33939f13c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f3392aef380"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f33939a57e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f3392aee4c0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f33939a4968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f3392aec648"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f33939a3af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f3392aeb7d0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f33939a1c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3392aa29a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f339195c698"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f339195b6c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3392aa1ae8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f339195be40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f339195f9d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3391954920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3392a89910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f3392a77160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3392a99d00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392a7c180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3392a84e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f3392a71020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3392a84e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f3392a6d360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f3392a84e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f3392a69770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f33919289c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392a99d00"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f3391922a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f3392a84e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33929e5c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392a99d00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3392950b88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33929580e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f33929552b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3392996b18"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3392996b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f339298eb90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f339297bc58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392a99d00"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f339279f948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x7f339180ce00"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x7f3393310dc0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33917e3620"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33917d7618"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33917e2268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33917e2e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f33917e0430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932decb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33917d62c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33926209a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33917d6e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33926209a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33925d7b98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33925d6a08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33932fcaa8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33925d5700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33925d4d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f33925d3988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f33925d2160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33925b6760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33925b53f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33925ab760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33925aa3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x7f339249ce18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x7f339249c678"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f339170d5e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3391701790"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f339170c268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f339170ce20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3392486020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f339170a430"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f339170a430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932decb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3391700450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33926209a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33916ff060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3392484ca8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3392482888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3392446268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33916e5700"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33916e5700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33933410d0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33916e7a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3393353ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x7f3393322020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x7f33916df478"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33923de2e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33923b7b90"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3392441020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3392439b60"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33924407a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33923e6578"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33924401c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33923e89a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f339243eaf0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33923e4268"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33923e7020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33923e1b98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33923b7578"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33923db5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f339243d480"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33923e4bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33923ddce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33923e38c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33923dd270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f33923d6ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f33920b96e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33923ddce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392291020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33923dd270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3392292868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f3392291db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f33923d6ba8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33923afbc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33923db5a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f339228ea50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33923db5a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3392286420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33923db5a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f339228f6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f33923adb48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f339228e020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f33923b0898"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f33923a7b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f339228ab30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f33923a5398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33922898b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f33922898b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f339225f338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f339227a448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f33922610c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f33922610c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f3392259310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f3392354830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f339238ad70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f3392356020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f3392350918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f339228c100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f339228c8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f339225a290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f339225faf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f339225faf0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f3392253e58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f3392259310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f33922115f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f339225f338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33922536f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3392258598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3392183188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3392183188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33920c6c50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f339220dc60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3392258598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x7f33922105f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f33921f0700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x7f33921f0700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x7f33921e8730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x7f3392210d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f33921ef020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x7f33921ef020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x7f33921e7020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x7f339220f5c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f33921ef860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x7f33921ef860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x7f33921e78a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x7f33921ec020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x7f33921e36d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x7f33921eee58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x7f33921e4568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x7f33921ed6f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x7f33921e4e00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33921e2c70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33939c6b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f33921e1950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f33939f13c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f33920c4e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f339217d020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f339217d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33920d1020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33920ce0e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f339217bc30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f339217bc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f3392165298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f3392174c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f33921603d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f3392172350"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f339215fb18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f339216d1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f339215a4e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f339216d1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f3392156770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f339216d1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f3392152b20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33920d9740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f339217bc30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f339208bd88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33924407a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f339208a9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f33920880a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f339243eaf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33916322c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f339209b440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3391632e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f339209b440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3392099d20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f3392098ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3392441020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3392097700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f3392096d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33924407a0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f3392095988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f3392094160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f339206ccb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33924407a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f339206b908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f3392069020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f339243eaf0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33915af8e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f339209b440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33915ae578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f3392054a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeC" loc="22:MultihopOscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.TimerMilliC" loc="44(MultihopOscilloscopeAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f339369d3e8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor" loc="41(MultihopOscilloscopeAppC.Sensor):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor.DemoChannel" loc="39(MultihopOscilloscopeAppC.Sensor.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC" loc="21(MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RF230RadioC.PacketLinkLayerC.PacketLinkLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RF230RadioC.PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3393a179f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3393a179f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3392796a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3392796a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC" loc="43(MultihopOscilloscopeAppC.CollectionSenderC):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP" loc="34(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3393a17d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3393a17d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x7f3393a15630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC" loc="47(MultihopOscilloscopeAppC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP" loc="43(MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP" loc="41(MultihopOscilloscopeAppC.UARTMessagePoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP" loc="53(MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3392796a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTQueueP" loc="42(MultihopOscilloscopeAppC.UARTQueueP):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool" loc="41(MultihopOscilloscopeAppC.DebugMessagePool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP" loc="53(MultihopOscilloscopeAppC.DebugMessagePool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3392796a08"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSendQueue" loc="42(MultihopOscilloscopeAppC.DebugSendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender" loc="47(MultihopOscilloscopeAppC.DebugSerialSender):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:114">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP" loc="43(MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f339396dd00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f339396a0c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f339396a410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f3393960608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f3393960970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f3393960cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f339395c060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f33938ce508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f33938ce870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f33938cebd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f33938cd020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f339369d3e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f339369d3e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f339369d6d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f3393694dd0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f3393694dd0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f3393691108" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33936b2c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33936b2c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3393573cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3393573cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f3393570020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33935259f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33935259f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f3393458020" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f339344b9f0" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f339342b5c0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f339338b370" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f339338b370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f33930b3ab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f33930ab3f0" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f33929e4380" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f33929e4380"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f33929e46d0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f33929d0020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f33929d0020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f33929d0770" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f33929d0770"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f33929d0a70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f339298c020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f339298c020"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f339298c770" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f339298c770"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f33929716c8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f33929716c8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f3392971e30" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f3392971e30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f3392970240" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f3392970240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f33929709b8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f33929709b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f3392970d60" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f339296e528" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f339296e528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f3392796a08" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f3392796a08"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f3392796d58" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f339278e9d8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f339278e9d8"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f339278ecf8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f3392765198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f3392765198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f33927654f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x7f3392749e40" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f3392743bd0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f3392644848" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f339263a348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f3392636e20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f339261cbc8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f33925bb060" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f33925b0020" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x7f339259ea48" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x7f339259edb8" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x7f339259d178" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f339245d450" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x7f33924583a8" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x7f33924586f0" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x7f3392454510" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f33920aab88" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f33939d4c48" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f33939d4c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f33939d2818" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f33939d2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f33939d2b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f33939cc9a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f33939cc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939cccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33939d3c10" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33939d3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f33939c6b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33939c6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f33939cc020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f33939cc1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f33939cc330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f33939cc4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f33939cc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f33939c3b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f33939c3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33939c34f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33939c34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939c3840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f33939c2398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f33939c2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939c26e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f33939bd108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f33939bd108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939bd458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f33939c5a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f33939c5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939c5d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f33939b97f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f33939b97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939b9b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f33939b35f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f33939b35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939b3948"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939b3ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939b3c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939b3de0"/>
        <function-ref name="get" scoped="" ref="0x7f33939b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939b91a8"/>
        <function-ref name="set" scoped="" ref="0x7f33939b9330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f33939ba428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f33939ba428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33939ba778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f3393977c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f3393977c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939765e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393976770"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939768f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393976a80"/>
        <function-ref name="get" scoped="" ref="0x7f3393976c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393976d90"/>
        <function-ref name="set" scoped="" ref="0x7f3393975020"/>
        <function-ref name="clr" scoped="" ref="0x7f33939751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f33939917e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f33939917e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393991b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393991cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393991e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393990020"/>
        <function-ref name="get" scoped="" ref="0x7f33939901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393990330"/>
        <function-ref name="set" scoped="" ref="0x7f33939904b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393990640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f33939857e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f33939857e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393985b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393985cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393985e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393984020"/>
        <function-ref name="get" scoped="" ref="0x7f33939841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393984330"/>
        <function-ref name="set" scoped="" ref="0x7f33939844b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393984640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f339397c4d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f339397c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339397c820"/>
        <function-ref name="isInput" scoped="" ref="0x7f339397c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339397cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339397ccb8"/>
        <function-ref name="get" scoped="" ref="0x7f339397ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339397b020"/>
        <function-ref name="set" scoped="" ref="0x7f339397b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f339397b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f3393971af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f3393971af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393971e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393970020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939701a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393970330"/>
        <function-ref name="get" scoped="" ref="0x7f33939704b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393970640"/>
        <function-ref name="set" scoped="" ref="0x7f33939707c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393970950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f33939a74d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f33939a74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a7820"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a79a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a7cb8"/>
        <function-ref name="get" scoped="" ref="0x7f33939a7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a6020"/>
        <function-ref name="set" scoped="" ref="0x7f33939a61a8"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f339397e1a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f339397e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339397e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f339397e678"/>
        <function-ref name="toggle" scoped="" ref="0x7f339397e800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339397e988"/>
        <function-ref name="get" scoped="" ref="0x7f339397eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339397ec98"/>
        <function-ref name="set" scoped="" ref="0x7f339397ee20"/>
        <function-ref name="clr" scoped="" ref="0x7f339397d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f33939a57e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f33939a57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a5b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a4020"/>
        <function-ref name="get" scoped="" ref="0x7f33939a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a4330"/>
        <function-ref name="set" scoped="" ref="0x7f33939a44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f3393999968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f3393999968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393999cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393999e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393998020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939981a8"/>
        <function-ref name="get" scoped="" ref="0x7f3393998330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939984b8"/>
        <function-ref name="set" scoped="" ref="0x7f3393998640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f339398ec78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f339398ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339398d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f339398d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339398d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339398d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f339398d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339398d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f339398d950"/>
        <function-ref name="clr" scoped="" ref="0x7f339398dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f3393982c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f3393982c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393981020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939811a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393981330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939814b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393981640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939817c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393981950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393981ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f33939adc78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f33939adc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939ac1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939ac330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939ac4b8"/>
        <function-ref name="get" scoped="" ref="0x7f33939ac640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939ac7c8"/>
        <function-ref name="set" scoped="" ref="0x7f33939ac950"/>
        <function-ref name="clr" scoped="" ref="0x7f33939acad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f33939a1c78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f33939a1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a01a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a0330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a04b8"/>
        <function-ref name="get" scoped="" ref="0x7f33939a0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a07c8"/>
        <function-ref name="set" scoped="" ref="0x7f33939a0950"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f3393996e00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f3393996e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939951a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393995330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939954b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393995640"/>
        <function-ref name="get" scoped="" ref="0x7f33939957c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393995950"/>
        <function-ref name="set" scoped="" ref="0x7f3393995ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393995c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f339398a1a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f339398a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339398a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f339398a678"/>
        <function-ref name="toggle" scoped="" ref="0x7f339398a800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339398a988"/>
        <function-ref name="get" scoped="" ref="0x7f339398ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339398ac98"/>
        <function-ref name="set" scoped="" ref="0x7f339398ae20"/>
        <function-ref name="clr" scoped="" ref="0x7f3393989020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f3393979968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f3393979968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393979cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393979e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393978020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939781a8"/>
        <function-ref name="get" scoped="" ref="0x7f3393978330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939784b8"/>
        <function-ref name="set" scoped="" ref="0x7f3393978640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f33939737e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f33939737e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393973b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393973cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393973e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393972020"/>
        <function-ref name="get" scoped="" ref="0x7f33939721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393972330"/>
        <function-ref name="set" scoped="" ref="0x7f33939724b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393972640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f33939884d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f33939884d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393988820"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939889a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393988b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393988cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3393988e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393986020"/>
        <function-ref name="set" scoped="" ref="0x7f33939861a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393986330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f33939a91a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f33939a91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a94f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a9678"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a9800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a9988"/>
        <function-ref name="get" scoped="" ref="0x7f33939a9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a9c98"/>
        <function-ref name="set" scoped="" ref="0x7f33939a9e20"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f339399d348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f339399d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339399d698"/>
        <function-ref name="isInput" scoped="" ref="0x7f339399d820"/>
        <function-ref name="toggle" scoped="" ref="0x7f339399d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339399db30"/>
        <function-ref name="get" scoped="" ref="0x7f339399dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339399de40"/>
        <function-ref name="set" scoped="" ref="0x7f339399c020"/>
        <function-ref name="clr" scoped="" ref="0x7f339399c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f33939754d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f33939754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393975820"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939759a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393975b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393975cb8"/>
        <function-ref name="get" scoped="" ref="0x7f3393975e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393974020"/>
        <function-ref name="set" scoped="" ref="0x7f33939741a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393974330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f339399b658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f339399b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339399b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f339399bb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f339399bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339399be40"/>
        <function-ref name="get" scoped="" ref="0x7f339399a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339399a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f339399a330"/>
        <function-ref name="clr" scoped="" ref="0x7f339399a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f3393990968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f3393990968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393990cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393990e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f339398f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339398f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f339398f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339398f4b8"/>
        <function-ref name="set" scoped="" ref="0x7f339398f640"/>
        <function-ref name="clr" scoped="" ref="0x7f339398f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f3393984968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f3393984968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393984cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393984e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393983020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939831a8"/>
        <function-ref name="get" scoped="" ref="0x7f3393983330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939834b8"/>
        <function-ref name="set" scoped="" ref="0x7f3393983640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f339397b658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f339397b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339397b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f339397bb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f339397bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339397be40"/>
        <function-ref name="get" scoped="" ref="0x7f339397a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339397a1a8"/>
        <function-ref name="set" scoped="" ref="0x7f339397a330"/>
        <function-ref name="clr" scoped="" ref="0x7f339397a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f33939a6658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f33939a6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a69a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a6b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a6e40"/>
        <function-ref name="get" scoped="" ref="0x7f33939a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a51a8"/>
        <function-ref name="set" scoped="" ref="0x7f33939a5330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f33939a4968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f33939a4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a4e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a31a8"/>
        <function-ref name="get" scoped="" ref="0x7f33939a3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a34b8"/>
        <function-ref name="set" scoped="" ref="0x7f33939a3640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f3393998af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f3393998af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393998e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393997020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393997330"/>
        <function-ref name="get" scoped="" ref="0x7f33939974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393997640"/>
        <function-ref name="set" scoped="" ref="0x7f33939977c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393997950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f339398de00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f339398de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339398c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f339398c330"/>
        <function-ref name="toggle" scoped="" ref="0x7f339398c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339398c640"/>
        <function-ref name="get" scoped="" ref="0x7f339398c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339398c950"/>
        <function-ref name="set" scoped="" ref="0x7f339398cad8"/>
        <function-ref name="clr" scoped="" ref="0x7f339398cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f3393981e00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f3393981e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939801a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393980330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939804b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393980640"/>
        <function-ref name="get" scoped="" ref="0x7f33939807c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393980950"/>
        <function-ref name="set" scoped="" ref="0x7f3393980ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393980c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f33939ace00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f33939ace00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939ab1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939ab330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939ab4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939ab640"/>
        <function-ref name="get" scoped="" ref="0x7f33939ab7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939ab950"/>
        <function-ref name="set" scoped="" ref="0x7f33939abad8"/>
        <function-ref name="clr" scoped="" ref="0x7f33939abc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f33939a0e00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f33939a0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339399f2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f339399f470"/>
        <function-ref name="toggle" scoped="" ref="0x7f339399f5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339399f780"/>
        <function-ref name="get" scoped="" ref="0x7f339399f908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339399fa90"/>
        <function-ref name="set" scoped="" ref="0x7f339399fc18"/>
        <function-ref name="clr" scoped="" ref="0x7f339399fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f3393994020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f3393994020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393994370"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939944f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393994680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393994808"/>
        <function-ref name="get" scoped="" ref="0x7f3393994990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393994b18"/>
        <function-ref name="set" scoped="" ref="0x7f3393994ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3393994e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f3393978af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f3393978af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393978e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393977020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393977330"/>
        <function-ref name="get" scoped="" ref="0x7f33939774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393977640"/>
        <function-ref name="set" scoped="" ref="0x7f33939777c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393977950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f3393992348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f3393992348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393992898"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393992a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393992ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393992d30"/>
        <function-ref name="get" scoped="" ref="0x7f3393991020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939911a8"/>
        <function-ref name="set" scoped="" ref="0x7f3393991330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939914b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f3393986658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f3393986658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939869a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393986b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393986cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393986e40"/>
        <function-ref name="get" scoped="" ref="0x7f3393985020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939851a8"/>
        <function-ref name="set" scoped="" ref="0x7f3393985330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f339397d348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f339397d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339397d698"/>
        <function-ref name="isInput" scoped="" ref="0x7f339397d820"/>
        <function-ref name="toggle" scoped="" ref="0x7f339397d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339397db30"/>
        <function-ref name="get" scoped="" ref="0x7f339397dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339397de40"/>
        <function-ref name="set" scoped="" ref="0x7f339397c020"/>
        <function-ref name="clr" scoped="" ref="0x7f339397c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f3393972968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f3393972968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393972cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393972e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393971020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939711a8"/>
        <function-ref name="get" scoped="" ref="0x7f3393971330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939714b8"/>
        <function-ref name="set" scoped="" ref="0x7f3393971640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f33939a8348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f33939a8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a8698"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a8820"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a89a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a8b30"/>
        <function-ref name="get" scoped="" ref="0x7f33939a8cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a8e40"/>
        <function-ref name="set" scoped="" ref="0x7f33939a7020"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f339399c4d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f339399c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339399c820"/>
        <function-ref name="isInput" scoped="" ref="0x7f339399c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339399cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339399ccb8"/>
        <function-ref name="get" scoped="" ref="0x7f339399ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339399b020"/>
        <function-ref name="set" scoped="" ref="0x7f339399b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f339399b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f339397f020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f339397f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339397f370"/>
        <function-ref name="isInput" scoped="" ref="0x7f339397f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339397f680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339397f808"/>
        <function-ref name="get" scoped="" ref="0x7f339397f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339397fb18"/>
        <function-ref name="set" scoped="" ref="0x7f339397fca0"/>
        <function-ref name="clr" scoped="" ref="0x7f339397fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f339399a7e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f339399a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339399ab30"/>
        <function-ref name="isInput" scoped="" ref="0x7f339399acb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339399ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393999020"/>
        <function-ref name="get" scoped="" ref="0x7f33939991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393999330"/>
        <function-ref name="set" scoped="" ref="0x7f33939994b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393999640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f339398faf0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f339398faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339398fe40"/>
        <function-ref name="isInput" scoped="" ref="0x7f339398e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f339398e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339398e330"/>
        <function-ref name="get" scoped="" ref="0x7f339398e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339398e640"/>
        <function-ref name="set" scoped="" ref="0x7f339398e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f339398e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f3393983af0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f3393983af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393983e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393982020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393982330"/>
        <function-ref name="get" scoped="" ref="0x7f33939824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393982640"/>
        <function-ref name="set" scoped="" ref="0x7f33939827c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393982950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f339397a7e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f339397a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339397ab30"/>
        <function-ref name="isInput" scoped="" ref="0x7f339397acb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339397ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393979020"/>
        <function-ref name="get" scoped="" ref="0x7f33939791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393979330"/>
        <function-ref name="set" scoped="" ref="0x7f33939794b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393979640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f33939bca70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f33939bca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939bcdc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939ad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939ad330"/>
        <function-ref name="get" scoped="" ref="0x7f33939ad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939ad640"/>
        <function-ref name="set" scoped="" ref="0x7f33939ad7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f33939ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f33939a3af0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f33939a3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939a3e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939a1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939a11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939a1330"/>
        <function-ref name="get" scoped="" ref="0x7f33939a14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939a1640"/>
        <function-ref name="set" scoped="" ref="0x7f33939a17c8"/>
        <function-ref name="clr" scoped="" ref="0x7f33939a1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f3393997c78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f3393997c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393996020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939961a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393996330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939964b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393996640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939967c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393996950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393996ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f339398b020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f339398b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339398b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f339398b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339398b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339398b808"/>
        <function-ref name="get" scoped="" ref="0x7f339398b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339398bb18"/>
        <function-ref name="set" scoped="" ref="0x7f339398bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f339398be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f3393974658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f3393974658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939749a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393974b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393974cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393974e40"/>
        <function-ref name="get" scoped="" ref="0x7f3393973020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939731a8"/>
        <function-ref name="set" scoped="" ref="0x7f3393973330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f3393989348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f3393989348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393989698"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393989820"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939899a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393989b30"/>
        <function-ref name="get" scoped="" ref="0x7f3393989cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393989e40"/>
        <function-ref name="set" scoped="" ref="0x7f3393988020"/>
        <function-ref name="clr" scoped="" ref="0x7f33939881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f33939931a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f33939931a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939934f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393993678"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393993800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393993988"/>
        <function-ref name="get" scoped="" ref="0x7f3393993b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393993c98"/>
        <function-ref name="set" scoped="" ref="0x7f3393993e20"/>
        <function-ref name="clr" scoped="" ref="0x7f3393992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f33939aa020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f33939aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939aa370"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939aa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939aa680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939aa808"/>
        <function-ref name="get" scoped="" ref="0x7f33939aa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939aab18"/>
        <function-ref name="set" scoped="" ref="0x7f33939aaca0"/>
        <function-ref name="clr" scoped="" ref="0x7f33939aae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f339399e100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f339399e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339399e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f339399e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339399e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339399e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f339399ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339399ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f339399ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f339399d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3393927120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3393927120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393927470"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939275f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393927780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393927908"/>
        <function-ref name="get" scoped="" ref="0x7f3393927a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393927c18"/>
        <function-ref name="set" scoped="" ref="0x7f3393927da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3393926020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f33939235b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f33939235b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393923908"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393923a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393923c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393923da0"/>
        <function-ref name="get" scoped="" ref="0x7f3393922020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939221a8"/>
        <function-ref name="set" scoped="" ref="0x7f3393922330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f339392adc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f339392adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393929170"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939292f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393929480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393929608"/>
        <function-ref name="get" scoped="" ref="0x7f3393929790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393929918"/>
        <function-ref name="set" scoped="" ref="0x7f3393929aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f3393929c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f33939262a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f33939262a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939265f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393926780"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393926908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393926a90"/>
        <function-ref name="get" scoped="" ref="0x7f3393926c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393926da0"/>
        <function-ref name="set" scoped="" ref="0x7f3393925020"/>
        <function-ref name="clr" scoped="" ref="0x7f33939251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3393922740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3393922740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393922a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393922c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393922da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393921020"/>
        <function-ref name="get" scoped="" ref="0x7f33939211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393921330"/>
        <function-ref name="set" scoped="" ref="0x7f33939214b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393921640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f3393928020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f3393928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393928370"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939284f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393928680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393928808"/>
        <function-ref name="get" scoped="" ref="0x7f3393928990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393928b18"/>
        <function-ref name="set" scoped="" ref="0x7f3393928ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3393928e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3393925430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3393925430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393925780"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393925908"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393925a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393925c18"/>
        <function-ref name="get" scoped="" ref="0x7f3393925da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393923020"/>
        <function-ref name="set" scoped="" ref="0x7f33939231a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393923330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f33939218c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f33939218c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393921c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393921da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393920020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939201a8"/>
        <function-ref name="get" scoped="" ref="0x7f3393920330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939204b8"/>
        <function-ref name="set" scoped="" ref="0x7f3393920640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fe83e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fe83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fe8730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fe88b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fe8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fe8bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3391fe8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fe7020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fe71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fe7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fe5480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fe5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fe57d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fe5958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fe5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fe5c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fe5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fe3020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fe31a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fe3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fe1480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fe1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fe17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fe1958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fe1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fe1c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fe1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fe0020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fe01a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fe0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fde480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fde480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fde7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fde958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fdeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fdec68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fdedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fdd020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fdd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fdd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fd1480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fd1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fd17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fd1958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fd1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fd1c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fd1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fd0020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fd01a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fd0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fce480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fce7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fce958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fceae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fcec68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fcedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fcd020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fcd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fcd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fcb480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fcb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fcb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fcb958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fcbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fcbc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fcbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fca020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fca1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391fc8480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391fc8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391fc87d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391fc8958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391fc8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391fc8c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391fc8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391fc7020"/>
        <function-ref name="set" scoped="" ref="0x7f3391fc71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391fc7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3393918bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3393918bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393917020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939171a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393917330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939174b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393917640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939177c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393917950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393917ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3393914020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3393914020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393914370"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939144f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393914680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393914808"/>
        <function-ref name="get" scoped="" ref="0x7f3393914990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393914b18"/>
        <function-ref name="set" scoped="" ref="0x7f3393914ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f3393914e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f339391b930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f339391b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339391bc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f339391be08"/>
        <function-ref name="toggle" scoped="" ref="0x7f339391a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339391a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f339391a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339391a4b8"/>
        <function-ref name="set" scoped="" ref="0x7f339391a640"/>
        <function-ref name="clr" scoped="" ref="0x7f339391a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f3393917d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f3393917d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939160d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393916260"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939163e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393916570"/>
        <function-ref name="get" scoped="" ref="0x7f33939166f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393916880"/>
        <function-ref name="set" scoped="" ref="0x7f3393916a08"/>
        <function-ref name="clr" scoped="" ref="0x7f3393916b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3393913120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3393913120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393913470"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939135f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393913780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393913908"/>
        <function-ref name="get" scoped="" ref="0x7f3393913a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393913c18"/>
        <function-ref name="set" scoped="" ref="0x7f3393913da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3393912020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f339391aa50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f339391aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339391ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393918020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939181a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393918330"/>
        <function-ref name="get" scoped="" ref="0x7f33939184b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393918640"/>
        <function-ref name="set" scoped="" ref="0x7f33939187c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393918950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3393916e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3393916e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939151a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393915330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939154b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393915640"/>
        <function-ref name="get" scoped="" ref="0x7f33939157c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393915950"/>
        <function-ref name="set" scoped="" ref="0x7f3393915ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393915c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f33939122a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f33939122a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939125f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393912780"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393912908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393912a90"/>
        <function-ref name="get" scoped="" ref="0x7f3393912c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393912da0"/>
        <function-ref name="set" scoped="" ref="0x7f3393911020"/>
        <function-ref name="clr" scoped="" ref="0x7f33939111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f773e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f773e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f77730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f778b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f77a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f77bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3391f77d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f76020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f761a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f74480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f747d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f74958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f74ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f74c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f74df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f72020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f721a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f72330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f70480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f707d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f70958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f70ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f70c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f70df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f6f020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f6d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f6d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f6d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f6d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f6dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f6dc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f6ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f6c020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f6a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f6a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f6a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f6a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f6aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f6ac68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f6adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f69020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f691a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f69330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f67480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f67480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f677d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f67958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f67ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f67c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f67df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f66020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f661a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f64480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f64480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f647d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f64958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f64ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f64c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f64df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f63020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f631a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f61480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f61480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f617d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f61958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f61ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f61c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f61df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f60020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f601a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f60330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f3393909740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f3393909740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393909a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393909c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393909da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393908020"/>
        <function-ref name="get" scoped="" ref="0x7f33939081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393908330"/>
        <function-ref name="set" scoped="" ref="0x7f33939084b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393908640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f3393906bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f3393906bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393905020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33939051a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393905330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939054b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393905640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939057c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393905950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393905ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f339390b500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f339390b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339390b850"/>
        <function-ref name="isInput" scoped="" ref="0x7f339390b9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339390bb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339390bce8"/>
        <function-ref name="get" scoped="" ref="0x7f339390be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339390a020"/>
        <function-ref name="set" scoped="" ref="0x7f339390a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f339390a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f33939088c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f33939088c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393908c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393908da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393907020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33939071a8"/>
        <function-ref name="get" scoped="" ref="0x7f3393907330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939074b8"/>
        <function-ref name="set" scoped="" ref="0x7f3393907640"/>
        <function-ref name="clr" scoped="" ref="0x7f33939077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f3393905d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f3393905d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939040d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393904260"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939043e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393904570"/>
        <function-ref name="get" scoped="" ref="0x7f33939046f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393904880"/>
        <function-ref name="set" scoped="" ref="0x7f3393904a08"/>
        <function-ref name="clr" scoped="" ref="0x7f3393904b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f339390a5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f339390a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339390a908"/>
        <function-ref name="isInput" scoped="" ref="0x7f339390aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f339390ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339390ada0"/>
        <function-ref name="get" scoped="" ref="0x7f3393909020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33939091a8"/>
        <function-ref name="set" scoped="" ref="0x7f3393909330"/>
        <function-ref name="clr" scoped="" ref="0x7f33939094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f3393907a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f3393907a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393907da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393906020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939061a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393906330"/>
        <function-ref name="get" scoped="" ref="0x7f33939064b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393906640"/>
        <function-ref name="set" scoped="" ref="0x7f33939067c8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393906950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f3393904e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f3393904e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33939031a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3393903330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33939034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393903640"/>
        <function-ref name="get" scoped="" ref="0x7f33939037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393903950"/>
        <function-ref name="set" scoped="" ref="0x7f3393903ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393903c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f103e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f103e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f10730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f108b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f10a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f10bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3391f10d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f0f020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f0f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f0f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f0d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f0d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f0d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f0d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f0dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f0dc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f0ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f0c020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f0c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f0c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f0a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f0a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f0a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f0a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f0aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f0ac68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f0adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f08020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f081a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f06480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f06480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f067d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f06958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f06ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f06c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f06df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f05020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f051a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f03480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f037d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f03958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f03ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f03c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f03df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391f02020"/>
        <function-ref name="set" scoped="" ref="0x7f3391f021a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391f02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391f00480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391f00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391f007d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391f00958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391f00ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391f00c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391f00df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391eff020"/>
        <function-ref name="set" scoped="" ref="0x7f3391eff1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391eff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391efd480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391efd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391efd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391efd958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391efdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391efdc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391efddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391efc020"/>
        <function-ref name="set" scoped="" ref="0x7f3391efc1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391efc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391efa480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391efa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391efa7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391efa958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391efaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391efac68"/>
        <function-ref name="get" scoped="" ref="0x7f3391efadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391ef9020"/>
        <function-ref name="set" scoped="" ref="0x7f3391ef91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391ef9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f33938fa120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f33938fa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938fa470"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938fa5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938fa780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938fa908"/>
        <function-ref name="get" scoped="" ref="0x7f33938faa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938fac18"/>
        <function-ref name="set" scoped="" ref="0x7f33938fada0"/>
        <function-ref name="clr" scoped="" ref="0x7f33938f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f33938f75b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f33938f75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938f7908"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938f7a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938f7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938f7da0"/>
        <function-ref name="get" scoped="" ref="0x7f33938f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938f61a8"/>
        <function-ref name="set" scoped="" ref="0x7f33938f6330"/>
        <function-ref name="clr" scoped="" ref="0x7f33938f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f33938fde40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f33938fde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938fc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938fc348"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938fc4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938fc658"/>
        <function-ref name="get" scoped="" ref="0x7f33938fc7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938fc968"/>
        <function-ref name="set" scoped="" ref="0x7f33938fcaf0"/>
        <function-ref name="clr" scoped="" ref="0x7f33938fcc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f33938f92a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f33938f92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938f95f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938f9780"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938f9908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938f9a90"/>
        <function-ref name="get" scoped="" ref="0x7f33938f9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938f9da0"/>
        <function-ref name="set" scoped="" ref="0x7f33938f8020"/>
        <function-ref name="clr" scoped="" ref="0x7f33938f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f33938f6740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f33938f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938f6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938f6c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938f6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938f4020"/>
        <function-ref name="get" scoped="" ref="0x7f33938f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938f4330"/>
        <function-ref name="set" scoped="" ref="0x7f33938f44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f33938fb020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f33938fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938fb370"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938fb808"/>
        <function-ref name="get" scoped="" ref="0x7f33938fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938fbb18"/>
        <function-ref name="set" scoped="" ref="0x7f33938fbca0"/>
        <function-ref name="clr" scoped="" ref="0x7f33938fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f33938f8430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f33938f8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938f8780"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938f8908"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938f8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938f8c18"/>
        <function-ref name="get" scoped="" ref="0x7f33938f8da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938f7020"/>
        <function-ref name="set" scoped="" ref="0x7f33938f71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f33938f48c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f33938f48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938f4c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938f4da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938f31a8"/>
        <function-ref name="get" scoped="" ref="0x7f33938f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938f34b8"/>
        <function-ref name="set" scoped="" ref="0x7f33938f3640"/>
        <function-ref name="clr" scoped="" ref="0x7f33938f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391ea93e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391ea93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391ea9730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391ea98b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391ea9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391ea9bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3391ea9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391ea8020"/>
        <function-ref name="set" scoped="" ref="0x7f3391ea81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391ea8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391ea6480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391ea6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391ea67d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391ea6958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391ea6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391ea6c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391ea6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391ea5020"/>
        <function-ref name="set" scoped="" ref="0x7f3391ea51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391ea5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391ea3480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391ea3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391ea37d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391ea3958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391ea3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391ea3c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391ea3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391ea1020"/>
        <function-ref name="set" scoped="" ref="0x7f3391ea11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391ea1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e9f480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e9f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e9f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e9f958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e9fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e9fc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e9fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e9e020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e9e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e9e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e9c480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e9c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e9c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e9c958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e9cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e9cc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e9cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e9b020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e9b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e99480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e99480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e997d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e99958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e99ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e99c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e99df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e98020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e981a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e96480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e96480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e967d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e96958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e96ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e96c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e96df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e95020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e951a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e93480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e93480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e937d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e93958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e93ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e93c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e93df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e92020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e921a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f33938ecbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f33938ecbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938eb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938eb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938eb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938eb4b8"/>
        <function-ref name="get" scoped="" ref="0x7f33938eb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938eb7c8"/>
        <function-ref name="set" scoped="" ref="0x7f33938eb950"/>
        <function-ref name="clr" scoped="" ref="0x7f33938ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f33938e7020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f33938e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938e7370"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938e74f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938e7680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938e7808"/>
        <function-ref name="get" scoped="" ref="0x7f33938e7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938e7b18"/>
        <function-ref name="set" scoped="" ref="0x7f33938e7ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f33938e7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f33938ee930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f33938ee930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938eec80"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938eee08"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938ed1a8"/>
        <function-ref name="get" scoped="" ref="0x7f33938ed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938ed4b8"/>
        <function-ref name="set" scoped="" ref="0x7f33938ed640"/>
        <function-ref name="clr" scoped="" ref="0x7f33938ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f33938ebd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f33938ebd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938e90d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938e9260"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938e93e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938e9570"/>
        <function-ref name="get" scoped="" ref="0x7f33938e96f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938e9880"/>
        <function-ref name="set" scoped="" ref="0x7f33938e9a08"/>
        <function-ref name="clr" scoped="" ref="0x7f33938e9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f33938e6120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f33938e6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938e6470"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938e65f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938e6780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938e6908"/>
        <function-ref name="get" scoped="" ref="0x7f33938e6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938e6c18"/>
        <function-ref name="set" scoped="" ref="0x7f33938e6da0"/>
        <function-ref name="clr" scoped="" ref="0x7f33938e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f33938eda50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f33938eda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938edda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938ec1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938ec330"/>
        <function-ref name="get" scoped="" ref="0x7f33938ec4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938ec640"/>
        <function-ref name="set" scoped="" ref="0x7f33938ec7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938ec950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f33938e9e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f33938e9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938e81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938e8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938e84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938e8640"/>
        <function-ref name="get" scoped="" ref="0x7f33938e87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938e8950"/>
        <function-ref name="set" scoped="" ref="0x7f33938e8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938e8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f33938e52a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f33938e52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938e55f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938e5780"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938e5908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938e5a90"/>
        <function-ref name="get" scoped="" ref="0x7f33938e5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938e5da0"/>
        <function-ref name="set" scoped="" ref="0x7f33938e4020"/>
        <function-ref name="clr" scoped="" ref="0x7f33938e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e403e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e403e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e40730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e408b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e40a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e40bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3391e40d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e3f020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e3f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e3f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e3d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e3d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e3d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e3d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e3dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e3dc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e3ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e3c020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e3c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e3c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e3a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e3a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e3a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e3aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e3ac68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e3adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e39020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e391a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e39330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e37480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e377d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e37958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e37ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e37c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e37df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e35020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e351a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e33480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e33480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e337d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e33958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e33ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e33c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e33df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e32020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e321a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e30480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e30480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e307d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e30958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e30ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e30c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e30df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e2f020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e2f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e2f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e2d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e2d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e2d958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e2dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e2dc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e2ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e2c020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e2c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e2c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391e2a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391e2a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391e2a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391e2a958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391e2aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391e2ac68"/>
        <function-ref name="get" scoped="" ref="0x7f3391e2adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391e29020"/>
        <function-ref name="set" scoped="" ref="0x7f3391e291a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391e29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f33938dc740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f33938dc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938dca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938dcc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938dcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938db020"/>
        <function-ref name="get" scoped="" ref="0x7f33938db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938db330"/>
        <function-ref name="set" scoped="" ref="0x7f33938db4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f33938d9bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f33938d9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938d8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938d81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938d8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938d84b8"/>
        <function-ref name="get" scoped="" ref="0x7f33938d8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938d87c8"/>
        <function-ref name="set" scoped="" ref="0x7f33938d8950"/>
        <function-ref name="clr" scoped="" ref="0x7f33938d8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f33938df500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f33938df500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938df850"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938df9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938dfb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938dfce8"/>
        <function-ref name="get" scoped="" ref="0x7f33938dfe70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938dd020"/>
        <function-ref name="set" scoped="" ref="0x7f33938dd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938dd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f33938db8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f33938db8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938dbc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938dbda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938da020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938da1a8"/>
        <function-ref name="get" scoped="" ref="0x7f33938da330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938da4b8"/>
        <function-ref name="set" scoped="" ref="0x7f33938da640"/>
        <function-ref name="clr" scoped="" ref="0x7f33938da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f33938d8d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f33938d8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938d70d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938d7260"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938d73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938d7570"/>
        <function-ref name="get" scoped="" ref="0x7f33938d76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938d7880"/>
        <function-ref name="set" scoped="" ref="0x7f33938d7a08"/>
        <function-ref name="clr" scoped="" ref="0x7f33938d7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f33938dd5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f33938dd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938dd908"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938dda90"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938ddc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938ddda0"/>
        <function-ref name="get" scoped="" ref="0x7f33938dc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938dc1a8"/>
        <function-ref name="set" scoped="" ref="0x7f33938dc330"/>
        <function-ref name="clr" scoped="" ref="0x7f33938dc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f33938daa50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f33938daa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938dada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938d9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938d91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938d9330"/>
        <function-ref name="get" scoped="" ref="0x7f33938d94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938d9640"/>
        <function-ref name="set" scoped="" ref="0x7f33938d97c8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938d9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f33938d7e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f33938d7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938d61a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938d6330"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938d64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938d6640"/>
        <function-ref name="get" scoped="" ref="0x7f33938d67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938d6950"/>
        <function-ref name="set" scoped="" ref="0x7f33938d6ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938d6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dd93e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dd93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dd9730"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dd98b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dd9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dd9bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3391dd9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dd8020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dd81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dd8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dd6480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dd6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dd67d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dd6958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dd6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dd6c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dd6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dd5020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dd51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dd5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dd3480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dd3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dd37d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dd3958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dd3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dd3c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dd3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dd2020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dd21a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dd2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dd0480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dd0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dd07d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dd0958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dd0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dd0c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dd0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dce020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dce1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dcc480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dcc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dcc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dcc958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dccae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dccc68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dccdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dcb020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dcb1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dcb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dc9480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dc9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dc97d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dc9958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dc9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dc9c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dc9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dc8020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dc81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dc8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dc6480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dc6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dc67d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dc6958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dc6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dc6c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dc6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dc5020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dc51a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dc5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3391dc3480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3391dc3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3391dc37d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3391dc3958"/>
        <function-ref name="toggle" scoped="" ref="0x7f3391dc3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3391dc3c68"/>
        <function-ref name="get" scoped="" ref="0x7f3391dc3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3391dc2020"/>
        <function-ref name="set" scoped="" ref="0x7f3391dc21a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3391dc2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938cf3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938cf730"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938cf8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938cfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938cfbc8"/>
        <function-ref name="get" scoped="" ref="0x7f33938cfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938b9020"/>
        <function-ref name="set" scoped="" ref="0x7f33938b91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938b5c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938b5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938b4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938b41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938b4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938b44b8"/>
        <function-ref name="get" scoped="" ref="0x7f33938b4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938b47c8"/>
        <function-ref name="set" scoped="" ref="0x7f33938b4950"/>
        <function-ref name="clr" scoped="" ref="0x7f33938b4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938af3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938af3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938af730"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938af8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938afa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938afbc8"/>
        <function-ref name="get" scoped="" ref="0x7f33938afd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938ae020"/>
        <function-ref name="set" scoped="" ref="0x7f33938ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938abc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938abc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938aa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938aa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938aa330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938aa4b8"/>
        <function-ref name="get" scoped="" ref="0x7f33938aa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938aa7c8"/>
        <function-ref name="set" scoped="" ref="0x7f33938aa950"/>
        <function-ref name="clr" scoped="" ref="0x7f33938aaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938a53e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938a53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33938a5730"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938a58b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33938a5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938a5bc8"/>
        <function-ref name="get" scoped="" ref="0x7f33938a5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938a4020"/>
        <function-ref name="set" scoped="" ref="0x7f33938a41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f33938a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938a0c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938a0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339389f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f339389f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339389f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339389f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f339389f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339389f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f339389f950"/>
        <function-ref name="clr" scoped="" ref="0x7f339389fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f339389b480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f339389b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339389b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f339389b958"/>
        <function-ref name="toggle" scoped="" ref="0x7f339389bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339389bc68"/>
        <function-ref name="get" scoped="" ref="0x7f339389bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339389a020"/>
        <function-ref name="set" scoped="" ref="0x7f339389a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f339389a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3393896c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3393896c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393895020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938951a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393895330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938954b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393895640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938957c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393895950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393895ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3393890520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3393890520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393890870"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938909f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393890b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393890d08"/>
        <function-ref name="get" scoped="" ref="0x7f339388f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339388f1a8"/>
        <function-ref name="set" scoped="" ref="0x7f339388f330"/>
        <function-ref name="clr" scoped="" ref="0x7f339388f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f339388ccd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f339388ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339388b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f339388b228"/>
        <function-ref name="toggle" scoped="" ref="0x7f339388b3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339388b538"/>
        <function-ref name="get" scoped="" ref="0x7f339388b6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339388b848"/>
        <function-ref name="set" scoped="" ref="0x7f339388b9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f339388bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33938863e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f33938863e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393886730"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938868b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393886a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3393886bc8"/>
        <function-ref name="get" scoped="" ref="0x7f3393886d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3393885020"/>
        <function-ref name="set" scoped="" ref="0x7f33938851a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3393885330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3393881c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3393881c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393880020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938801a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393880330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938804b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393880640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938807c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393880950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393880ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f339387c3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f339387c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f339387c730"/>
        <function-ref name="isInput" scoped="" ref="0x7f339387c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f339387ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f339387cbc8"/>
        <function-ref name="get" scoped="" ref="0x7f339387cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f339387b020"/>
        <function-ref name="set" scoped="" ref="0x7f339387b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f339387b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f3393877c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f3393877c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3393876020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33938761a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3393876330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33938764b8"/>
        <function-ref name="get" scoped="" ref="0x7f3393876640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33938767c8"/>
        <function-ref name="set" scoped="" ref="0x7f3393876950"/>
        <function-ref name="clr" scoped="" ref="0x7f3393876ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f339383d4b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f339383d4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339383d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f339383dae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f339383dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f339383de30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f339383c020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f339383c1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f339383c330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f339383c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f339381d418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f339381d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339381d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f33939cec38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f33939cec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f339381f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f339381fce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f339381fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339381d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f339381f308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f339381f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339381f658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f339381f7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f339381f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f3393ae81c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f3393ae81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3393ae8518"/>
        <function-ref name="runTask" scoped="" ref="0x7f3393ae86a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f3393ac55c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f3393ac55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3393ac5918"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f3393ac5aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f3393ac5c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f3393a11c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f3393a11c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3393a10020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3393a101a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f3393a0d168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f3393a0d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f3393a0d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f3393a12d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f3393a12d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3393a11170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f3393a112f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f3393a11480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f33939f0988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f33939f0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f33939f0cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f3393ac4e28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f3393ac4e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f33939f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f33939f13c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f33939f13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f33939f1718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f3393776d98" loc="36:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3393776d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3393780170"/>
        <function-ref name="setRoot" scoped="" ref="0x7f33937802f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3393780480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x7f33937785e0" loc="35:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f33937785e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3393778930"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3393778ab8"/>
        <function-ref name="setType" scoped="" ref="0x7f3393778c40"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3393778dc8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3393782020"/>
        <function-ref name="getType" scoped="" ref="0x7f33937821a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f339380d4e0" loc="25:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f339380d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f339380d830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f339380c848" loc="27:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f339380c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f339380cb98"/>
        <function-ref name="stopDone" scoped="" ref="0x7f339380cd20"/>
        <function-ref name="start" scoped="" ref="0x7f339380b020"/>
        <function-ref name="stop" scoped="" ref="0x7f339380b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f339374eb58" loc="49:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x7f339374eb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3393744020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33937441a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x7f339378a740" loc="32:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f339378a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f339378aa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f3393807be0" loc="26:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f3393807be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f339380c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f339380c1a8"/>
        <function-ref name="start" scoped="" ref="0x7f339380c330"/>
        <function-ref name="stop" scoped="" ref="0x7f339380c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3393805020" loc="31:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3393805020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3393805370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33938054f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3393805680"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393805808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3393805990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x7f339376a020" loc="39:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x7f339376a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3393763020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3393769470"/>
        <function-ref name="empty" scoped="" ref="0x7f339376ab68"/>
        <function-ref name="put" scoped="" ref="0x7f33937698c0"/>
        <function-ref name="size" scoped="" ref="0x7f3393769020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f3393751d98" loc="43:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3393751d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3393754908"/>
        <function-ref name="readDone" scoped="" ref="0x7f3393754d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x7f3393781a20" loc="34:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x7f3393781a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3393781d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339378f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339378f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f339378f330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339378f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f3393804cc8" loc="28:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x7f3393804cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33938060a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3393806228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f339378ad20" loc="33:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f339378ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33938030a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3393745c38" loc="44:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3393745c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f339374f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f339374f1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f339374f330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f339374f4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f339374f640"/>
        <function-ref name="get" scoped="" ref="0x7f339374f7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f339374f950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f339374e020"/>
        <function-ref name="set" scoped="" ref="0x7f339374fad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f339374fc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f339374fde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x7f339376ed10" loc="38:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x7f339376ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f3393774610"/>
        <function-ref name="enqueue" scoped="" ref="0x7f339376c300"/>
        <function-ref name="element" scoped="" ref="0x7f339376c930"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33937741c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3393774c70"/>
        <function-ref name="empty" scoped="" ref="0x7f33937778b8"/>
        <function-ref name="size" scoped="" ref="0x7f3393777d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3393758d50" loc="42:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3393758d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33937550c0"/>
        <function-ref name="fired" scoped="" ref="0x7f3393761798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33937574d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3393757088"/>
        <function-ref name="getdt" scoped="" ref="0x7f3393755960"/>
        <function-ref name="gett0" scoped="" ref="0x7f3393755510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3393761be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33937629e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3393757aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3393762e80"/>
        <function-ref name="stop" scoped="" ref="0x7f3393761348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f33936ff8d0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f33936ff8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33936ffc20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33936ffda8"/>
        <function-ref name="led1On" scoped="" ref="0x7f33936fc020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33936fc1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33936fc330"/>
        <function-ref name="get" scoped="" ref="0x7f33936fc4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33936fc640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33936fcc60"/>
        <function-ref name="set" scoped="" ref="0x7f33936fc7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f33936fc950"/>
        <function-ref name="led2On" scoped="" ref="0x7f33936fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f33936f6850" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f33936f6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33936f6ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33936f6d28"/>
        <function-ref name="toggle" scoped="" ref="0x7f33936f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33936f51a8"/>
        <function-ref name="get" scoped="" ref="0x7f33936f5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33936f54b8"/>
        <function-ref name="set" scoped="" ref="0x7f33936f5640"/>
        <function-ref name="clr" scoped="" ref="0x7f33936f57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33936fbb08" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33936fbb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33936fbe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f33936f5ae0" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f33936f5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33936f5e30"/>
        <function-ref name="isInput" scoped="" ref="0x7f33936f4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33936f41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33936f4330"/>
        <function-ref name="get" scoped="" ref="0x7f33936f44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33936f4640"/>
        <function-ref name="set" scoped="" ref="0x7f33936f47c8"/>
        <function-ref name="clr" scoped="" ref="0x7f33936f4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f33936f7110" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f33936f7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33936f7460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33936f75e8"/>
        <function-ref name="led1On" scoped="" ref="0x7f33936f7770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33936f78f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33936f7a80"/>
        <function-ref name="get" scoped="" ref="0x7f33936f7c08"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33936f7d90"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33936f64b8"/>
        <function-ref name="set" scoped="" ref="0x7f33936f6020"/>
        <function-ref name="led0On" scoped="" ref="0x7f33936f61a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f33936f6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f33936f4c68" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f33936f4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33936f3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33936f31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33936f3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33936f34b8"/>
        <function-ref name="get" scoped="" ref="0x7f33936f3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33936f37c8"/>
        <function-ref name="set" scoped="" ref="0x7f33936f3950"/>
        <function-ref name="clr" scoped="" ref="0x7f33936f3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f33936d9060" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f33936d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33936d93b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33936d9538"/>
        <function-ref name="toggle" scoped="" ref="0x7f33936d96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33936d9848"/>
        <function-ref name="get" scoped="" ref="0x7f33936d99d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33936d9b58"/>
        <function-ref name="set" scoped="" ref="0x7f33936d9ce0"/>
        <function-ref name="clr" scoped="" ref="0x7f33936d9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f33936d81f0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f33936d81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33936d8540"/>
        <function-ref name="isInput" scoped="" ref="0x7f33936d86c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f33936d8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33936d89d8"/>
        <function-ref name="get" scoped="" ref="0x7f33936d8b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33936d8ce8"/>
        <function-ref name="set" scoped="" ref="0x7f33936d8e70"/>
        <function-ref name="clr" scoped="" ref="0x7f33936d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f33936d6460" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33936d6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33936d67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f33936d7378" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f33936d7378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33936d76c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f33936d7850"/>
        <function-ref name="toggle" scoped="" ref="0x7f33936d79d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33936d7b60"/>
        <function-ref name="get" scoped="" ref="0x7f33936d7ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33936d7e70"/>
        <function-ref name="set" scoped="" ref="0x7f33936d6020"/>
        <function-ref name="clr" scoped="" ref="0x7f33936d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33936cfa60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f33936cfa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3393510d60"/>
        <function-ref name="fired" scoped="" ref="0x7f3393511470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33935101c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3393511d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f339350f648"/>
        <function-ref name="gett0" scoped="" ref="0x7f339350f1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33935118c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3393513620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3393510790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3393513ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f3393511020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f33936c66a0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f33936c66a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33936c3a18"/>
        <function-ref name="fired" scoped="" ref="0x7f33936c4158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33936c4e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33936c49f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f33936c12e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f33936c3e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33936c45a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33936c5370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33936c3448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33936c5810"/>
        <function-ref name="stop" scoped="" ref="0x7f33936c5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f33936bedb8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f33936bedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33936b9088"/>
        <function-ref name="fired" scoped="" ref="0x7f33936bb708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33936ba470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33936ba020"/>
        <function-ref name="getdt" scoped="" ref="0x7f33936b9928"/>
        <function-ref name="gett0" scoped="" ref="0x7f33936b94d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33936bbb58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33936bd930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33936baa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33936bddd0"/>
        <function-ref name="stop" scoped="" ref="0x7f33936bb2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f33936b4298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f33936b4298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33936b4e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33936be0c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33936be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33936be410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f33936a53b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f33936a53b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33936a4130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33936a4a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33936a45b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f33936a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33936b68e8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33936b68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33936b6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f33936af1c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f33936af1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33936a8918"/>
        <function-ref name="fired" scoped="" ref="0x7f33936ae980"/>
        <function-ref name="startAt" scoped="" ref="0x7f33936a8310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33936aee08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33936a8da0"/>
        <function-ref name="start" scoped="" ref="0x7f33936ae020"/>
        <function-ref name="stop" scoped="" ref="0x7f33936ae4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33935ab7c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f33935ab7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33935a8020"/>
        <function-ref name="fired" scoped="" ref="0x7f33935a9020"/>
        <function-ref name="startAt" scoped="" ref="0x7f33935a9930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33935a94a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33935a84a8"/>
        <function-ref name="start" scoped="" ref="0x7f33935aa578"/>
        <function-ref name="stop" scoped="" ref="0x7f33935aaa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33935ab020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33935ab020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f3393ae3388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f3393ae3388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33935ab370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33935a8a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f33935a8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33935a6828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33935a5190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33935a6cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33935a5618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f3391ce3e70" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3391ce3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3391ce11e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3391ce1370"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3391ce14f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3391ce1680"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3391ce1808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3391ce1990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3391ce1b18"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3391ce1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3391cf7b40" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3391cf7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3391cf3238"/>
        <function-ref name="fired" scoped="" ref="0x7f3391cf42b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3391cf4bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3391cf4738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3391cf36c0"/>
        <function-ref name="start" scoped="" ref="0x7f3391cf68f8"/>
        <function-ref name="stop" scoped="" ref="0x7f3391cf6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3391cf7398" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3391cf7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3391cf76e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3391cf3ca8" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3391cf3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3391cf2a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3391cf14a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3391cf1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f3391cf1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f3391cdc200" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f3391cdc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f3391cdc550"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f3391cdc6d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f3391cdc860"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f3391cdc9e8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f3391cdcb70"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f3391cdccf8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f3391cdce80"/>
        <function-ref name="setAssr" scoped="" ref="0x7f3391cdb030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f3391ce0060" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3391ce0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3391cde930"/>
        <function-ref name="fired" scoped="" ref="0x7f3391cdf598"/>
        <function-ref name="get" scoped="" ref="0x7f3391ce0be0"/>
        <function-ref name="reset" scoped="" ref="0x7f3391cdfa20"/>
        <function-ref name="isOn" scoped="" ref="0x7f3391cdedb8"/>
        <function-ref name="set" scoped="" ref="0x7f3391cdf0c0"/>
        <function-ref name="start" scoped="" ref="0x7f3391cde020"/>
        <function-ref name="stop" scoped="" ref="0x7f3391cde4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3391cef020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3391cef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3391ce30f8"/>
        <function-ref name="test" scoped="" ref="0x7f3391ced7a8"/>
        <function-ref name="get" scoped="" ref="0x7f3391cefba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f3391ce3580"/>
        <function-ref name="getScale" scoped="" ref="0x7f3391ce3a58"/>
        <function-ref name="reset" scoped="" ref="0x7f3391cee9e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3391cee560"/>
        <function-ref name="isOn" scoped="" ref="0x7f3391cedc30"/>
        <function-ref name="set" scoped="" ref="0x7f3391cee088"/>
        <function-ref name="start" scoped="" ref="0x7f3391ceee70"/>
        <function-ref name="stop" scoped="" ref="0x7f3391ced320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f339361a5c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f339361a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f339361a910"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f339361aa98"/>
        <function-ref name="getControlA" scoped="" ref="0x7f339361ac20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f339361ada8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3393619020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f33936191a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3393619330"/>
        <function-ref name="setControlA" scoped="" ref="0x7f33936194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f3393615c38" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f3393615c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f3393614020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f33936141a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f3393614330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f33936144b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f3393614640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f33936147c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f3393614950"/>
        <function-ref name="setAssr" scoped="" ref="0x7f3393614ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3393619980" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3393619980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3393615270"/>
        <function-ref name="fired" scoped="" ref="0x7f3393616020"/>
        <function-ref name="get" scoped="" ref="0x7f3393617560"/>
        <function-ref name="reset" scoped="" ref="0x7f33936164a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f33936156f8"/>
        <function-ref name="set" scoped="" ref="0x7f33936179e8"/>
        <function-ref name="start" scoped="" ref="0x7f3393616930"/>
        <function-ref name="stop" scoped="" ref="0x7f3393616db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f339361f618" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f339361f618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f339361b6f8"/>
        <function-ref name="test" scoped="" ref="0x7f339361cdb8"/>
        <function-ref name="get" scoped="" ref="0x7f339361e1d0"/>
        <function-ref name="setScale" scoped="" ref="0x7f339361bb80"/>
        <function-ref name="getScale" scoped="" ref="0x7f339361a088"/>
        <function-ref name="reset" scoped="" ref="0x7f339361c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f339361eb30"/>
        <function-ref name="isOn" scoped="" ref="0x7f339361b270"/>
        <function-ref name="set" scoped="" ref="0x7f339361e658"/>
        <function-ref name="start" scoped="" ref="0x7f339361c4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f339361c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f339360a020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f339360a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f339360a370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f339360a4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f339360a680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f339360a808"/>
        <function-ref name="setControlB" scoped="" ref="0x7f339360a990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f339360ab18"/>
        <function-ref name="getControlB" scoped="" ref="0x7f339360aca0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f339360ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f3393606578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f3393606578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f33936068c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f3393606c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f3393606c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f3393604020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f33936041a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f3393604330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f33936044b8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f3393604640"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f33936047c8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f3393604950"/>
        <function-ref name="setAssr" scoped="" ref="0x7f3393604ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3393609340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3393609340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3393607c20"/>
        <function-ref name="fired" scoped="" ref="0x7f3393608980"/>
        <function-ref name="get" scoped="" ref="0x7f3393608020"/>
        <function-ref name="reset" scoped="" ref="0x7f3393608e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f33936060f8"/>
        <function-ref name="set" scoped="" ref="0x7f33936084a8"/>
        <function-ref name="start" scoped="" ref="0x7f3393607310"/>
        <function-ref name="stop" scoped="" ref="0x7f3393607798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f339360f020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f339360f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f339360c0f8"/>
        <function-ref name="test" scoped="" ref="0x7f339360d7a8"/>
        <function-ref name="get" scoped="" ref="0x7f339360fba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f339360c580"/>
        <function-ref name="getScale" scoped="" ref="0x7f339360ca58"/>
        <function-ref name="reset" scoped="" ref="0x7f339360e9e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f339360e560"/>
        <function-ref name="isOn" scoped="" ref="0x7f339360dc30"/>
        <function-ref name="set" scoped="" ref="0x7f339360e088"/>
        <function-ref name="start" scoped="" ref="0x7f339360ee70"/>
        <function-ref name="stop" scoped="" ref="0x7f339360d320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f3393575cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f3393575cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33935740a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3393574228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f3393579c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3393579c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3393575410"/>
        <function-ref name="fired" scoped="" ref="0x7f33935774a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f3393577db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3393577930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3393575898"/>
        <function-ref name="start" scoped="" ref="0x7f33935789f0"/>
        <function-ref name="stop" scoped="" ref="0x7f3393577020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f339357eab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f339357eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f339357ad60"/>
        <function-ref name="fired" scoped="" ref="0x7f339357c470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f339357a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f339357cd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f3393579648"/>
        <function-ref name="gett0" scoped="" ref="0x7f33935791f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f339357c8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f339357d620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f339357a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f339357dac0"/>
        <function-ref name="stop" scoped="" ref="0x7f339357c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f3393527930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f3393527930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3393527c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f3393527e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f339352c858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f339352c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3393528bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f339352a1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3393528020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f339352aa60"/>
        <function-ref name="getdt" scoped="" ref="0x7f33935274d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f3393527088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f339352a610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f339352b3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33935285f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f339352b878"/>
        <function-ref name="stop" scoped="" ref="0x7f339352bd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33935325e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f33935325e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f339352e988"/>
        <function-ref name="fired" scoped="" ref="0x7f3393530020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3393530d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3393530900"/>
        <function-ref name="getdt" scoped="" ref="0x7f339352c2d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f339352edf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3393530490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3393531198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f339352e398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3393531658"/>
        <function-ref name="stop" scoped="" ref="0x7f3393531b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3393523128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3393523128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3393523ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f339351a330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f339351a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33935190c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33935199d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3393519548"/>
        <function-ref name="overflow" scoped="" ref="0x7f3393519e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f339350d350" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f339350d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f339350c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f339350c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3391c827b0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3391c827b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3391c81370"/>
        <function-ref name="readDone" scoped="" ref="0x7f3391c817c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3391c7c3f0" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3391c7c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3391c7c740"/>
        <function-ref name="configure" scoped="" ref="0x7f3391c7c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3391c7e558" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f3391c7e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3391c7d0f8"/>
        <function-ref name="readDone" scoped="" ref="0x7f3391c7d548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f3391c7db00" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3391c7db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f3391c7de50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3391c7c020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f3391c7c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f33934f81c8" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f33934f81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33934f8d10"/>
        <function-ref name="readDone" scoped="" ref="0x7f33934f71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f33934f2df8" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f33934f2df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33934f5a18"/>
        <function-ref name="readDone" scoped="" ref="0x7f33934f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f33934f4ba8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f33934f4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f33934f0020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33934f01a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f33934f0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f33934ebc28" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f33934ebc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33934ee020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33934ee1a8"/>
        <function-ref name="request" scoped="" ref="0x7f33934ee330"/>
        <function-ref name="granted" scoped="" ref="0x7f33934ee4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33934ee640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33934e51c8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33934e51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33934e5518"/>
        <function-ref name="configure" scoped="" ref="0x7f33934e56a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f33934db420" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f33934db420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f33934db770"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33934db8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f33934e1ac8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33934e1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f33934e1e18"/>
        <function-ref name="cancel" scoped="" ref="0x7f33934e6020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33934e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33934e8778" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f33934e8778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33934e8ac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33934e8c50"/>
        <function-ref name="request" scoped="" ref="0x7f33934e8dd8"/>
        <function-ref name="granted" scoped="" ref="0x7f33934e7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33934e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33934d96e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33934d96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33934d9a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f33934d86a8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f33934d86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f33934d89f8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33934d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f33934d4ce0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33934d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f33934d80a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33934d8228"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33934d83b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f33934c5320" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f33934c5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f33934c5670"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f33934c57f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f33934c5980"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f33934c5b08"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f33934c5c90"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f33934c5e18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f33934d3020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f33934d31a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f33934d3330"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f33934d34b8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f33934d3640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f33934d37c8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f33934d3950"/>
        <function-ref name="isStarted" scoped="" ref="0x7f33934d3bd8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f33934d3d60"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f33934d2020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f33934d21a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f33934d2330"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33934d24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f33934d4528" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33934d4528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33934d4878"/>
        <function-ref name="stop" scoped="" ref="0x7f33934d4a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f33934d2798" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33934d2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f33934d2ae8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f33934d2c70"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f33934d2df8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f33934c4020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f33934c41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f3393494230" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f3393494230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f3393494580"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f3393494708"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f3393494890"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f3393494a18"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f3393494ba0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f3393494d28"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f3393493020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f33934931a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393493330"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f33934934b8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f3393493640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f33934937c8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f3393493950"/>
        <function-ref name="isStarted" scoped="" ref="0x7f3393493bd8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f3393493d60"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f3393492020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f33934921a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f3393492330"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33934924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f339348f5e8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f339348f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f339348f938"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f339348fac0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f339348fc48"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f339348fdd0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f339348e020"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f339348e1a8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f339348e330"/>
        <function-ref name="isComplete" scoped="" ref="0x7f339348e4b8"/>
        <function-ref name="cancel" scoped="" ref="0x7f339348e640"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f339348e7c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f339348e950"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f339348ead8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f339348ec60"/>
        <function-ref name="isStarted" scoped="" ref="0x7f339348d020"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f339348d1a8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f339348d330"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f339348d4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f339348d640"/>
        <function-ref name="dataReady" scoped="" ref="0x7f339348d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f339348dad8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f339348dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f339348de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33933e2698" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33933e2698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33933e2a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33933e2b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33933df3c8" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33933df3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33933df738"/>
        <function-ref name="configure" scoped="" ref="0x7f33933df8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f33933e2dd8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33933e2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33933e0170"/>
        <function-ref name="requested" scoped="" ref="0x7f33933e02f8"/>
        <function-ref name="granted" scoped="" ref="0x7f33933e0480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33933e0608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33933e0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33933e3840" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f33933e3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33933e3bb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33933e3d38"/>
        <function-ref name="request" scoped="" ref="0x7f33933e2020"/>
        <function-ref name="granted" scoped="" ref="0x7f33933e21a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33933e2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33933e09d8" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33933e09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33933e0d28"/>
        <function-ref name="userId" scoped="" ref="0x7f33933df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3391c6c9d0" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3391c6c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3391c6cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f3391c6b020" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f3391c6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3391c6b370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3391c6b4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3391c6b680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3391c6b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3391c69d58" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3391c69d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3391c680f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3391c68278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3391c67980" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3391c67980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3391c67cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f3391c67e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3391c65130" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3391c65130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3391c65480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3391c65608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3391c65790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3391c65918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f3391c684c0" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3391c684c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3391c68810"/>
        <function-ref name="requested" scoped="" ref="0x7f3391c68998"/>
        <function-ref name="granted" scoped="" ref="0x7f3391c68b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3391c68ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3391c68e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3391c65b60" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3391c65b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3391c64020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3391c641a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3391c64330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3391c644b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3391c64640"/>
        <function-ref name="get" scoped="" ref="0x7f3391c647c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3391c64950"/>
        <function-ref name="led0On" scoped="" ref="0x7f3391c63020"/>
        <function-ref name="set" scoped="" ref="0x7f3391c64c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f3391c64ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3391c64de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3391c69060" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3391c69060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3391c693d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3391c69558"/>
        <function-ref name="request" scoped="" ref="0x7f3391c696e0"/>
        <function-ref name="granted" scoped="" ref="0x7f3391c69868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3391c699f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3391c670e0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3391c670e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3391c67430"/>
        <function-ref name="userId" scoped="" ref="0x7f3391c675b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3391c632e8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f3391c632e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391c63638"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391c637c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f33933dc780" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f33933dc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f33933dcad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f33933dcd18" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33933dcd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33933c70a0"/>
        <function-ref name="requested" scoped="" ref="0x7f33933c7228"/>
        <function-ref name="granted" scoped="" ref="0x7f33933c73b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33933c7538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33933c76c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f33933dc060" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33933dc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33933dc3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f33933dc538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f33933c7908" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33933c7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33933c7c58"/>
        <function-ref name="userId" scoped="" ref="0x7f33933c7de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f3391c32740" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3391c32740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f3391c32a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f3391c32cd8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3391c32cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3391c310a0"/>
        <function-ref name="requested" scoped="" ref="0x7f3391c31228"/>
        <function-ref name="granted" scoped="" ref="0x7f3391c313b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3391c31538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3391c316c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f3391c32020" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3391c32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3391c32370"/>
        <function-ref name="stop" scoped="" ref="0x7f3391c324f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3391c31908" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3391c31908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3391c31c58"/>
        <function-ref name="userId" scoped="" ref="0x7f3391c31de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f33933b5e50" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f33933b5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f33933b6be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f33933be6a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f33933be6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33933bd370"/>
        <function-ref name="readDone" scoped="" ref="0x7f33933bd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f33933bc428" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f33933bc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33933ba020"/>
        <function-ref name="readDone" scoped="" ref="0x7f33933ba4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f33933b99a0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f33933b99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f33933b9cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33933b9e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f33933b8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f33933bab18" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f33933bab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f33933bae68"/>
        <function-ref name="cancel" scoped="" ref="0x7f33933b9020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f33933b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f33933a5368" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f33933a5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33933a56b8"/>
        <function-ref name="runTask" scoped="" ref="0x7f33933a5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f33933bfc28" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f33933bfc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f33933909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f339338c680" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f339338c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3393375370"/>
        <function-ref name="readDone" scoped="" ref="0x7f33933757e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f3393373060" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f3393373060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3393373bc8"/>
        <function-ref name="readDone" scoped="" ref="0x7f3393372088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f3393372720" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3393372720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3393372a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3393372c18"/>
        <function-ref name="request" scoped="" ref="0x7f3393372da0"/>
        <function-ref name="granted" scoped="" ref="0x7f3393371020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33933711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f3393367d18" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f3393367d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f33933640a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3393364228"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f33933643b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f33933252d8" loc="59:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f33933252d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3393325628"/>
        <function-ref name="setRoot" scoped="" ref="0x7f33933257b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3393325938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f3393341d30" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f3393341d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f339334e0d8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f339334e260"/>
        <function-ref name="setType" scoped="" ref="0x7f339334e3e8"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f339334e570"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f339334e6f8"/>
        <function-ref name="getType" scoped="" ref="0x7f339334e880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f339331f020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f339331f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f339331f470"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f339331f5f8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f339331f780"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f339331f908"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f339331fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f339334ab48" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f339334ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f339334f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33933410d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33933410d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3393341420"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33933415a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3393341730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33933418b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3393341a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3393351b60" loc="50:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3393351b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3393350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3393353ce8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3393353ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33933520a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3393352228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33933523b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393352538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33933526c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f339332f020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f339332f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f339332f370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f339332f4f8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f339332f680"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f339332f808"/>
        <function-ref name="getEtx" scoped="" ref="0x7f339332f990"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f339332fb18"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f339332fca0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f339332fe28"/>
        <function-ref name="getParent" scoped="" ref="0x7f339332e020"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f339332e1a8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f339332e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3393351020" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3393351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3393351370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f3393323a88" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f3393323a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f3393323dd8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f3393325020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f3393330350" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f3393330350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f33933306a0"/>
        <function-ref name="option" scoped="" ref="0x7f3393330828"/>
        <function-ref name="setEtx" scoped="" ref="0x7f33933309b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f3393330b38"/>
        <function-ref name="clearOption" scoped="" ref="0x7f3393330cc0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f3393330e48"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f339334b020"/>
        <function-ref name="setType" scoped="" ref="0x7f339334b1a8"/>
        <function-ref name="setOption" scoped="" ref="0x7f339334b330"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f339334b4b8"/>
        <function-ref name="getThl" scoped="" ref="0x7f339334b640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f339334b7c8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f339334b950"/>
        <function-ref name="getType" scoped="" ref="0x7f339334bbd8"/>
        <function-ref name="setThl" scoped="" ref="0x7f339334bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3393353080" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f3393353080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33933533d0"/>
        <function-ref name="stop" scoped="" ref="0x7f3393353558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f3393322020" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f3393322020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f3393322370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f3393303020" loc="92:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f3393303020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f3393303370"/>
        <function-ref name="setRoot" scoped="" ref="0x7f33933034f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f3393303680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f3393310020" loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f3393310020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3393310370"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f33933104f8"/>
        <function-ref name="setType" scoped="" ref="0x7f3393310680"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f3393310808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3393310990"/>
        <function-ref name="getType" scoped="" ref="0x7f3393310b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f3393304568" loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f3393304568"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f33933048b8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f3393304a40"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f3393304bc8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f3393304d50"/>
        <function-ref name="evicted" scoped="" ref="0x7f339330b020"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f339330b1a8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f339330b330"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f339330b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f3393302750" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3393302750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3393302aa0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f3393302c28"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3393302db0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3393301020"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f33933011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f3393312b88" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f3393312b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f3393311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33933112a8" loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33933112a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33933115f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3393311780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3393311908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3393311a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3393311c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3393312050" loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3393312050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33933123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3393315370" loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3393315370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33933156c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3393315848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33933159d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393315b58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3393315ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f339330eb58" loc="89:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f339330eb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f339330d020"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f339330d1a8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f339330d330"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f339330d4b8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f339330d640"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f339330d7c8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f339330d950"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f339330dad8"/>
        <function-ref name="getParent" scoped="" ref="0x7f339330dc60"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f339330dde8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f339330c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33933144e8" loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33933144e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3393314838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f339330b788" loc="91:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f339330b788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f339330bad8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f339330bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f3393310dc0" loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f3393310dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f339330f170"/>
        <function-ref name="option" scoped="" ref="0x7f339330f2f8"/>
        <function-ref name="setEtx" scoped="" ref="0x7f339330f480"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f339330f608"/>
        <function-ref name="clearOption" scoped="" ref="0x7f339330f790"/>
        <function-ref name="getEtx" scoped="" ref="0x7f339330f918"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f339330faa0"/>
        <function-ref name="setType" scoped="" ref="0x7f339330fc28"/>
        <function-ref name="setOption" scoped="" ref="0x7f339330fdb0"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f339330e020"/>
        <function-ref name="getThl" scoped="" ref="0x7f339330e1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f339330e330"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f339330e4b8"/>
        <function-ref name="getType" scoped="" ref="0x7f339330e740"/>
        <function-ref name="setThl" scoped="" ref="0x7f339330e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f339331e6c8" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f339331e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f339331ea18"/>
        <function-ref name="stop" scoped="" ref="0x7f339331eba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f3393302020" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f3393302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f3393302470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33932ffa20" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f33932ffa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33932ffd70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33932fc020"/>
        <function-ref name="start" scoped="" ref="0x7f33932fc1a8"/>
        <function-ref name="stop" scoped="" ref="0x7f33932fc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f33932f5df8" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f33932f5df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f33932f8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33932f83f8" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33932f83f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33932f8748"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33932f88d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33932f8a58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33932f8be0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33932f8d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33932fcaa8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33932fcaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33932fcdf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33932fb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33932fb1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f33932fb330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33932fb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33932fa818" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f33932fa818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932fab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33932d7418" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932d7418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33932d7768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33932d78f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33932d7a78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33932d7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33932fbc38" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33932fbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33932decb0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33932e40a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f33932e4228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33932e43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33932cf1d8" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f33932cf1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f33932cf528"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33932cf6b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f33932cf838"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f33932cf9c0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f33932cfb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33932e3b58" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33932e3b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33932f4020"/>
        <function-ref name="source" scoped="" ref="0x7f33932f41a8"/>
        <function-ref name="address" scoped="" ref="0x7f33932f4330"/>
        <function-ref name="destination" scoped="" ref="0x7f33932f44b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f33932f4640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33932f47c8"/>
        <function-ref name="type" scoped="" ref="0x7f33932f4950"/>
        <function-ref name="setType" scoped="" ref="0x7f33932f4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33932f4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33932f4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33932f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f33932cdc48" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f33932cdc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f33932d9020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33932d91a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33932d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f33932c58c0" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f33932c58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33932d3d40"/>
        <function-ref name="clear" scoped="" ref="0x7f33932cc458"/>
        <function-ref name="isValid" scoped="" ref="0x7f33932d3660"/>
        <function-ref name="set" scoped="" ref="0x7f33932ccb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f33932c3758" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33932c3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33932c2cc0"/>
        <function-ref name="clear" scoped="" ref="0x7f33932c1420"/>
        <function-ref name="isValid" scoped="" ref="0x7f33932c25e0"/>
        <function-ref name="set" scoped="" ref="0x7f33932c1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33932bfd10" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f33932bfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33932bc0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33932bc228"/>
        <function-ref name="start" scoped="" ref="0x7f33932bc3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f33932bc538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f33932a60c8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f33932a60c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33932a56a0"/>
        <function-ref name="get" scoped="" ref="0x7f33932a5190"/>
        <function-ref name="isSet" scoped="" ref="0x7f33932a6c48"/>
        <function-ref name="set" scoped="" ref="0x7f33932a5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f339329c478" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f339329c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f339329b900"/>
        <function-ref name="clear" scoped="" ref="0x7f3393299020"/>
        <function-ref name="isValid" scoped="" ref="0x7f339329b220"/>
        <function-ref name="set" scoped="" ref="0x7f3393299700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f33932b94e8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f33932b94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f33932b9838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33932b7360" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33932b7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33932b76b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33932b7838"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33932b79c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33932b7b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33932b7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33932bccb0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33932bccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33932bb0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33932bb228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33932bb3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33932bb538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33932bb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33932ba9b8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f33932ba9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932bad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f33932afd80" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f33932afd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33932a8388"/>
        <function-ref name="get" scoped="" ref="0x7f33932a9e38"/>
        <function-ref name="isSet" scoped="" ref="0x7f33932a9928"/>
        <function-ref name="set" scoped="" ref="0x7f33932a8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33932b3020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33932b3370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33932b34f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33932b3680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33932b3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33932bbe40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33932bbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932ba1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f33932a15d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f33932a15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f339329fa88"/>
        <function-ref name="clear" scoped="" ref="0x7f339329d190"/>
        <function-ref name="isValid" scoped="" ref="0x7f339329f3a8"/>
        <function-ref name="set" scoped="" ref="0x7f339329d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f33932a21d8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f33932a21d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33932a2d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f33932ab930" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f33932ab930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33932af020"/>
        <function-ref name="get" scoped="" ref="0x7f33932b09f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f33932b04e0"/>
        <function-ref name="set" scoped="" ref="0x7f33932af530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33932b4658" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33932b4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33932b49a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f33932b4b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33932b4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f33932b81c8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f33932b81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932b8518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33932b3ab8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f33932b3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f33932b3e08"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33932b2020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f33932b21a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f33932b2330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f33932b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33932b5020" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33932b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33932b5370"/>
        <function-ref name="source" scoped="" ref="0x7f33932b54f8"/>
        <function-ref name="address" scoped="" ref="0x7f33932b5680"/>
        <function-ref name="destination" scoped="" ref="0x7f33932b5808"/>
        <function-ref name="setSource" scoped="" ref="0x7f33932b5990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33932b5b18"/>
        <function-ref name="type" scoped="" ref="0x7f33932b5ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f33932b5e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33932b4020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33932b41a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33932b4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f33932b2780" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f33932b2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f33932b2bd0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33932b2d58"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33932b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f33932a0990" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33932a0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f33932a0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f33932b8d58" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f33932b8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932b70d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3393298810" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3393298810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3393298b60"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3393298ce8"/>
        <function-ref name="start" scoped="" ref="0x7f3393298e70"/>
        <function-ref name="stop" scoped="" ref="0x7f3393294020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f339326f348" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f339326f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339326ea40"/>
        <function-ref name="get" scoped="" ref="0x7f339326e530"/>
        <function-ref name="isSet" scoped="" ref="0x7f339326e020"/>
        <function-ref name="set" scoped="" ref="0x7f339326c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f3393284218" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f3393284218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3393284568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f3393284dd8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f3393284dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33932832e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3393283470"/>
        <function-ref name="request" scoped="" ref="0x7f33932835f8"/>
        <function-ref name="granted" scoped="" ref="0x7f3393283780"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3393283908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3393290020" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3393290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3393290370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3393294798" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3393294798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3393294ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3393294c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3393294df8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393293020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33932931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3393291498" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3393291498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33932917e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3393279c80" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3393279c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f3393282020"/>
        <function-ref name="address" scoped="" ref="0x7f33932821a8"/>
        <function-ref name="destination" scoped="" ref="0x7f3393282330"/>
        <function-ref name="setSource" scoped="" ref="0x7f33932824b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3393282640"/>
        <function-ref name="pan" scoped="" ref="0x7f33932827c8"/>
        <function-ref name="setPan" scoped="" ref="0x7f3393282950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3393282ad8"/>
        <function-ref name="localPan" scoped="" ref="0x7f3393282c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f3393281060" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f3393281060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33932813b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3393281538"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33932816c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3393281848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33932819d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3393272020" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3393272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3393271608"/>
        <function-ref name="get" scoped="" ref="0x7f33932710f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f3393272ba0"/>
        <function-ref name="set" scoped="" ref="0x7f3393271b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33932786a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33932786a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33932789f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3393278b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3393278d08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3393277020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f339328d550" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f339328d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339328d8a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f339328da28"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339328dbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339328dd38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339328c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3393293928" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3393293928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3393293c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f339326a298" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f339326a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3393269900"/>
        <function-ref name="clear" scoped="" ref="0x7f3393267020"/>
        <function-ref name="isValid" scoped="" ref="0x7f3393269220"/>
        <function-ref name="set" scoped="" ref="0x7f3393267700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f339326ce78" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f339326ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339326ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3393276b78" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3393276b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3393273190"/>
        <function-ref name="get" scoped="" ref="0x7f3393275c38"/>
        <function-ref name="isSet" scoped="" ref="0x7f3393275728"/>
        <function-ref name="set" scoped="" ref="0x7f33932736a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3393281cf8" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3393281cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33932780a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3393278228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33932783b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f3393285d80" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f3393285d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339328b170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339328b2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339328b480"/>
        <function-ref name="cancel" scoped="" ref="0x7f339328b608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339328b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f3393290be0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3393290be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f339328f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33932772d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f33932772d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3393277620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33932777a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3393277930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3393277ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3393277c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3393276020" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3393276020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3393276370"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33932764f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3393276680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f339328fe50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f339328fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f339328e1e8"/>
        <function-ref name="source" scoped="" ref="0x7f339328e370"/>
        <function-ref name="address" scoped="" ref="0x7f339328e4f8"/>
        <function-ref name="destination" scoped="" ref="0x7f339328e680"/>
        <function-ref name="setSource" scoped="" ref="0x7f339328e808"/>
        <function-ref name="setDestination" scoped="" ref="0x7f339328e990"/>
        <function-ref name="type" scoped="" ref="0x7f339328eb18"/>
        <function-ref name="setType" scoped="" ref="0x7f339328eca0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f339328ee28"/>
        <function-ref name="setGroup" scoped="" ref="0x7f339328d020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f339328d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3393266378" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3393266378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33932657d8"/>
        <function-ref name="clear" scoped="" ref="0x7f3393263020"/>
        <function-ref name="isValid" scoped="" ref="0x7f33932650f8"/>
        <function-ref name="set" scoped="" ref="0x7f3393263700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f339328baf0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f339328baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f339328be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f339326c668" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f339326c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f339326c9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f339328f860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f339328f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f339328fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f3393235300" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f3393235300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3393235650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f3393249c00" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f3393249c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f3393250020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f3393238760" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f3393238760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3393238ab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f3393238c38"/>
        <function-ref name="source" scoped="" ref="0x7f3393238dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f3393248020"/>
        <function-ref name="setSource" scoped="" ref="0x7f33932481a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3393248330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33932484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f339323f570" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f339323f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f339323f8c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f339323fa48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f339323fbd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f339323fd58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f339324b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f33932163f0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f33932163f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3393216740"/>
        <function-ref name="wait" scoped="" ref="0x7f33932168c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393216a50"/>
        <function-ref name="isFree" scoped="" ref="0x7f3393216bd8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3393216d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f339320f688" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f339320f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339320f9d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f339320fb60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339320fce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339320fe70"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3393219020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f33932191a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3393219730" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3393219730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3393215cc0"/>
        <function-ref name="clear" scoped="" ref="0x7f339320e420"/>
        <function-ref name="isValid" scoped="" ref="0x7f33932155e0"/>
        <function-ref name="set" scoped="" ref="0x7f339320eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f339325ae48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f339325ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339325f1c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f339325f348"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f339325f4d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f339325f658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f339325f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f339324a6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f339324a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f339324aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f3393251af0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f3393251af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3393251e40"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f339325e020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f339325e1a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f339325e330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f339325e4b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f339325e640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f339325e7c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f339325e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f339321c5e8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f339321c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f339321c938"/>
        <function-ref name="getDSN" scoped="" ref="0x7f339321cac0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f339321cc48"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f339321cdd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f339323e020"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f339323e1a8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f339323e330"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f339323e4b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f339323e640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f339323e7c8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f339323e950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f339323ead8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f339323ec60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3393236020"/>
        <function-ref name="localPan" scoped="" ref="0x7f33932361a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3393236330"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f33932364b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3393236640"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f33932367c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3393236950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3393236ad8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3393236c60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3393236de8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f339321b020"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f339321b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f339324cb40" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f339324cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3393259020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f33932591a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3393259330"/>
        <function-ref name="getSender" scoped="" ref="0x7f33932594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f33932440d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f33932440d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f3393244420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f33932445a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f3393244730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f33932448b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f33931b5910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f33931b5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33931b5c80"/>
        <function-ref name="wait" scoped="" ref="0x7f33931b5e08"/>
        <function-ref name="cancel" scoped="" ref="0x7f339318a020"/>
        <function-ref name="isFree" scoped="" ref="0x7f339318a1a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f339318a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f339318a958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f339318a958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f33937c7540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f339317b020"/>
        <function-ref name="fired" scoped="" ref="0x7f339317c0c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f339317c9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f339317c548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f339317b4a8"/>
        <function-ref name="start" scoped="" ref="0x7f339317d730"/>
        <function-ref name="stop" scoped="" ref="0x7f339317dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f3391beeb40" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3391beeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3391bed020"/>
        <function-ref name="wait" scoped="" ref="0x7f3391bed1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391bed330"/>
        <function-ref name="isFree" scoped="" ref="0x7f3391bed4b8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3391bed640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f3391bedaf8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3391bedaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f33937c7540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3391bea190"/>
        <function-ref name="fired" scoped="" ref="0x7f3391beb230"/>
        <function-ref name="startAt" scoped="" ref="0x7f3391bebb40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3391beb6b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3391bea618"/>
        <function-ref name="start" scoped="" ref="0x7f3391bec878"/>
        <function-ref name="stop" scoped="" ref="0x7f3391becd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f3391bea9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3391bea9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3391bead40"/>
        <function-ref name="suspend" scoped="" ref="0x7f3391be9020"/>
        <function-ref name="resume" scoped="" ref="0x7f3391be91a8"/>
        <function-ref name="run" scoped="" ref="0x7f3391be9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f3393189220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3393189220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3393189570"/>
        <function-ref name="suspend" scoped="" ref="0x7f33931896f8"/>
        <function-ref name="resume" scoped="" ref="0x7f3393189880"/>
        <function-ref name="run" scoped="" ref="0x7f3393189a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33930ce2a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f33930ce2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33930ce5f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f33930ce780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33930ce908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33930ceb90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f33930ceb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33930cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f33930d0020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f33930d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f33930d0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33930d3578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33930d3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33930d38c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33930d3a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33930d3bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33930d3d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33930d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33930d2388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33930d2388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33930d26f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33930d2880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33930d2a08"/>
        <function-ref name="cancel" scoped="" ref="0x7f33930d2b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33930d2d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33930d17e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f33930d17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33930d1b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f33930cf4d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f33930cf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33930cf820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33930cf9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33930cfb30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33930cfcb8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f33930cfe40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f33930ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f33930cd2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f33930cd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33930cd5f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f33930cd780"/>
        <function-ref name="source" scoped="" ref="0x7f33930cd908"/>
        <function-ref name="destination" scoped="" ref="0x7f33930cda90"/>
        <function-ref name="setSource" scoped="" ref="0x7f33930cdc18"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33930cdda0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33930cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33930d10c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33930d10c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33930d1438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f33930d0738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f33930d0738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33930d0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33930d5020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33930d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33930d5370"/>
        <function-ref name="source" scoped="" ref="0x7f33930d54f8"/>
        <function-ref name="address" scoped="" ref="0x7f33930d5680"/>
        <function-ref name="destination" scoped="" ref="0x7f33930d5808"/>
        <function-ref name="setSource" scoped="" ref="0x7f33930d5990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33930d5b18"/>
        <function-ref name="type" scoped="" ref="0x7f33930d5ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f33930d5e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33930d3020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33930d31a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33930d3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f33930d0e50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f33930d0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33930cf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3391bb6060" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3391bb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391bb63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3391bb7740" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3391bb7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391bb7a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391bb7c18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391bb7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f3391bb9388" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f3391bb9388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f3391bb96f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3391bbd888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3391bbd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391bbdbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391bbdd60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3391bbc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391bbc1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391bbc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3391bbc698" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3391bbc698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391bbca08"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3391bbcb90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391bbcd18"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391bbb020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391bbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f3391bbbc28" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f3391bbbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391bb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3391bbf470" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3391bbf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391bbf7c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391bbf948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391bbfad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391bbfc58"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3391bbfde0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3391bbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3391bb6638" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3391bb6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3391bb6a88"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f3391bb6c10"/>
        <function-ref name="source" scoped="" ref="0x7f3391bb6d98"/>
        <function-ref name="destination" scoped="" ref="0x7f3391bb5020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3391bb51a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3391bb5330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3391bb54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f3391bb5700" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3391bb5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3391bb5a50"/>
        <function-ref name="changed" scoped="" ref="0x7f3391bb5bd8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3391bb5d60"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3391bb4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3391bb8838" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3391bb8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391bb8b88"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391bb8d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391bb7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391bb71a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3391bb7330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3391bb74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3391bbb510" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3391bbb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391bbb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f3391bb9aa0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f3391bb9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391bb9e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3391bbe268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3391bbe268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3391bbe5b8"/>
        <function-ref name="source" scoped="" ref="0x7f3391bbe740"/>
        <function-ref name="address" scoped="" ref="0x7f3391bbe8c8"/>
        <function-ref name="destination" scoped="" ref="0x7f3391bbea50"/>
        <function-ref name="setSource" scoped="" ref="0x7f3391bbebd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3391bbed60"/>
        <function-ref name="type" scoped="" ref="0x7f3391bbd020"/>
        <function-ref name="setType" scoped="" ref="0x7f3391bbd1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3391bbd330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3391bbd4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3391bbd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f3391bb81e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f3391bb81e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391bb8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f33930ea560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33930ea560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f33930ea8b0"/>
        <function-ref name="changed" scoped="" ref="0x7f33930eaa38"/>
        <function-ref name="amGroup" scoped="" ref="0x7f33930eabc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f33930ead48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33930c5a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f33930c5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33930c5d98"/>
        <function-ref name="cancel" scoped="" ref="0x7f33930b7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33930b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f33930b73f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f33930b73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33930b7740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33930b78c8"/>
        <function-ref name="request" scoped="" ref="0x7f33930b7a50"/>
        <function-ref name="granted" scoped="" ref="0x7f33930b7bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33930b7d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f33930c5100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f33930c5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33930c5450"/>
        <function-ref name="cancel" scoped="" ref="0x7f33930c55d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33930c5760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f339305e510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f339305e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f339305e880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f339305ea08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f339305d550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f339305d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f339305d8c0"/>
        <function-ref name="configure" scoped="" ref="0x7f339305da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f339305f748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f339305f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f339305fab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f339305fc40"/>
        <function-ref name="request" scoped="" ref="0x7f339305fdc8"/>
        <function-ref name="granted" scoped="" ref="0x7f339305e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f339305e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f339305ec50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f339305ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f339305d020"/>
        <function-ref name="userId" scoped="" ref="0x7f339305d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3391b64398" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3391b64398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3391b646e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f3391b64970" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f3391b64970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3391b64cc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3391b64e48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3391b63020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3391b631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3391b60510" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3391b60510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3391b60880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3391b60a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3391b5f570" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3391b5f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3391b5f8e0"/>
        <function-ref name="configure" scoped="" ref="0x7f3391b5fa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3391b5fcf0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f3391b5fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3391b5e0a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3391b5e228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3391b5e3b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3391b5e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3391b61720" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3391b61720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3391b61a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3391b61c18"/>
        <function-ref name="request" scoped="" ref="0x7f3391b61da0"/>
        <function-ref name="granted" scoped="" ref="0x7f3391b60020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3391b601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3391b60c50" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3391b60c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3391b5f020"/>
        <function-ref name="userId" scoped="" ref="0x7f3391b5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3391b5e800" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f3391b5e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391b5eb50"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391b5ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33930260a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f33930260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33930263f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3393026578"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3393026700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3393026988" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3393026988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3393026cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f339302bb50" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f339302bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f339302a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3393059b38" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3393059b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339302c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f339302c1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339302c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339302c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339302c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f33930272e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f33930272e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3393027630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33930277b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3393027940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3393027ac8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3393027c50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3393027dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f339302a2c8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f339302a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f339302a618"/>
        <function-ref name="getDSN" scoped="" ref="0x7f339302a7a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f339302a928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f339302aab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f339302ac38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f339302adc0"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3393029020"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f33930291a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3393029330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f33930294b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3393029640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f33930297c8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3393029950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3393029bd8"/>
        <function-ref name="localPan" scoped="" ref="0x7f3393029d60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3393028020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f33930281a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3393028330"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f33930284b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3393028640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f33930287c8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3393028950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3393028ad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3393028c60"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3393028de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f339302c888" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f339302c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339302cbd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339302cd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339302b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f339302b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339302b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f339302b5b8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f339302b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f339302b908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392feb928" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392feb928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392febc78"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392febe00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392fea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392fea2a8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392fea2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392fea5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3392fefc10" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3392fefc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392fee020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392fee1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392fee330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392fee4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392fee640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392fee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f3392fec430" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f3392fec430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392fec780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392fea880" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392fea880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392feabd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392fead58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392fe9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392fe91a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392fe9330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392fe94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f3392feea50" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f3392feea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392feeda0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392fec020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392fec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f339301ed20" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f339301ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392fef0a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392fef228"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392fef3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f3392fef638" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f3392fef638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392fef988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f3392feca08" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f3392feca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392fecd58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392feb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392feb1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392feb330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392feb4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392feb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3392f5b900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3392f5b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f3392f5bc50"/>
        <function-ref name="address" scoped="" ref="0x7f3392f5bdd8"/>
        <function-ref name="destination" scoped="" ref="0x7f3392f5a020"/>
        <function-ref name="setSource" scoped="" ref="0x7f3392f5a1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3392f5a330"/>
        <function-ref name="pan" scoped="" ref="0x7f3392f5a4b8"/>
        <function-ref name="setPan" scoped="" ref="0x7f3392f5a640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3392f5a7c8"/>
        <function-ref name="localPan" scoped="" ref="0x7f3392f5a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392f5ab98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392f5ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392f58020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392f581a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392f58330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392f584b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392f58640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392f587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f3392f5e980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3392f5e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f3392f5ecd0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f3392f5ee58"/>
        <function-ref name="setFCF" scoped="" ref="0x7f3392f5d020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f3392f5d1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f3392f5d330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f3392f5d4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3392f5d640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f3392f5d7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3392f5d950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f3392f5dad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3392f5dc60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f3392f5dde8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3392f5c020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3392f5c2a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f3392f5c430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3392f5c5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f3392f5c740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3392f5c8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f3392f5ca50"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3392f5cbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3392f5cd60"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3392f5b020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3392f5b1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3392f5b330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3392f5b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392f58ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392f58ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392f58e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392f57020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392f571a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392f57330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392f574b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392f57640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f3391af8d98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f3391af8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f3391af7170"/>
        <function-ref name="address" scoped="" ref="0x7f3391af72f8"/>
        <function-ref name="destination" scoped="" ref="0x7f3391af7480"/>
        <function-ref name="setSource" scoped="" ref="0x7f3391af7608"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3391af7790"/>
        <function-ref name="pan" scoped="" ref="0x7f3391af7918"/>
        <function-ref name="setPan" scoped="" ref="0x7f3391af7aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3391af7c28"/>
        <function-ref name="localPan" scoped="" ref="0x7f3391af7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3391af6020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3391af6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391af6370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391af64f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391af6680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391af6808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3391af6990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3391af6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f3391afed50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f3391afed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f3391afa0d8"/>
        <function-ref name="getDSN" scoped="" ref="0x7f3391afa260"/>
        <function-ref name="setFCF" scoped="" ref="0x7f3391afa3e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f3391afa570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f3391afa6f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f3391afa880"/>
        <function-ref name="setDSN" scoped="" ref="0x7f3391afaa08"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f3391afab90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f3391afad18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f3391af9020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f3391af91a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f3391af9330"/>
        <function-ref name="localAddr" scoped="" ref="0x7f3391af94b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3391af9740"/>
        <function-ref name="localPan" scoped="" ref="0x7f3391af98c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f3391af9a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f3391af9bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f3391af9d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f3391af8020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3391af81a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3391af8330"/>
        <function-ref name="getFCF" scoped="" ref="0x7f3391af84b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3391af8640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f3391af87c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f3391af8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f3391af6dc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3391af6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3391af5170"/>
        <function-ref name="changed" scoped="" ref="0x7f3391af52f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3391af5480"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3391af5608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3391af5890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3391af5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391af5be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391af5d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391af4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391af41a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3391af4330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3391af44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392ef0510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392ef0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392ef0860"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392ef09e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392ef0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392ef0df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392ef0df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392eef170"/>
        <function-ref name="header" scoped="" ref="0x7f3392eef2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392ef1470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392ef1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392ef17c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392ef1948"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392ef1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392eef580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392eef580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3392eef8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3392eefa58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3392eefbe0"/>
        <function-ref name="getSender" scoped="" ref="0x7f3392eefd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392ef1d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392ef1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392ef00a0"/>
        <function-ref name="header" scoped="" ref="0x7f3392ef0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3391aa8458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3391aa8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391aa87a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391aa8930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391aa8ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3391aa8d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3391aa8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391aa70d8"/>
        <function-ref name="header" scoped="" ref="0x7f3391aa7260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f3391aa6bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3391aa6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391aa4020"/>
        <function-ref name="clearAll" scoped="" ref="0x7f3391aa41a8"/>
        <function-ref name="get" scoped="" ref="0x7f3391aa4330"/>
        <function-ref name="set" scoped="" ref="0x7f3391aa44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3391aadda0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3391aadda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391aa9170"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391aa92f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391aa9480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f3391aa6020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f3391aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f3391aa6370"/>
        <function-ref name="insertNode" scoped="" ref="0x7f3391aa64f8"/>
        <function-ref name="getNode" scoped="" ref="0x7f3391aa6680"/>
        <function-ref name="evicted" scoped="" ref="0x7f3391aa6808"/>
        <function-ref name="getIndex" scoped="" ref="0x7f3391aa6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3391aa96c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3391aa96c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391aa9a18"/>
        <function-ref name="header" scoped="" ref="0x7f3391aa9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3391aa9de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3391aa9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3391aa8170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f3391aa74a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f3391aa74a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f3391aa77f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3391aa7980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f3391aa7b08"/>
        <function-ref name="getSender" scoped="" ref="0x7f3391aa7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f3392f24d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f3392f24d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f3392f210d8"/>
        <function-ref name="insertNode" scoped="" ref="0x7f3392f21260"/>
        <function-ref name="getNode" scoped="" ref="0x7f3392f213e8"/>
        <function-ref name="evicted" scoped="" ref="0x7f3392f21570"/>
        <function-ref name="getIndex" scoped="" ref="0x7f3392f216f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f3392f1db18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3392f1db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392f1de68"/>
        <function-ref name="clearAll" scoped="" ref="0x7f3392f1c020"/>
        <function-ref name="get" scoped="" ref="0x7f3392f1c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f3392f1c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f3392f1e850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f3392f1e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f3392f1eba0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f3392f1ed28"/>
        <function-ref name="getNode" scoped="" ref="0x7f3392f1d020"/>
        <function-ref name="evicted" scoped="" ref="0x7f3392f1d1a8"/>
        <function-ref name="getIndex" scoped="" ref="0x7f3392f1d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3392f1e238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3392f1e238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392f1e588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f3391aa2140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f3391aa2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391aa2490"/>
        <function-ref name="clearAll" scoped="" ref="0x7f3391aa2618"/>
        <function-ref name="get" scoped="" ref="0x7f3391aa27a0"/>
        <function-ref name="set" scoped="" ref="0x7f3391aa2928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392e8ce00" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392e8ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392e8b1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392e8b330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392e8b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392e8b740" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392e8b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392e8ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392e8f548" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392e8f548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392e8f898"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392e8fa20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392e8fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392e8c020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392e8c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392e8c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392e8c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392e8c808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392e8c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392e8cb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392e8bd18" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392e8bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392e8a0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392e8a228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392e8a3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392e8a538"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392e8a6c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392e8a848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3392e8fe30" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3392e8fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392e8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3392e8aa90" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3392e8aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3392e8ade0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3392e89020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3392e891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3392e8d3f0" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3392e8d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3392e8d740"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3392e8d8c8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3392e8da50"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3392e8dbd8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3392e8dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3391a85490" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3391a85490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391a857e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391a85968"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391a85af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f3391a7e5f8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x7f3391a7e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391a7e948"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391a7ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f3391a84778" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x7f3391a84778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3391a80a18"/>
        <function-ref name="fired" scoped="" ref="0x7f3391a81158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3391a81e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3391a819f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f3391a7f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f3391a80e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3391a815a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3391a83370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3391a80448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3391a83810"/>
        <function-ref name="stop" scoped="" ref="0x7f3391a83cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3391a87020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3391a87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391a87370"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391a874f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391a87680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3391a86578" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3391a86578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391a868c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391a86a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391a86bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391a86d60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3391a85020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3391a851a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3391a7f700" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3391a7f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3391a7fa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3391a7fbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391a7fd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3391a7e020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3391a7e1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3391a7e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f3391a85d38" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3391a85d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3391a840d8"/>
        <function-ref name="noAck" scoped="" ref="0x7f3391a84260"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3391a843e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3391a878c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f3391a878c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3391a87c18"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3391a87da0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3391a86020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3391a861a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3391a86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3391a7bd88" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3391a7bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3391a77088"/>
        <function-ref name="fired" scoped="" ref="0x7f3391a796c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3391a78470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3391a78020"/>
        <function-ref name="getdt" scoped="" ref="0x7f3391a77928"/>
        <function-ref name="gett0" scoped="" ref="0x7f3391a774d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3391a79b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3391a7a908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3391a78a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3391a7ada8"/>
        <function-ref name="stop" scoped="" ref="0x7f3391a79278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3392e71020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3392e71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392e71370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392e714f8"/>
        <function-ref name="start" scoped="" ref="0x7f3392e71680"/>
        <function-ref name="stop" scoped="" ref="0x7f3392e71808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392e6d020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392e6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392e6d370"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392e6d4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392e6d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392e6d908" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392e6d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392e6dc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392e71a90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392e71a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392e71de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392e70020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392e701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392e709c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392e709c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392e70d18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392e6f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392e6f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392e6f330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392e6f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392e6f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3392e6f888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3392e6f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3392e6fbd8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3392e6fd60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3392e6e020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3392e6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3392e6e490" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3392e6e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392e6e7e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392e6e968"/>
        <function-ref name="start" scoped="" ref="0x7f3392e6eaf0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392e6ec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3392e70430" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3392e70430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392e70780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392e6c020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392e6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392e6c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392e6c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392e6c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392e6c808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392e6c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392e6cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f3391a43328" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f3391a43328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3391a43678"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f3391a43800"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3391a43988"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3391a43b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3392e01708" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3392e01708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392e01a58"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392e01be0"/>
        <function-ref name="start" scoped="" ref="0x7f3392e01d68"/>
        <function-ref name="stop" scoped="" ref="0x7f3392e00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f3392dffb70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3392dffb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392dfd020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392dfd1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392dfd330"/>
        <function-ref name="done" scoped="" ref="0x7f3392dfd4b8"/>
        <function-ref name="standby" scoped="" ref="0x7f3392dfd640"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392dfd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392e002a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392e002a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392e005f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392e00780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392e00908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f3392dfc3f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392dfc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392dfc740"/>
        <function-ref name="header" scoped="" ref="0x7f3392dfc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3392e00b90" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3392e00b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392dff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f3392dfda10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392dfda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392dfdd60"/>
        <function-ref name="ready" scoped="" ref="0x7f3392dfc020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392dfc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3392dff268" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3392dff268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3392dff5b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392dff740"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392dff8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3391a3c600" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3391a3c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3391a3c950"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3391a3cad8"/>
        <function-ref name="start" scoped="" ref="0x7f3391a3cc60"/>
        <function-ref name="stop" scoped="" ref="0x7f3391a3cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f3391a3b0a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f3391a3b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3391a3b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f3391a38020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3391a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3391a38370"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3391a384f8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3391a38680"/>
        <function-ref name="done" scoped="" ref="0x7f3391a38808"/>
        <function-ref name="standby" scoped="" ref="0x7f3391a38990"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3391a38b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3391a3b678" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3391a3b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391a3b9c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391a3bb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391a3bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f3391a35060" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f3391a35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391a353b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391a35538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f3391a360e0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3391a360e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391a36430"/>
        <function-ref name="header" scoped="" ref="0x7f3391a365b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f3391a35800" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f3391a35800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391a35b50"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391a35cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3391a3a020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3391a3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3391a3a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f3391a36880" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f3391a36880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391a36bd0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391a36d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f3391a377b8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3391a377b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391a37b08"/>
        <function-ref name="ready" scoped="" ref="0x7f3391a37c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391a37e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f3391a3a5b8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f3391a3a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f3391a3a908"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3391a3aa90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3391a3ac18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f3391a38d60" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3391a38d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3391a370d8"/>
        <function-ref name="suspend" scoped="" ref="0x7f3391a37260"/>
        <function-ref name="resume" scoped="" ref="0x7f3391a373e8"/>
        <function-ref name="run" scoped="" ref="0x7f3391a37570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392da97e0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392da97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392da9b30"/>
        <function-ref name="ready" scoped="" ref="0x7f3392da9cb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392da9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392da8120" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392da8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392da8470"/>
        <function-ref name="header" scoped="" ref="0x7f3392da85f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3392da8840" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392da8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3392da8b90"/>
        <function-ref name="wait" scoped="" ref="0x7f3392da8d18"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392da6020"/>
        <function-ref name="isFree" scoped="" ref="0x7f3392da61a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3392da6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392da65b8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392da65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f3392da6908"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f3392da6a90"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f3392da6c18"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f3392da6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392da9020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392da9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392da9370"/>
        <function-ref name="header" scoped="" ref="0x7f3392da94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3392daa640" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392daa640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392daa990"/>
        <function-ref name="ready" scoped="" ref="0x7f3392daab18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392daaca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33919febb0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f33919febb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33919fc020"/>
        <function-ref name="ready" scoped="" ref="0x7f33919fc1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33919fc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33919fc5b8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f33919fc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33919fc908"/>
        <function-ref name="header" scoped="" ref="0x7f33919fca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f33919fccd8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f33919fccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33919fb0a0"/>
        <function-ref name="wait" scoped="" ref="0x7f33919fb228"/>
        <function-ref name="cancel" scoped="" ref="0x7f33919fb3b0"/>
        <function-ref name="isFree" scoped="" ref="0x7f33919fb538"/>
        <function-ref name="getNow" scoped="" ref="0x7f33919fb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f33919fb908" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f33919fb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33919fbc58"/>
        <function-ref name="rand32" scoped="" ref="0x7f33919fbde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f33919fa0a0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f33919fa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f33919fa3f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f33919fa578"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f33919fa700"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f33919fa888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f33919fe3f0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f33919fe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33919fe740"/>
        <function-ref name="header" scoped="" ref="0x7f33919fe8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f33919ff9b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f33919ff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33919ffd00"/>
        <function-ref name="ready" scoped="" ref="0x7f33919fe020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33919fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f33919fab50" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f33919fab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33919f9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33919f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f3392dbeb98" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3392dbeb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3392dbb020"/>
        <function-ref name="rand32" scoped="" ref="0x7f3392dbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f3392dbcb10" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f3392dbcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392dbe6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3392dc2e10" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3392dc2e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392dbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f3392db7a08" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f3392db7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f3392db7d58"/>
        <function-ref name="rand32" scoped="" ref="0x7f3392db6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f3392db89f0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f3392db89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392db7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3392db8198" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3392db8198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392db84e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392d777b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392d777b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392d77b08"/>
        <function-ref name="ready" scoped="" ref="0x7f3392d77c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392d77e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392d76120" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392d76120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392d76470"/>
        <function-ref name="header" scoped="" ref="0x7f3392d765f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3392d76840" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392d76840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3392d76b90"/>
        <function-ref name="wait" scoped="" ref="0x7f3392d76d18"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392d75020"/>
        <function-ref name="isFree" scoped="" ref="0x7f3392d751a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f3392d75330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f3392d74740" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f3392d74740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392d74a90"/>
        <function-ref name="get" scoped="" ref="0x7f3392d74c18"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392d74da0"/>
        <function-ref name="set" scoped="" ref="0x7f3392d73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392d755b8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392d755b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f3392d75908"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f3392d75a90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f3392d75c18"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f3392d75da0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f3392d74020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f3392d741a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f3392d74330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f3392d744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392da1718" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392da1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392da1a68"/>
        <function-ref name="header" scoped="" ref="0x7f3392da1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3392da2e38" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392da2e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392da11c0"/>
        <function-ref name="ready" scoped="" ref="0x7f3392da1348"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392da14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f3392da1e38" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f3392da1e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3392d771c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3392d77348"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3392d774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3392d5b338" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3392d5b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392d5b688"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392d5b810"/>
        <function-ref name="start" scoped="" ref="0x7f3392d5b998"/>
        <function-ref name="stop" scoped="" ref="0x7f3392d5bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3392d58b10" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3392d58b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3392d58e60"/>
        <function-ref name="request" scoped="" ref="0x7f3392d57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392d52020" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392d52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392d52370"/>
        <function-ref name="ready" scoped="" ref="0x7f3392d524f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392d52680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392d52908" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392d52908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392d52c58"/>
        <function-ref name="header" scoped="" ref="0x7f3392d52de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3392d5abe0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3392d5abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392d59020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392d591a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392d59330"/>
        <function-ref name="done" scoped="" ref="0x7f3392d594b8"/>
        <function-ref name="standby" scoped="" ref="0x7f3392d59640"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392d597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392d57268" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392d57268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392d575b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392d57740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392d578c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392d57a50"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392d57bd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392d57d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f3392d53020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f3392d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392d53470"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392d535f8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392d53780"/>
        <function-ref name="done" scoped="" ref="0x7f3392d53908"/>
        <function-ref name="standby" scoped="" ref="0x7f3392d53a90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392d53c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f3392d56020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3392d56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3392d56370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392d583f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392d583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392d58740"/>
        <function-ref name="header" scoped="" ref="0x7f3392d588c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f3392d55a08" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f3392d55a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392d55d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3392d56658" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3392d56658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392d569a8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392d56b30"/>
        <function-ref name="start" scoped="" ref="0x7f3392d56cb8"/>
        <function-ref name="stop" scoped="" ref="0x7f3392d56e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392d51800" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392d51800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392d51b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392d51cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392d51e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392d50020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392d501a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392d50330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f3392d5a648" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f3392d5a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392d5a998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392d505b8" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392d505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3392d50908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f3392d55120" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f3392d55120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392d55470"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392d555f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392d55780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3392d59a10" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392d59a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392d59d60"/>
        <function-ref name="ready" scoped="" ref="0x7f3392d58020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392d581a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f3392d510a0" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3392d510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3392d513f0"/>
        <function-ref name="request" scoped="" ref="0x7f3392d51578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f3392d5bd68" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f3392d5bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392d5a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392d5a278"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392d5a400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f3392cee2a8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f3392cee2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cee5f8"/>
        <function-ref name="get" scoped="" ref="0x7f3392cee780"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392cee908"/>
        <function-ref name="set" scoped="" ref="0x7f3392ceea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392cf1410" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cf1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cf1760"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cf18e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cf1a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cf1bf8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cf1d80"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392cef438" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392cef438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cef788"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cef910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cefa98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cefc20"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cefda8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f3392cf59f0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f3392cf59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3392cf4e48"/>
        <function-ref name="clear" scoped="" ref="0x7f3392cf3558"/>
        <function-ref name="isValid" scoped="" ref="0x7f3392cf4768"/>
        <function-ref name="set" scoped="" ref="0x7f3392cf3c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f3392cf0410" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392cf0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392cef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f3392cf9c38" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f3392cf9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3392cf70f8"/>
        <function-ref name="clear" scoped="" ref="0x7f3392cf77d8"/>
        <function-ref name="isValid" scoped="" ref="0x7f3392cf89f0"/>
        <function-ref name="set" scoped="" ref="0x7f3392cf5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f33919abab0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f33919abab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33919abe00"/>
        <function-ref name="get" scoped="" ref="0x7f33919aa020"/>
        <function-ref name="setValue" scoped="" ref="0x7f33919aa1a8"/>
        <function-ref name="set" scoped="" ref="0x7f33919aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f33919adc78" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f33919adc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33919ab020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33919ab1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33919ab330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33919ab4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f33919ab640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f33919ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f33919a88a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f33919a88a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33919a8bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33919a8d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33919a7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33919a71a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f33919a7330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f33919a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f33919af270" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f33919af270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33919ae700"/>
        <function-ref name="clear" scoped="" ref="0x7f33919aede0"/>
        <function-ref name="isValid" scoped="" ref="0x7f33919ae020"/>
        <function-ref name="set" scoped="" ref="0x7f33919ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f33919aa6c0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f33919aa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33919a93a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f33919a98c8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f33919a98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33919a8490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f33919b3590" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33919b3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33919b2a88"/>
        <function-ref name="clear" scoped="" ref="0x7f33919b1190"/>
        <function-ref name="isValid" scoped="" ref="0x7f33919b23a8"/>
        <function-ref name="set" scoped="" ref="0x7f33919b1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3392cfea28" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3392cfea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392cfb5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392ce9bf0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392ce9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cca020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cca1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cca330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cca4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cca640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cca7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392ccaab0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392ccaab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392ccae00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cc9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cc91a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cc9330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cc94b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cc9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f3392ce91a0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f3392ce91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392ce9510"/>
        <function-ref name="get" scoped="" ref="0x7f3392ce9698"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392ce9820"/>
        <function-ref name="set" scoped="" ref="0x7f3392ce99a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3392cc6630" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3392cc6630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392cc6980"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392cc6b08"/>
        <function-ref name="start" scoped="" ref="0x7f3392cc6c90"/>
        <function-ref name="stop" scoped="" ref="0x7f3392cc6e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3392cc3d50" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3392cc3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3392cc20d8"/>
        <function-ref name="request" scoped="" ref="0x7f3392cc2260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3392cbd2a8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f3392cbd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392cbd5f8"/>
        <function-ref name="ready" scoped="" ref="0x7f3392cbd780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392cbd908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3392cbdb90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f3392cbdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392cbc020"/>
        <function-ref name="header" scoped="" ref="0x7f3392cbc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3392cc4020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3392cc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392cc4370"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392cc44f8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392cc4680"/>
        <function-ref name="done" scoped="" ref="0x7f3392cc4808"/>
        <function-ref name="standby" scoped="" ref="0x7f3392cc4990"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392cc4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392cc24a8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cc24a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cc27f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cc2980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cc2b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cc2c90"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cc2e18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cc1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f3392cbe328" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f3392cbe328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392cbe778"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392cbe900"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392cbea88"/>
        <function-ref name="done" scoped="" ref="0x7f3392cbec10"/>
        <function-ref name="standby" scoped="" ref="0x7f3392cbed98"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392cbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f3392cc12a8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f3392cc12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3392cc15f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392cc3630" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392cc3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392cc3980"/>
        <function-ref name="header" scoped="" ref="0x7f3392cc3b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f3392cc0d18" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f3392cc0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392cbe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3392cc18e0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f3392cc18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392cc1c30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3392cc1db8"/>
        <function-ref name="start" scoped="" ref="0x7f3392cc0020"/>
        <function-ref name="stop" scoped="" ref="0x7f3392cc01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f3392cbcb90" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f3392cbcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cbb020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cbb1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cbb330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cbb4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cbb640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cbb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f3392cc5988" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f3392cc5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392cc5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392cbba50" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392cbba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f3392cbbda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f3392cc0430" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f3392cc0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392cc0780"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392cc0908"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392cc0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3392cc4d60" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392cc4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392cc30d8"/>
        <function-ref name="ready" scoped="" ref="0x7f3392cc3260"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392cc33e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f3392cbc430" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f3392cbc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3392cbc780"/>
        <function-ref name="request" scoped="" ref="0x7f3392cbc908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f3392cc50e0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f3392cc50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392cc5430"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392cc55b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392cc5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3392cb2118" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3392cb2118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3392cb2468"/>
        <function-ref name="request" scoped="" ref="0x7f3392cb25f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f3392caed28" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f3392caed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cab388"/>
        <function-ref name="get" scoped="" ref="0x7f3392cade00"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392cad8f0"/>
        <function-ref name="set" scoped="" ref="0x7f3392cab898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f3392c99b50" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f3392c99b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c98020"/>
        <function-ref name="get" scoped="" ref="0x7f3392c981a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392c98330"/>
        <function-ref name="set" scoped="" ref="0x7f3392c984b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3392c9d400" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3392c9d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3392c9b870"/>
        <function-ref name="clear" scoped="" ref="0x7f3392c9a020"/>
        <function-ref name="isValid" scoped="" ref="0x7f3392c9b190"/>
        <function-ref name="set" scoped="" ref="0x7f3392c9a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3392cb4128" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3392cb4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392cb4478"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392cb4600"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392cb4788"/>
        <function-ref name="done" scoped="" ref="0x7f3392cb4910"/>
        <function-ref name="standby" scoped="" ref="0x7f3392cb4a98"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392cb4c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3392c97458" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392c97458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3392c977a8"/>
        <function-ref name="wait" scoped="" ref="0x7f3392c97930"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392c97ab8"/>
        <function-ref name="isFree" scoped="" ref="0x7f3392c97c40"/>
        <function-ref name="getNow" scoped="" ref="0x7f3392c97dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3392cb19c0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3392cb19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cae020"/>
        <function-ref name="get" scoped="" ref="0x7f3392cb0aa8"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392cb0598"/>
        <function-ref name="set" scoped="" ref="0x7f3392cae530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392cb28a8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392cb28a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392cb2bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392cb2d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392cb1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392cb11a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392cb1330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392cb14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392c9e390" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392c9e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392c9e7e0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392c9e968"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392c9eaf0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f3392c9ec78"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f3392c9ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392cb3948" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392cb3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392cb3c98"/>
        <function-ref name="header" scoped="" ref="0x7f3392cb3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3392ca2150" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3392ca2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f33937c7540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3392c9f918"/>
        <function-ref name="fired" scoped="" ref="0x7f3392ca1980"/>
        <function-ref name="startAt" scoped="" ref="0x7f3392c9f310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3392ca1e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3392c9fda0"/>
        <function-ref name="start" scoped="" ref="0x7f3392ca1020"/>
        <function-ref name="stop" scoped="" ref="0x7f3392ca14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f3392caa130" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3392caa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392ca9718"/>
        <function-ref name="get" scoped="" ref="0x7f3392ca9208"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392caacb0"/>
        <function-ref name="set" scoped="" ref="0x7f3392ca9c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f3392ca4e78" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392ca4e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392ca3a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3392cb3020" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392cb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392cb3370"/>
        <function-ref name="ready" scoped="" ref="0x7f3392cb34f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392cb3680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3392ca74b0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3392ca74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392ca6aa8"/>
        <function-ref name="get" scoped="" ref="0x7f3392ca6598"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392ca6088"/>
        <function-ref name="set" scoped="" ref="0x7f3392ca4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f3392c98828" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3392c98828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c98b78"/>
        <function-ref name="get" scoped="" ref="0x7f3392c98d00"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392c97020"/>
        <function-ref name="set" scoped="" ref="0x7f3392c971a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f3392c99020" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3392c99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c99370"/>
        <function-ref name="get" scoped="" ref="0x7f3392c994f8"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392c99680"/>
        <function-ref name="set" scoped="" ref="0x7f3392c99808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f3392ca4668" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3392ca4668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3392ca49b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f3392c8c118" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f3392c8c118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f3392c8c468"/>
        <function-ref name="request" scoped="" ref="0x7f3392c8c5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f3392c74e30" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f3392c74e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f3392c73be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f3392c88d28" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f3392c88d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c85388"/>
        <function-ref name="get" scoped="" ref="0x7f3392c87e00"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392c878f0"/>
        <function-ref name="set" scoped="" ref="0x7f3392c85898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f3392c6db90" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f3392c6db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c6c020"/>
        <function-ref name="get" scoped="" ref="0x7f3392c6c1a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392c6c330"/>
        <function-ref name="set" scoped="" ref="0x7f3392c6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f3392c8fad8" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f3392c8fad8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392c8fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3392c6b730" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3392c6b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3392c6ad90"/>
        <function-ref name="clear" scoped="" ref="0x7f3392c684b8"/>
        <function-ref name="isValid" scoped="" ref="0x7f3392c6a6b0"/>
        <function-ref name="set" scoped="" ref="0x7f3392c68b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f3392c7a958" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f3392c7a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392c7aca8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392c7ae30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392c75020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392c751a8"/>
        <function-ref name="get" scoped="" ref="0x7f3392c75330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392c754b8"/>
        <function-ref name="set" scoped="" ref="0x7f3392c75640"/>
        <function-ref name="clr" scoped="" ref="0x7f3392c757c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f3392c67e28" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f3392c67e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3392c661a8"/>
        <function-ref name="wait" scoped="" ref="0x7f3392c66330"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392c664b8"/>
        <function-ref name="isFree" scoped="" ref="0x7f3392c66640"/>
        <function-ref name="getNow" scoped="" ref="0x7f3392c667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f3392c8e128" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f3392c8e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f3392c8e478"/>
        <function-ref name="turnOn" scoped="" ref="0x7f3392c8e600"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3392c8e788"/>
        <function-ref name="done" scoped="" ref="0x7f3392c8e910"/>
        <function-ref name="standby" scoped="" ref="0x7f3392c8ea98"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3392c8ec20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f3392c6f208" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3392c6f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392c6fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f3392c8b9c0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f3392c8b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c88020"/>
        <function-ref name="get" scoped="" ref="0x7f3392c8aaa8"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392c8a598"/>
        <function-ref name="set" scoped="" ref="0x7f3392c88530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f3392c8c8a8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f3392c8c8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c8cbf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392c8cd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392c8b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392c8b1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392c8b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392c8b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f3392c7b7e0" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f3392c7b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392c7bb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392c7bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392c7be40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392c7a020"/>
        <function-ref name="get" scoped="" ref="0x7f3392c7a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392c7a330"/>
        <function-ref name="set" scoped="" ref="0x7f3392c7a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3392c7a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f3392c6e2f0" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f3392c6e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392c6e640"/>
        <function-ref name="headerLength" scoped="" ref="0x7f3392c6e7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f3392c6e950"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f3392c6ead8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f3392c6ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f3392c8d948" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f3392c8d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392c8dc98"/>
        <function-ref name="header" scoped="" ref="0x7f3392c8de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f3392bdbd98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f3392bdbd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392bda170"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392bda2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f3392c84130" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3392c84130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c82718"/>
        <function-ref name="get" scoped="" ref="0x7f3392c82208"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392c84cb0"/>
        <function-ref name="set" scoped="" ref="0x7f3392c82c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f3392c8f020" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3392c8f020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f3393ae36f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392c8f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f3392c7c020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f3392c7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3392c7c370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3392c7c4f8"/>
        <function-ref name="request" scoped="" ref="0x7f3392c7c680"/>
        <function-ref name="granted" scoped="" ref="0x7f3392c7c808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3392c7c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f3392c7ed70" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f3392c7ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392c7d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392c7d370"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392c7d4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392c7d680"/>
        <function-ref name="get" scoped="" ref="0x7f3392c7d808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392c7d990"/>
        <function-ref name="set" scoped="" ref="0x7f3392c7db18"/>
        <function-ref name="clr" scoped="" ref="0x7f3392c7dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f3392c814b0" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f3392c814b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c80aa8"/>
        <function-ref name="get" scoped="" ref="0x7f3392c80598"/>
        <function-ref name="isSet" scoped="" ref="0x7f3392c80088"/>
        <function-ref name="set" scoped="" ref="0x7f3392c7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f3392c8d020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f3392c8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392c8d370"/>
        <function-ref name="ready" scoped="" ref="0x7f3392c8d4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392c8d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f3392c74100" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f3392c74100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3392c74450"/>
        <function-ref name="disable" scoped="" ref="0x7f3392c745d8"/>
        <function-ref name="captured" scoped="" ref="0x7f3392c74760"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3392c748e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f3392c76c18" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392c76c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3392c7b020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3392c7b1a8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3392c7b330"/>
        <function-ref name="write" scoped="" ref="0x7f3392c7b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f3392c6c828" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f3392c6c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c6cb78"/>
        <function-ref name="get" scoped="" ref="0x7f3392c6cd00"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392c6b020"/>
        <function-ref name="set" scoped="" ref="0x7f3392c6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f3392c6d060" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f3392c6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392c6d3b0"/>
        <function-ref name="get" scoped="" ref="0x7f3392c6d538"/>
        <function-ref name="setValue" scoped="" ref="0x7f3392c6d6c0"/>
        <function-ref name="set" scoped="" ref="0x7f3392c6d848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f3392c7e668" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f3392c7e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f3392c7e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f3392c67390" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f3392c67390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f3392c676e0"/>
        <function-ref name="suspend" scoped="" ref="0x7f3392c67868"/>
        <function-ref name="resume" scoped="" ref="0x7f3392c679f0"/>
        <function-ref name="run" scoped="" ref="0x7f3392c67b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f3392b97338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f3392b97338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392b97688"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392b97810"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392b97998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392b97b20"/>
        <function-ref name="get" scoped="" ref="0x7f3392b97ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392b97e30"/>
        <function-ref name="set" scoped="" ref="0x7f3392b96020"/>
        <function-ref name="clr" scoped="" ref="0x7f3392b961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f3392b98140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f3392b98140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392b98490"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392b98618"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392b987a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392b98928"/>
        <function-ref name="get" scoped="" ref="0x7f3392b98ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392b98c38"/>
        <function-ref name="set" scoped="" ref="0x7f3392b98dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f3392b97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3392b952e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f3392b952e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3392b92928"/>
        <function-ref name="fired" scoped="" ref="0x7f3392b949e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f3392b92320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3392b94e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3392b92db0"/>
        <function-ref name="start" scoped="" ref="0x7f3392b94088"/>
        <function-ref name="stop" scoped="" ref="0x7f3392b94560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f3392b9a990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f3392b9a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3392b9ace0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3392b9ae68"/>
        <function-ref name="request" scoped="" ref="0x7f3392b99020"/>
        <function-ref name="granted" scoped="" ref="0x7f3392b991a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3392b99330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f3392b9d710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f3392b9d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392b9da60"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392b9dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392b9dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392b9a020"/>
        <function-ref name="get" scoped="" ref="0x7f3392b9a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392b9a330"/>
        <function-ref name="set" scoped="" ref="0x7f3392b9a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3392b9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f3392b964c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f3392b964c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3392b96810"/>
        <function-ref name="disable" scoped="" ref="0x7f3392b96998"/>
        <function-ref name="captured" scoped="" ref="0x7f3392b96b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3392b96ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3392b995e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b995e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3392b99938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3392b99ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3392b99c48"/>
        <function-ref name="write" scoped="" ref="0x7f3392b99dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f3392b91438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f3392b91438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f33937c7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392b90020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f3392b81c18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f3392b81c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392b80020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392b801a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392b80330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392b804b8"/>
        <function-ref name="get" scoped="" ref="0x7f3392b80640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392b807c8"/>
        <function-ref name="set" scoped="" ref="0x7f3392b80950"/>
        <function-ref name="clr" scoped="" ref="0x7f3392b80ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f3392b83540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3392b83540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3392b816f8"/>
        <function-ref name="test" scoped="" ref="0x7f3392b8adb8"/>
        <function-ref name="get" scoped="" ref="0x7f3392b8b0f8"/>
        <function-ref name="captured" scoped="" ref="0x7f3392b8ba58"/>
        <function-ref name="reset" scoped="" ref="0x7f3392b8a020"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392b81270"/>
        <function-ref name="set" scoped="" ref="0x7f3392b8b580"/>
        <function-ref name="start" scoped="" ref="0x7f3392b8a4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f3392b8a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f3392b80e08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f3392b80e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392b7f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392b7f330"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392b7f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392b7f640"/>
        <function-ref name="get" scoped="" ref="0x7f3392b7f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392b7f950"/>
        <function-ref name="set" scoped="" ref="0x7f3392b7fad8"/>
        <function-ref name="clr" scoped="" ref="0x7f3392b7fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f3392b8d870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f3392b8d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392b8dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f3392b90cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f3392b90cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3392b8d0a0"/>
        <function-ref name="disable" scoped="" ref="0x7f3392b8d228"/>
        <function-ref name="captured" scoped="" ref="0x7f3392b8d3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3392b8d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3392b651d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f3392b651d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392b65528"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392b656b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3392b6d388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f3392b6d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3392b6d6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3392b8ecd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3392b8ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392b710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3392b6d9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b6d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3392b6dd20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3392b70020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3392b701a8"/>
        <function-ref name="write" scoped="" ref="0x7f3392b70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3392b65e80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3392b65e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3392b6f1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3392b6f380"/>
        <function-ref name="request" scoped="" ref="0x7f3392b6f508"/>
        <function-ref name="granted" scoped="" ref="0x7f3392b6f690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3392b6f818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f3392b23b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f3392b23b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392b22020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392b221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3392b61120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f3392b61120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392b61470"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392b615f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f3392b443c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f3392b443c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3392b44718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3392b448a0"/>
        <function-ref name="request" scoped="" ref="0x7f3392b44a28"/>
        <function-ref name="granted" scoped="" ref="0x7f3392b44bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3392b44d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3392b62020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f3392b62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3392b62370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3392b66a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3392b66a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392b66d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f3392b45150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f3392b45150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f3392b454a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f3392b5e950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f3392b457b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3392b5ead8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f3392b45ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f3392b45c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f3392b45dd0"/>
        <function-ref name="read" scoped="" ref="0x7f3392b5f020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f3392b5f1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f3392b5f330"/>
        <function-ref name="setClock" scoped="" ref="0x7f3392b5f4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3392b5f640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f3392b5f7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f3392b5fa50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f3392b5fbd8"/>
        <function-ref name="write" scoped="" ref="0x7f3392b5fd60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3392b5e020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f3392b5e1a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f3392b5e330"/>
        <function-ref name="getClock" scoped="" ref="0x7f3392b5e4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f3392b5e640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f3392b45628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f3392b45938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f3392b5e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3392b62628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3392b62628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3392b62978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3392b62b00"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3392b62c88"/>
        <function-ref name="write" scoped="" ref="0x7f3392b62e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3392b61d88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3392b61d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3392b60170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3392b602f8"/>
        <function-ref name="request" scoped="" ref="0x7f3392b60480"/>
        <function-ref name="granted" scoped="" ref="0x7f3392b60608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3392b60790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3392b43020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3392b43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3392b43370"/>
        <function-ref name="userId" scoped="" ref="0x7f3392b434f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f3392b437c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f3392b437c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3392b43b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f3392af8020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f3392af8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f3392af8370"/>
        <function-ref name="sleep" scoped="" ref="0x7f3392af67c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f3392af8680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3392af6950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f3392af8990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f3392af8b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f3392af8ca0"/>
        <function-ref name="read" scoped="" ref="0x7f3392af8e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f3392af7020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f3392af71a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f3392af7330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3392af74b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f3392af7640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f3392af78c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f3392af7a50"/>
        <function-ref name="write" scoped="" ref="0x7f3392af7bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3392af7d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f3392af6020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f3392af61a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f3392af6330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f3392af64b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f3392af84f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f3392af8808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f3392af6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f3392aeb7d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f3392aeb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392aebb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392aebca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392aebe30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392aea020"/>
        <function-ref name="get" scoped="" ref="0x7f3392aea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392aea330"/>
        <function-ref name="set" scoped="" ref="0x7f3392aea4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f3392aea640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f3392aee4c0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f3392aee4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392aee810"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392aee998"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392aeeb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392aeeca8"/>
        <function-ref name="get" scoped="" ref="0x7f3392aeee30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392aec020"/>
        <function-ref name="set" scoped="" ref="0x7f3392aec1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f3392aec330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f3392aef380" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f3392aef380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392aef6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392aef858"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392aef9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392aefb68"/>
        <function-ref name="get" scoped="" ref="0x7f3392aefcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392aefe78"/>
        <function-ref name="set" scoped="" ref="0x7f3392aee030"/>
        <function-ref name="clr" scoped="" ref="0x7f3392aee1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f3392af0ae8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3392af0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3392af0e38"/>
        <function-ref name="stop" scoped="" ref="0x7f3392aef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f3392aea970" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f3392aea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f3392aeacc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f3392af5dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f3392af5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f3392af2170"/>
        <function-ref name="sleep" scoped="" ref="0x7f3392af0640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f3392af2480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3392af07c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f3392af2790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f3392af2918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f3392af2aa0"/>
        <function-ref name="read" scoped="" ref="0x7f3392af2c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f3392af2db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f3392af1020"/>
        <function-ref name="setClock" scoped="" ref="0x7f3392af11a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3392af1330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f3392af14b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f3392af1740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f3392af18c8"/>
        <function-ref name="write" scoped="" ref="0x7f3392af1a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3392af1bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f3392af1d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f3392af0020"/>
        <function-ref name="getClock" scoped="" ref="0x7f3392af01a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f3392af0330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f3392af22f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f3392af2608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f3392af04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f3392aec648" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f3392aec648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3392aec998"/>
        <function-ref name="isInput" scoped="" ref="0x7f3392aecb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3392aecca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3392aece30"/>
        <function-ref name="get" scoped="" ref="0x7f3392aeb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3392aeb1a8"/>
        <function-ref name="set" scoped="" ref="0x7f3392aeb330"/>
        <function-ref name="clr" scoped="" ref="0x7f3392aeb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3392aa29a8" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3392aa29a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3392aa2d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3392aa1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3392aa1ae8" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3392aa1ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3392aa1e58"/>
        <function-ref name="configure" scoped="" ref="0x7f3392aa0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3392aa4b50" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f3392aa4b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3392aa2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3392aa21a8"/>
        <function-ref name="request" scoped="" ref="0x7f3392aa2330"/>
        <function-ref name="granted" scoped="" ref="0x7f3392aa24b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3392aa2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3392aa1268" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3392aa1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3392aa15b8"/>
        <function-ref name="userId" scoped="" ref="0x7f3392aa1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f339195f400" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f339195f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339195f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f339195f9d8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f339195f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f339195fd28"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f339195e020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f339195e1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f339195e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f339195c698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f339195c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f339195ca08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f339195cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f339195b6c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f339195b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f339195ba30"/>
        <function-ref name="configure" scoped="" ref="0x7f339195bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f339195be40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f339195be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33919541c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3391954348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33919544d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3391954658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f339195d918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f339195d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f339195dc88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f339195de10"/>
        <function-ref name="request" scoped="" ref="0x7f339195c020"/>
        <function-ref name="granted" scoped="" ref="0x7f339195c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f339195c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f339195cdd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f339195cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f339195b170"/>
        <function-ref name="userId" scoped="" ref="0x7f339195b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3391954920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f3391954920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3391954c70"/>
        <function-ref name="runTask" scoped="" ref="0x7f3391954df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3392a89910" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3392a89910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3392a89c60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3392a89de8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3392a91020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3392a911a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3392a91330"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3392a914b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3392a91640"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3392a917c8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3392a91950"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3392a91ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3392a90020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3392a90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3392a84270"/>
        <function-ref name="test" scoped="" ref="0x7f3392a86930"/>
        <function-ref name="get" scoped="" ref="0x7f3392a90ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f3392a87560"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a87a38"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a86db8"/>
        <function-ref name="set" scoped="" ref="0x7f3392a87088"/>
        <function-ref name="start" scoped="" ref="0x7f3392a86020"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a864a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f3392a84e18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f3392a84e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3392a81798"/>
        <function-ref name="fired" scoped="" ref="0x7f3392a824f8"/>
        <function-ref name="get" scoped="" ref="0x7f3392a83a18"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a82980"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a81c20"/>
        <function-ref name="set" scoped="" ref="0x7f3392a82020"/>
        <function-ref name="start" scoped="" ref="0x7f3392a82e08"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a81310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3392a99d00" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3392a99d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3392a94e20"/>
        <function-ref name="test" scoped="" ref="0x7f3392a94510"/>
        <function-ref name="get" scoped="" ref="0x7f3392a968f0"/>
        <function-ref name="setScale" scoped="" ref="0x7f3392a92310"/>
        <function-ref name="getScale" scoped="" ref="0x7f3392a927e8"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a95738"/>
        <function-ref name="overflow" scoped="" ref="0x7f3392a952b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a94998"/>
        <function-ref name="set" scoped="" ref="0x7f3392a96d78"/>
        <function-ref name="start" scoped="" ref="0x7f3392a95bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a94088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3392a77160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3392a77160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3392a774b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f3392a77638"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3392a777c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3392a77948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3392a77ad0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f3392a77c58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3392a77de0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3392a76020"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3392a761a8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3392a76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f3392a71020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f3392a71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3392a6e7a8"/>
        <function-ref name="fired" scoped="" ref="0x7f3392a70560"/>
        <function-ref name="get" scoped="" ref="0x7f3392a71ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a709e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a6ec30"/>
        <function-ref name="set" scoped="" ref="0x7f3392a70088"/>
        <function-ref name="start" scoped="" ref="0x7f3392a70e70"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a6e320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3392a76808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3392a76808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f3392a72930"/>
        <function-ref name="test" scoped="" ref="0x7f3392a72020"/>
        <function-ref name="get" scoped="" ref="0x7f3392a753c8"/>
        <function-ref name="captured" scoped="" ref="0x7f3392a75d28"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a73238"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a724a8"/>
        <function-ref name="set" scoped="" ref="0x7f3392a75850"/>
        <function-ref name="start" scoped="" ref="0x7f3392a736c0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a73b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f3392a6d360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f3392a6d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3392a6ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f3392a6c980"/>
        <function-ref name="get" scoped="" ref="0x7f3392a6c020"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a6ce08"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a690f8"/>
        <function-ref name="set" scoped="" ref="0x7f3392a6c4a8"/>
        <function-ref name="start" scoped="" ref="0x7f3392a6a310"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a6a798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f3392a69770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f3392a69770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3392a65020"/>
        <function-ref name="fired" scoped="" ref="0x7f3392a68d08"/>
        <function-ref name="get" scoped="" ref="0x7f3392a683a8"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a661f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a654a8"/>
        <function-ref name="set" scoped="" ref="0x7f3392a68830"/>
        <function-ref name="start" scoped="" ref="0x7f3392a66680"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a66b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3392a7c180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3392a7c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3392a78270"/>
        <function-ref name="test" scoped="" ref="0x7f3392a79930"/>
        <function-ref name="get" scoped="" ref="0x7f3392a7cd00"/>
        <function-ref name="setScale" scoped="" ref="0x7f3392a786f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f3392a78bd0"/>
        <function-ref name="reset" scoped="" ref="0x7f3392a7bb58"/>
        <function-ref name="overflow" scoped="" ref="0x7f3392a7b6d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392a79db8"/>
        <function-ref name="set" scoped="" ref="0x7f3392a7b1f8"/>
        <function-ref name="start" scoped="" ref="0x7f3392a79020"/>
        <function-ref name="stop" scoped="" ref="0x7f3392a794a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f339299f578" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f339299f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3393a179f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f339299cc88"/>
        <function-ref name="fired" scoped="" ref="0x7f339299dd08"/>
        <function-ref name="startAt" scoped="" ref="0x7f339299c680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f339299c1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f339299b150"/>
        <function-ref name="start" scoped="" ref="0x7f339299d3a8"/>
        <function-ref name="stop" scoped="" ref="0x7f339299d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33929e54e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33929e54e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f3393ae3388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f3393ae3388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33929e5838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33929e5c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f33929e5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f33929d6db8"/>
        <function-ref name="test" scoped="" ref="0x7f33929d64a8"/>
        <function-ref name="get" scoped="" ref="0x7f33929d9820"/>
        <function-ref name="setScale" scoped="" ref="0x7f33929d5270"/>
        <function-ref name="getScale" scoped="" ref="0x7f33929d5748"/>
        <function-ref name="reset" scoped="" ref="0x7f33929d7658"/>
        <function-ref name="overflow" scoped="" ref="0x7f33929d71d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f33929d6930"/>
        <function-ref name="set" scoped="" ref="0x7f33929d9ca8"/>
        <function-ref name="start" scoped="" ref="0x7f33929d7ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f33929d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f339192b750" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f339192b750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f3393ae3020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f3393ae3020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3393a179f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3391928020"/>
        <function-ref name="fired" scoped="" ref="0x7f3391929020"/>
        <function-ref name="startAt" scoped="" ref="0x7f3391929930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33919294a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33919284a8"/>
        <function-ref name="start" scoped="" ref="0x7f339192a578"/>
        <function-ref name="stop" scoped="" ref="0x7f339192aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f3391922a80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f3391922a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f339191f270"/>
        <function-ref name="fired" scoped="" ref="0x7f3391920020"/>
        <function-ref name="get" scoped="" ref="0x7f3391921658"/>
        <function-ref name="reset" scoped="" ref="0x7f33919204a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f339191f6f8"/>
        <function-ref name="set" scoped="" ref="0x7f3391921ae0"/>
        <function-ref name="start" scoped="" ref="0x7f3391920930"/>
        <function-ref name="stop" scoped="" ref="0x7f3391920db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f33919289c8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f33919289c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3391924b80"/>
        <function-ref name="test" scoped="" ref="0x7f3391924270"/>
        <function-ref name="get" scoped="" ref="0x7f3391926598"/>
        <function-ref name="setScale" scoped="" ref="0x7f3391922088"/>
        <function-ref name="getScale" scoped="" ref="0x7f3391922560"/>
        <function-ref name="reset" scoped="" ref="0x7f33919254a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3391925020"/>
        <function-ref name="isOn" scoped="" ref="0x7f33919246f8"/>
        <function-ref name="set" scoped="" ref="0x7f3391926a20"/>
        <function-ref name="start" scoped="" ref="0x7f3391925930"/>
        <function-ref name="stop" scoped="" ref="0x7f3391925db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f339299ae68" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f339299ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392997a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3392996b18" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3392996b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3393a179f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33929918f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3392990230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3392991d80"/>
        <function-ref name="overflow" scoped="" ref="0x7f33929906b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f339298eb90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f339298eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TOne" ref="0x7f3393a179f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339298d930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f339297b270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f339298ddb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f339297b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f339297bc58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f339297bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3392977db8"/>
        <function-ref name="test" scoped="" ref="0x7f33929774a8"/>
        <function-ref name="get" scoped="" ref="0x7f3392979820"/>
        <function-ref name="setScale" scoped="" ref="0x7f3392975270"/>
        <function-ref name="getScale" scoped="" ref="0x7f3392975748"/>
        <function-ref name="reset" scoped="" ref="0x7f3392978658"/>
        <function-ref name="overflow" scoped="" ref="0x7f33929781d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392977930"/>
        <function-ref name="set" scoped="" ref="0x7f3392979ca8"/>
        <function-ref name="start" scoped="" ref="0x7f3392978ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392977020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f33929552b0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f33929552b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392954088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3392954998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3392954510"/>
        <function-ref name="overflow" scoped="" ref="0x7f3392954e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33929580e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f33929580e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392958e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3392956798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3392956310"/>
        <function-ref name="overflow" scoped="" ref="0x7f3392956c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3392951988" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f3392951988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392950560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3392950b88" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3392950b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339294f930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f339294e270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f339294fdb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f339294e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33927a8940" loc="142:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f33927a8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33927a8c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f33927a5b98" loc="145:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f33927a5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f33927a4020"/>
        <function-ref name="setRoot" scoped="" ref="0x7f33927a41a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f33927a4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33927bfbb0" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f33927bfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33927be020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33927be1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33927be330"/>
        <function-ref name="cancel" scoped="" ref="0x7f33927be4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33927be640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f33927a0268" loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f33927a0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f33927a05b8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f33927a0740"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f33927a08c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f33927a0a50"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f33927a0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x7f33927c2700" loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x7f33927c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f33927c2a50"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f33927c2bd8"/>
        <function-ref name="setType" scoped="" ref="0x7f33927c2d60"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f33927c1020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f33927c11a8"/>
        <function-ref name="getType" scoped="" ref="0x7f33927c1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f33927b83f8" loc="129:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f33927b83f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f33927b8748"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f33927b88d0"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f33927b8a58"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f33927b8be0"/>
        <function-ref name="evicted" scoped="" ref="0x7f33927b8d68"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f33927b7020"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f33927b71a8"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f33927b7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x7f33927a9020" loc="140:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x7f33927a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f33927a9b68"/>
        <function-ref name="flush" scoped="" ref="0x7f33927a8528"/>
        <function-ref name="lookup" scoped="" ref="0x7f33927a8088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x7f33927c34d8" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x7f33927c34d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f33927c3848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33927c3a90" loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33927c3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33927c3de0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33927c2020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33927c21a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33927c2330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33927c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33927c5db0" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f33927c5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33927c3170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f33927a1a10" loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f33927a1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33927a1d60"/>
        <function-ref name="rand32" scoped="" ref="0x7f33927a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33927c6860" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33927c6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33927c6bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33927c6d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33927c5020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33927c51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33927c5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x7f33927bd3b0" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x7f33927bd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33927b96c8"/>
        <function-ref name="fired" scoped="" ref="0x7f33927bcdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33927baad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33927ba688"/>
        <function-ref name="getdt" scoped="" ref="0x7f33927b8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33927b9b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33927ba238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33927bc020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33927b90f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33927bc4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f33927bc960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f33927a0e60" loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f33927a0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f339279f1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f339279f370"/>
        <function-ref name="start" scoped="" ref="0x7f339279f4f8"/>
        <function-ref name="stop" scoped="" ref="0x7f339279f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f339279f948" loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f339279f948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f339279fc98"/>
        <function-ref name="runTask" scoped="" ref="0x7f339279fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f33927b6d58" loc="137:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f33927b6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f33927b3610"/>
        <function-ref name="enqueue" scoped="" ref="0x7f33927b1300"/>
        <function-ref name="element" scoped="" ref="0x7f33927b1930"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33927b31c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33927b3c70"/>
        <function-ref name="empty" scoped="" ref="0x7f33927b48f0"/>
        <function-ref name="size" scoped="" ref="0x7f33927b4d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x7f33927a75b8" loc="144:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f33927a75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f33927a7908"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f33927a7a90"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f33927a7c18"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f33927a7da0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f33927a5020"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f33927a51a8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f33927a5330"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f33927a54b8"/>
        <function-ref name="getParent" scoped="" ref="0x7f33927a5640"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f33927a57c8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f33927a5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f33927b6020" loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f33927b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33927b6370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33927b64f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33927b6680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33927b6808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33927b6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33927c7980" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33927c7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33927c7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33927c5698" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33927c5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33927c5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x7f33927bf3f0" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f33927bf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f33927bf740"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f33927bf8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x7f33927b7578" loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x7f33927b7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f33927b78c8"/>
        <function-ref name="routeFound" scoped="" ref="0x7f33927b7a50"/>
        <function-ref name="nextHop" scoped="" ref="0x7f33927b7bd8"/>
        <function-ref name="noRoute" scoped="" ref="0x7f33927b7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33927a23f0" loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f33927a23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33927a2740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33927a28c8"/>
        <function-ref name="led1On" scoped="" ref="0x7f33927a2a50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33927a2bd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33927a2d60"/>
        <function-ref name="get" scoped="" ref="0x7f33927a1020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33927a11a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f33927a17c8"/>
        <function-ref name="set" scoped="" ref="0x7f33927a14b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33927a1330"/>
        <function-ref name="led0On" scoped="" ref="0x7f33927a1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f33927be888" loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33927be888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33927bebd8"/>
        <function-ref name="noAck" scoped="" ref="0x7f33927bed60"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33927bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x7f33927c1578" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f33927c1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f33927c18c8"/>
        <function-ref name="option" scoped="" ref="0x7f33927c1a50"/>
        <function-ref name="setEtx" scoped="" ref="0x7f33927c1bd8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f33927c1d60"/>
        <function-ref name="clearOption" scoped="" ref="0x7f33927c0020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f33927c01a8"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f33927c0330"/>
        <function-ref name="setType" scoped="" ref="0x7f33927c04b8"/>
        <function-ref name="setOption" scoped="" ref="0x7f33927c0640"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f33927c07c8"/>
        <function-ref name="getThl" scoped="" ref="0x7f33927c0950"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f33927c0ad8"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f33927c0c60"/>
        <function-ref name="getType" scoped="" ref="0x7f33927bf020"/>
        <function-ref name="setThl" scoped="" ref="0x7f33927bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x7f33927b00e0" loc="138:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x7f33927b00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33927ad088"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33927af510"/>
        <function-ref name="empty" scoped="" ref="0x7f33927b0c28"/>
        <function-ref name="put" scoped="" ref="0x7f33927af960"/>
        <function-ref name="size" scoped="" ref="0x7f33927af0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33927a4e50" loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33927a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33927a31e8"/>
        <function-ref name="source" scoped="" ref="0x7f33927a3370"/>
        <function-ref name="address" scoped="" ref="0x7f33927a34f8"/>
        <function-ref name="destination" scoped="" ref="0x7f33927a3680"/>
        <function-ref name="setSource" scoped="" ref="0x7f33927a3808"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33927a3990"/>
        <function-ref name="type" scoped="" ref="0x7f33927a3b18"/>
        <function-ref name="setType" scoped="" ref="0x7f33927a3ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33927a3e28"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33927a2020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33927a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33927c6020" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f33927c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33927c6370"/>
        <function-ref name="stop" scoped="" ref="0x7f33927c64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x7f33927a7020" loc="143:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x7f33927a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33927a7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f33927ad868" loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f33927ad868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33927ab7a0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33927acc78"/>
        <function-ref name="empty" scoped="" ref="0x7f33927ac3d8"/>
        <function-ref name="put" scoped="" ref="0x7f33927ab0f8"/>
        <function-ref name="size" scoped="" ref="0x7f33927ac828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x7f33927a4698" loc="146:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f33927a4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f33927a4c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f3392794020" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f3392794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339276e020"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3392770470"/>
        <function-ref name="empty" scoped="" ref="0x7f3392794b68"/>
        <function-ref name="put" scoped="" ref="0x7f33927708c0"/>
        <function-ref name="size" scoped="" ref="0x7f3392770020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f339183c3f0" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f339183c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339183a3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f339183b8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f339183b020"/>
        <function-ref name="put" scoped="" ref="0x7f339183bd10"/>
        <function-ref name="size" scoped="" ref="0x7f339183b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f339183dcc0" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f339183dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339183c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f339276c228" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f339276c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33927691b8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f339276a648"/>
        <function-ref name="empty" scoped="" ref="0x7f339276cd70"/>
        <function-ref name="put" scoped="" ref="0x7f339276aa98"/>
        <function-ref name="size" scoped="" ref="0x7f339276a1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f339182a6c0" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f339182a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3391828730"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3391829c10"/>
        <function-ref name="empty" scoped="" ref="0x7f3391829370"/>
        <function-ref name="put" scoped="" ref="0x7f3391828088"/>
        <function-ref name="size" scoped="" ref="0x7f33918297c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f339182a020" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f339182a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339182a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f33927666e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f33927666e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x7f33928f0da8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x7f33928ea2d8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f339274b088"/>
        <function-ref name="enqueue" scoped="" ref="0x7f339274bd48"/>
        <function-ref name="element" scoped="" ref="0x7f339274a3a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f339274dc10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f339274b6e8"/>
        <function-ref name="empty" scoped="" ref="0x7f339274d370"/>
        <function-ref name="size" scoped="" ref="0x7f339274d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f3392747e10" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f3392747e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f33927199e0"/>
        <function-ref name="flush" scoped="" ref="0x7f3392718348"/>
        <function-ref name="lookup" scoped="" ref="0x7f3392719e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x7f339180e4f8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x7f339180e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x7f339180c088"/>
        <function-ref name="flush" scoped="" ref="0x7f339180c9c8"/>
        <function-ref name="lookup" scoped="" ref="0x7f339180c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f339180fde0" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f339180fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f339180e170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x7f339180ce00" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x7f339180ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f339180b1a8"/>
        <function-ref name="option" scoped="" ref="0x7f339180b330"/>
        <function-ref name="setEtx" scoped="" ref="0x7f339180b4b8"/>
        <function-ref name="setOrigin" scoped="" ref="0x7f339180b640"/>
        <function-ref name="clearOption" scoped="" ref="0x7f339180b7c8"/>
        <function-ref name="getEtx" scoped="" ref="0x7f339180b950"/>
        <function-ref name="getOrigin" scoped="" ref="0x7f339180bad8"/>
        <function-ref name="setType" scoped="" ref="0x7f339180bc60"/>
        <function-ref name="setOption" scoped="" ref="0x7f339180bde8"/>
        <function-ref name="matchPacket" scoped="" ref="0x7f339180a020"/>
        <function-ref name="getThl" scoped="" ref="0x7f339180a1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f339180a330"/>
        <function-ref name="matchInstance" scoped="" ref="0x7f339180a4b8"/>
        <function-ref name="getType" scoped="" ref="0x7f339180a740"/>
        <function-ref name="setThl" scoped="" ref="0x7f339180a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3392716cf8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3392716cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3392712088"/>
        <function-ref name="fired" scoped="" ref="0x7f3392714688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3392713470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3392713020"/>
        <function-ref name="getdt" scoped="" ref="0x7f3392712928"/>
        <function-ref name="gett0" scoped="" ref="0x7f33927124d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3392714ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33927158b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3392713a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3392715d58"/>
        <function-ref name="stop" scoped="" ref="0x7f3392714238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f339270f350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f339270f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f339270c6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f339270edb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f339270dad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f339270d688"/>
        <function-ref name="getdt" scoped="" ref="0x7f339270a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f339270cb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f339270d238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f339270e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f339270c0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f339270e4c0"/>
        <function-ref name="stop" scoped="" ref="0x7f339270e960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33926f6668" loc="57:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f33926f6668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33926f69b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x7f33926ffbe0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f33926ffbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f33926fe020"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f33926fe1a8"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f33926fe330"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f33926fe4b8"/>
        <function-ref name="evicted" scoped="" ref="0x7f33926fe640"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f33926fe7c8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f33926fe950"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f33926fead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33926fd360" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33926fd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33926fd6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33926fd838"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33926fd9c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33926fdb48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33926fdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f33926fb678" loc="54:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33926fb678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33926fb9c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33926fbb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33926fbcd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f33926fbe60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33926fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392700978" loc="45:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392700978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392700cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392700e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33926ff020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33926ff1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33926ff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f33926f5328" loc="59:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f33926f5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33926f5778"/>
        <function-ref name="rand32" scoped="" ref="0x7f33926f5900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f33926f7968" loc="56:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f33926f7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33926f7cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33926f7e40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33926f6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33926f61a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33926f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33926fed50" loc="48:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33926fed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33926fd0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x7f33926fa370" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x7f33926fa370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33926fa6c0"/>
        <function-ref name="source" scoped="" ref="0x7f33926fa848"/>
        <function-ref name="address" scoped="" ref="0x7f33926fa9d0"/>
        <function-ref name="destination" scoped="" ref="0x7f33926fab58"/>
        <function-ref name="setSource" scoped="" ref="0x7f33926face0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33926fae68"/>
        <function-ref name="type" scoped="" ref="0x7f33926f7020"/>
        <function-ref name="setType" scoped="" ref="0x7f33926f71a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33926f7330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33926f74b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33926f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33926ff5c0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33926ff5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33926ff910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x7f33926fb020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f33926fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f33926fb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33927001a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f33927001a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33927004f8"/>
        <function-ref name="stop" scoped="" ref="0x7f3392700680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x7f33926f6cb8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33926f6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f33926f50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33925c2080" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33925c2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33925c23d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925c2558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925c26e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33925c2868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33925c29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33925c2c38" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33925c2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33925c1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33925c11a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925c1330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925c14b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33925c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33925c1888" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33925c1888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33925c1bd8"/>
        <function-ref name="source" scoped="" ref="0x7f33925c1d60"/>
        <function-ref name="address" scoped="" ref="0x7f33925c0020"/>
        <function-ref name="destination" scoped="" ref="0x7f33925c01a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f33925c0330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33925c04b8"/>
        <function-ref name="type" scoped="" ref="0x7f33925c0640"/>
        <function-ref name="setType" scoped="" ref="0x7f33925c07c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33925c0950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33925c0ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33925c0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33925bf020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f33925bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33925bf370"/>
        <function-ref name="noAck" scoped="" ref="0x7f33925bf4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33925bf680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33917e3620" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33917e3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33917e3970"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33917e3af8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33917e3c80"/>
        <function-ref name="cancel" scoped="" ref="0x7f33917e3e08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33917e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33917e2268" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33917e2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33917e25b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33917e2740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33917e28c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33917e2a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33917e2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33917e2e20" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33917e2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33917e11a8"/>
        <function-ref name="source" scoped="" ref="0x7f33917e1330"/>
        <function-ref name="address" scoped="" ref="0x7f33917e14b8"/>
        <function-ref name="destination" scoped="" ref="0x7f33917e1640"/>
        <function-ref name="setSource" scoped="" ref="0x7f33917e17c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33917e1950"/>
        <function-ref name="type" scoped="" ref="0x7f33917e1ad8"/>
        <function-ref name="setType" scoped="" ref="0x7f33917e1c60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33917e1de8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33917e0020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33917e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33917e0430" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f33917e0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33917e0780"/>
        <function-ref name="noAck" scoped="" ref="0x7f33917e0908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33917e0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33917d7618" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33917d7618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33917d7968"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33917d7af0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33917d7c78"/>
        <function-ref name="cancel" scoped="" ref="0x7f33917d7e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33917d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f33917d62c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33917d62c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33917d6618"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33917d67a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33917d6928"/>
        <function-ref name="cancel" scoped="" ref="0x7f33917d6ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33917d6c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33917d6e80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33917d6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33917d41f8"/>
        <function-ref name="source" scoped="" ref="0x7f33917d4380"/>
        <function-ref name="address" scoped="" ref="0x7f33917d4508"/>
        <function-ref name="destination" scoped="" ref="0x7f33917d4690"/>
        <function-ref name="setSource" scoped="" ref="0x7f33917d4818"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33917d49a0"/>
        <function-ref name="type" scoped="" ref="0x7f33917d4b28"/>
        <function-ref name="setType" scoped="" ref="0x7f33917d4cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33917d4e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33917d3020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33917d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33926209a8" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33926209a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392620cf8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392620e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339261d030"/>
        <function-ref name="cancel" scoped="" ref="0x7f339261d1b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339261d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f33925d6a08" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33925d6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33925d6d78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925d5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925d51a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f33925d5330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33925d54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33925d7b98" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33925d7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33925d6020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925d61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925d6330"/>
        <function-ref name="cancel" scoped="" ref="0x7f33925d64b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33925d6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f33925d4d20" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33925d4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33925d30a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33925d3228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925d33b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925d3538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33925d36c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f33925d3988" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f33925d3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33925d3cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f33925d3e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f33925d2160" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f33925d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33925d24b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33925d2638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33925d5700" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33925d5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33925d5a50"/>
        <function-ref name="source" scoped="" ref="0x7f33925d5bd8"/>
        <function-ref name="address" scoped="" ref="0x7f33925d5d60"/>
        <function-ref name="destination" scoped="" ref="0x7f33925d4020"/>
        <function-ref name="setSource" scoped="" ref="0x7f33925d41a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33925d4330"/>
        <function-ref name="type" scoped="" ref="0x7f33925d44b8"/>
        <function-ref name="setType" scoped="" ref="0x7f33925d4640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33925d47c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33925d4950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33925d4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33925b6760" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33925b6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33925b6ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33925b6c38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925b6dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925b5020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33925b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33925b61c8" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33925b61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33925b6518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33925b53f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33925b53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33925b5740"/>
        <function-ref name="source" scoped="" ref="0x7f33925b58c8"/>
        <function-ref name="address" scoped="" ref="0x7f33925b5a50"/>
        <function-ref name="destination" scoped="" ref="0x7f33925b5bd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f33925b5d60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33925b4020"/>
        <function-ref name="type" scoped="" ref="0x7f33925b41a8"/>
        <function-ref name="setType" scoped="" ref="0x7f33925b4330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33925b44b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33925b4640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33925b47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33925ab760" loc="47:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33925ab760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33925abab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33925abc38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33925abdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33925aa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33925aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33925ab1c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33925ab1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33925ab518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33925aa3f0" loc="48:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33925aa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33925aa740"/>
        <function-ref name="source" scoped="" ref="0x7f33925aa8c8"/>
        <function-ref name="address" scoped="" ref="0x7f33925aaa50"/>
        <function-ref name="destination" scoped="" ref="0x7f33925aabd8"/>
        <function-ref name="setSource" scoped="" ref="0x7f33925aad60"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33925a9020"/>
        <function-ref name="type" scoped="" ref="0x7f33925a91a8"/>
        <function-ref name="setType" scoped="" ref="0x7f33925a9330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33925a94b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33925a9640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33925a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f33924b3e08" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x7f33924b3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f33924b21a8"/>
        <function-ref name="setRoot" scoped="" ref="0x7f33924b2330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f33924b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x7f339249ce18" loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x7f339249ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f339249b1a8"/>
        <function-ref name="runTask" scoped="" ref="0x7f339249b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x7f339249fcb8" loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f339249fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f339249e0a0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f339249e228"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f339249e3b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f339249e538"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f339249e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x7f33924ade60" loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x7f33924ade60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x7f33924ac1e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x7f33924ac370"/>
        <function-ref name="txNoAck" scoped="" ref="0x7f33924ac4f8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x7f33924ac680"/>
        <function-ref name="evicted" scoped="" ref="0x7f33924ac808"/>
        <function-ref name="clearDLQ" scoped="" ref="0x7f33924ac990"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x7f33924acb18"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x7f33924acca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x7f33924af470" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x7f33924af470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x7f33924af7c0"/>
        <function-ref name="setEtx" scoped="" ref="0x7f33924af948"/>
        <function-ref name="clearOption" scoped="" ref="0x7f33924afad0"/>
        <function-ref name="getEtx" scoped="" ref="0x7f33924afc58"/>
        <function-ref name="setOption" scoped="" ref="0x7f33924afde0"/>
        <function-ref name="setParent" scoped="" ref="0x7f33924ae020"/>
        <function-ref name="getParent" scoped="" ref="0x7f33924ae1a8"/>
        <function-ref name="getOption" scoped="" ref="0x7f33924ae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f33924aa5b8" loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f33924aa5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33924aa908"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33924aaa90"/>
        <function-ref name="start" scoped="" ref="0x7f33924aac18"/>
        <function-ref name="stop" scoped="" ref="0x7f33924aada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f339249f598" loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f339249f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f339249f8e8"/>
        <function-ref name="rand32" scoped="" ref="0x7f339249fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x7f33924b2700" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x7f33924b2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x7f33924b2a50"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f33924b2bd8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x7f33924b2d60"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x7f33924b0020"/>
        <function-ref name="getEtx" scoped="" ref="0x7f33924b01a8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x7f33924b0330"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x7f33924b04b8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x7f33924b0640"/>
        <function-ref name="getParent" scoped="" ref="0x7f33924b07c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x7f33924b0950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x7f33924b0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x7f339249c678" loc="390:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x7f339249c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f339249c9c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f339249cb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33924ae578" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33924ae578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33924ae8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x7f33924aebb0" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x7f33924aebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33924ad020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33924ad1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33924ad330"/>
        <function-ref name="cancel" scoped="" ref="0x7f33924ad4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33924ad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x7f33924a9168" loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x7f33924a9168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33924a55f0"/>
        <function-ref name="fired" scoped="" ref="0x7f33924a8a88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33924a68c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33924a6470"/>
        <function-ref name="getdt" scoped="" ref="0x7f33924a4020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33924a5a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33924a6020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33924a9cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33924a5020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33924a8198"/>
        <function-ref name="stop" scoped="" ref="0x7f33924a8638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x7f33924a4540" loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x7f33924a4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33924a08f0"/>
        <function-ref name="fired" scoped="" ref="0x7f33924a1020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33924a1d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33924a18c0"/>
        <function-ref name="getdt" scoped="" ref="0x7f339249f1c0"/>
        <function-ref name="gett0" scoped="" ref="0x7f33924a0d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33924a1470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33924a31e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33924a0320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33924a3688"/>
        <function-ref name="stop" scoped="" ref="0x7f33924a3b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x7f339249e908" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x7f339249e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x7f339249ec58"/>
        <function-ref name="setClientCongested" scoped="" ref="0x7f339249ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x7f339249c060" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x7f339249c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x7f339249c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x7f33924ad8c8" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x7f33924ad8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33924adc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33924ab020" loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33924ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33924ab370"/>
        <function-ref name="source" scoped="" ref="0x7f33924ab4f8"/>
        <function-ref name="address" scoped="" ref="0x7f33924ab680"/>
        <function-ref name="destination" scoped="" ref="0x7f33924ab808"/>
        <function-ref name="setSource" scoped="" ref="0x7f33924ab990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33924abb18"/>
        <function-ref name="type" scoped="" ref="0x7f33924abca0"/>
        <function-ref name="setType" scoped="" ref="0x7f33924abe28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33924aa020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33924aa1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33924aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33924b0d20" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f33924b0d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33924af0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33924af228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x7f33924b33d8" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x7f33924b33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x7f33924b3728"/>
        <function-ref name="routeFound" scoped="" ref="0x7f33924b38b0"/>
        <function-ref name="nextHop" scoped="" ref="0x7f33924b3a38"/>
        <function-ref name="noRoute" scoped="" ref="0x7f33924b3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3392493350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3392493350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a59020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f3393a59378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f339248f6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f3392492db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3392491ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3392491688"/>
        <function-ref name="getdt" scoped="" ref="0x7f339248e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f339248fb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3392491238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f3392492020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f339248f0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33924924c0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392492960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33924891a8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33924891a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33924894f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392489680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392489808"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392489990"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392489b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3392489d60" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3392489d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33924880d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392488260"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33924883e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392488570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33924886f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3392488940" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3392488940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3392488c90"/>
        <function-ref name="source" scoped="" ref="0x7f3392488e18"/>
        <function-ref name="address" scoped="" ref="0x7f3392487020"/>
        <function-ref name="destination" scoped="" ref="0x7f33924871a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3392487330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33924874b8"/>
        <function-ref name="type" scoped="" ref="0x7f3392487640"/>
        <function-ref name="setType" scoped="" ref="0x7f33924877c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3392487950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3392487ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3392487c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3392486020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3392486020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3392486370"/>
        <function-ref name="noAck" scoped="" ref="0x7f33924864f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3392486680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f339170d5e8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f339170d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339170d938"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339170dac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339170dc48"/>
        <function-ref name="cancel" scoped="" ref="0x7f339170ddd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339170c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f339170c268" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f339170c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339170c5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f339170c740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339170c8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339170ca50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339170cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f339170ce20" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f339170ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f339170b1a8"/>
        <function-ref name="source" scoped="" ref="0x7f339170b330"/>
        <function-ref name="address" scoped="" ref="0x7f339170b4b8"/>
        <function-ref name="destination" scoped="" ref="0x7f339170b640"/>
        <function-ref name="setSource" scoped="" ref="0x7f339170b7c8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f339170b950"/>
        <function-ref name="type" scoped="" ref="0x7f339170bad8"/>
        <function-ref name="setType" scoped="" ref="0x7f339170bc60"/>
        <function-ref name="isForMe" scoped="" ref="0x7f339170bde8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f339170a020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f339170a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f339170a430" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f339170a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f339170a780"/>
        <function-ref name="noAck" scoped="" ref="0x7f339170a908"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f339170aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3391701790" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3391701790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391701ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3391701c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391701df0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391700020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33917001a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f3391700450" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3391700450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33917007a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3391700928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391700ab0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391700c38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391700dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33916ff060" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33916ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33916ff3b0"/>
        <function-ref name="source" scoped="" ref="0x7f33916ff538"/>
        <function-ref name="address" scoped="" ref="0x7f33916ff6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f33916ff848"/>
        <function-ref name="setSource" scoped="" ref="0x7f33916ff9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33916ffb58"/>
        <function-ref name="type" scoped="" ref="0x7f33916ffce0"/>
        <function-ref name="setType" scoped="" ref="0x7f33916ffe68"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33916fd020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33916fd1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33916fd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3392484ca8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3392484ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392482020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33924821a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392482330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33924824b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392482640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3392484710" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3392484710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392484a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f3392482888" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3392482888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3392482bd8"/>
        <function-ref name="source" scoped="" ref="0x7f3392482d60"/>
        <function-ref name="address" scoped="" ref="0x7f3392481020"/>
        <function-ref name="destination" scoped="" ref="0x7f33924811a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f3392481330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33924814b8"/>
        <function-ref name="type" scoped="" ref="0x7f3392481640"/>
        <function-ref name="setType" scoped="" ref="0x7f33924817c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3392481950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3392481ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3392481c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f3392446268" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3392446268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33924465b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392446740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33924468c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392446a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3392446bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f339245e550" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f339245e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339245e8a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339245ea28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339245ebb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f339245ed38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392446020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33916e5700" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33916e5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33916e5a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33916e5bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33916e5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33916e4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33916e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33916e7a78" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33916e7a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33916e7dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33916e5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33916e51a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f33916e5330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33916e54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x7f33916df478" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x7f33916df478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x7f33916df7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f3392442020" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f3392442020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3392442370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33924424f8"/>
        <function-ref name="start" scoped="" ref="0x7f3392442680"/>
        <function-ref name="stop" scoped="" ref="0x7f3392442808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3392441020" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3392441020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392441370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33924414f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392441680"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392441808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392441990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33924407a0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33924407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3392440af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392440c78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392440e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339243f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339243f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33924401c8" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33924401c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392440518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f339243d480" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f339243d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f339243d7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f339243d958"/>
        <function-ref name="led1On" scoped="" ref="0x7f339243dae0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f339243dc68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f339243ddf0"/>
        <function-ref name="get" scoped="" ref="0x7f339243c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f339243c1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f339243c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f339243c330"/>
        <function-ref name="led0On" scoped="" ref="0x7f339243c4b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f339243c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f339243eaf0" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f339243eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f339243ee40"/>
        <function-ref name="noAck" scoped="" ref="0x7f339243d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f339243d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f339243f448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f339243f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f339243f798"/>
        <function-ref name="source" scoped="" ref="0x7f339243f920"/>
        <function-ref name="address" scoped="" ref="0x7f339243faa8"/>
        <function-ref name="destination" scoped="" ref="0x7f339243fc30"/>
        <function-ref name="setSource" scoped="" ref="0x7f339243fdb8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f339243e020"/>
        <function-ref name="type" scoped="" ref="0x7f339243e1a8"/>
        <function-ref name="setType" scoped="" ref="0x7f339243e330"/>
        <function-ref name="isForMe" scoped="" ref="0x7f339243e4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f339243e640"/>
        <function-ref name="localGroup" scoped="" ref="0x7f339243e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33923e4bb0" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f33923e4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33923e3020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33923e31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33923e3330"/>
        <function-ref name="cancel" scoped="" ref="0x7f33923e34b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33923e3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33923e38c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f33923e38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33923e3c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3392439b60" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3392439b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33923e8020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33923e81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33923e8330"/>
        <function-ref name="cancel" scoped="" ref="0x7f33923e84b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33923e8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33923e6578" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f33923e6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33923e68c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33923e6a50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33923e6bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33923e6d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33923e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33923e89a8" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33923e89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33923e8d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33923e4268" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33923e4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33923e45b8"/>
        <function-ref name="noAck" scoped="" ref="0x7f33923e4740"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33923e48c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33923e7020" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33923e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33923e7370"/>
        <function-ref name="source" scoped="" ref="0x7f33923e74f8"/>
        <function-ref name="address" scoped="" ref="0x7f33923e7680"/>
        <function-ref name="destination" scoped="" ref="0x7f33923e7808"/>
        <function-ref name="setSource" scoped="" ref="0x7f33923e7990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33923e7b18"/>
        <function-ref name="type" scoped="" ref="0x7f33923e7ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f33923e7e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33923e6020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33923e61a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33923e6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33923de2e8" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f33923de2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33923de638"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33923de7c0"/>
        <function-ref name="start" scoped="" ref="0x7f33923de948"/>
        <function-ref name="stop" scoped="" ref="0x7f33923dead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33923ddce8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33923ddce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33937a6710"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33923dc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33923dc228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33923dc3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33923dc538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33923dc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33923e1b98" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33923e1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33923de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33923dd270" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f33923dd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33937a6710"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33923dd5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33923db5a8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f33923db5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33923db8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33923dba80"/>
        <function-ref name="led1On" scoped="" ref="0x7f33923dbc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33923dbd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33923da020"/>
        <function-ref name="get" scoped="" ref="0x7f33923da1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33923da330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33923da950"/>
        <function-ref name="set" scoped="" ref="0x7f33923da4b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f33923da640"/>
        <function-ref name="led2On" scoped="" ref="0x7f33923da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f33923d6ba8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f33923d6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33937a6710"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f33923db020"/>
        <function-ref name="offset" scoped="" ref="0x7f33923db1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f33923db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33923b7b90" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f33923b7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33923b6020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33923b61a8"/>
        <function-ref name="start" scoped="" ref="0x7f33923b6330"/>
        <function-ref name="stop" scoped="" ref="0x7f33923b64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f3392354830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x7f3392354830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392354b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392354d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f33923a5398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x7f33923a5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33923a56e8"/>
        <function-ref name="stop" scoped="" ref="0x7f33923a5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f339238ad70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x7f339238ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33923890f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392389278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33923b7578" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33923b7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33923b78c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f33923a2e40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x7f33923a2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f33923a41c0"/>
        <function-ref name="flush" scoped="" ref="0x7f33923a4348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f3392356020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x7f3392356020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392356370"/>
        <function-ref name="runTask" scoped="" ref="0x7f33923564f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f33923a7b38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f33923a7b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f33923af020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f33923af1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f33923af330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f33923af4b8"/>
        <function-ref name="putData" scoped="" ref="0x7f33923af640"/>
        <function-ref name="putDone" scoped="" ref="0x7f33923af7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f33923af950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33923afbc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f33923afbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33923a6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33923a61a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f33923a6330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33923a64b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33923a6640"/>
        <function-ref name="get" scoped="" ref="0x7f33923a67c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33923a6950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33923a5020"/>
        <function-ref name="set" scoped="" ref="0x7f33923a6ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f33923a6c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f33923a6de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f3392350918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f3392350918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392350c68"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392350df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f33923b0898" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f33923b0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f33923b0be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7f33923b0d70"/>
        <function-ref name="startSend" scoped="" ref="0x7f33923b5020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f33923b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f33923adb48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f33923adb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f33923b4020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f33923b41a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f33923b4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f339228c100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x7f339228c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f339228c450"/>
        <function-ref name="runTask" scoped="" ref="0x7f339228c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392291020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33937a6710"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392291390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392291518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33922916a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392291828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33922919b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f339228c8a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x7f339228c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f339228cbf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f339228cd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3392292868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f3392292868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33937a6710"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3392292bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f3392291db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x7f3392291db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33937a6710"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f339228f170"/>
        <function-ref name="offset" scoped="" ref="0x7f339228f2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f339228f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f339228ea50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f339228ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f339228eda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f339228d020"/>
        <function-ref name="led1On" scoped="" ref="0x7f339228d1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f339228d330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f339228d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f339228d640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f339228d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f339228dde8"/>
        <function-ref name="set" scoped="" ref="0x7f339228dad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f339228d950"/>
        <function-ref name="led0On" scoped="" ref="0x7f339228dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f339228e020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x7f339228e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f339228e370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f339228e4f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f339228e680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f339228e808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f339228f6c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f339228f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f339228fa18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f339228fba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f339228fd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f339227a448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f339227a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339227a798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f339227a920"/>
        <function-ref name="receive" scoped="" ref="0x7f339227aaa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f339227ac30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f339227adb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3392286020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33922861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f339228ab30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f339228ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f339228ae80"/>
        <function-ref name="resetSend" scoped="" ref="0x7f3392287030"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f33922871b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f3392287340"/>
        <function-ref name="putData" scoped="" ref="0x7f33922874c8"/>
        <function-ref name="putDone" scoped="" ref="0x7f3392287650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f33922877d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3392286420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f3392286420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3392286770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33922868f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f3392286a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3392286c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3392286d90"/>
        <function-ref name="get" scoped="" ref="0x7f3392285020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33922851a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33922857c8"/>
        <function-ref name="set" scoped="" ref="0x7f3392285330"/>
        <function-ref name="led0On" scoped="" ref="0x7f33922854b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f3392285640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f339225a290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f339225a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339225a5e0"/>
        <function-ref name="receive" scoped="" ref="0x7f339225a768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f33922610c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f33922610c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392261410"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f3392261598"/>
        <function-ref name="receive" scoped="" ref="0x7f3392261720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f33922618a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3392261a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3392261bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392261d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33922898b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f33922898b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3392289c00"/>
        <function-ref name="stop" scoped="" ref="0x7f3392289d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f339225faf0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f339225faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339225fe40"/>
        <function-ref name="receive" scoped="" ref="0x7f3392259020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f3392259310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f3392259310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392259660"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f33922597e8"/>
        <function-ref name="receive" scoped="" ref="0x7f3392259970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f3392259af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3392259c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f3392259e08"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392258020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3392258598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3392258598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33922573a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3392257cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3392257830"/>
        <function-ref name="overflow" scoped="" ref="0x7f3392255190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f339225f338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f339225f338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f339225f688"/>
        <function-ref name="stop" scoped="" ref="0x7f339225f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f3392253e58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x7f3392253e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33922111e8"/>
        <function-ref name="receive" scoped="" ref="0x7f3392211370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x7f33922105f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x7f33922105f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3392210948"/>
        <function-ref name="stop" scoped="" ref="0x7f3392210ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3392253120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f3392253120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3392253470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f33922115f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x7f33922115f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392211948"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f3392211ad0"/>
        <function-ref name="receive" scoped="" ref="0x7f3392211c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f3392211de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f3392210020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f33922101a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3392210330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f339220dc60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f339220dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339220c9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f339220b330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f339220ce78"/>
        <function-ref name="overflow" scoped="" ref="0x7f339220b7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x7f339220f5c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x7f339220f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f339220f910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f339220fa98"/>
        <function-ref name="rxDone" scoped="" ref="0x7f339220fc20"/>
        <function-ref name="txDone" scoped="" ref="0x7f339220fda8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f339220d020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f339220d1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f339220d330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f339220d4b8"/>
        <function-ref name="tx" scoped="" ref="0x7f339220d640"/>
        <function-ref name="rx" scoped="" ref="0x7f339220d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33922536f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f33922536f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3392253a48"/>
        <function-ref name="stop" scoped="" ref="0x7f3392253bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x7f3392210d98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x7f3392210d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f339220f170"/>
        <function-ref name="stop" scoped="" ref="0x7f339220f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f33921ef860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f33921ef860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33921efbb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33921efd38"/>
        <function-ref name="rxDone" scoped="" ref="0x7f33921ee020"/>
        <function-ref name="txDone" scoped="" ref="0x7f33921ee1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33921ee330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33921ee4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33921ee640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f33921ee7c8"/>
        <function-ref name="tx" scoped="" ref="0x7f33921ee950"/>
        <function-ref name="rx" scoped="" ref="0x7f33921eead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f33921ec020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f33921ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33921ec370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33921ec4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x7f33921ec680"/>
        <function-ref name="txDone" scoped="" ref="0x7f33921ec808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33921ec990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33921ecb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33921ecca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f33921ece28"/>
        <function-ref name="tx" scoped="" ref="0x7f33921eb020"/>
        <function-ref name="rx" scoped="" ref="0x7f33921eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f33921ef020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f33921ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921ef370"/>
        <function-ref name="stop" scoped="" ref="0x7f33921ef4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f33921eee58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f33921eee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921ed1e8"/>
        <function-ref name="stop" scoped="" ref="0x7f33921ed370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f33921ed6f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f33921ed6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921eda40"/>
        <function-ref name="stop" scoped="" ref="0x7f33921edbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f33921f0700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f33921f0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921f0a50"/>
        <function-ref name="stop" scoped="" ref="0x7f33921f0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x7f33921e8020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x7f33921e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33921e8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x7f33921e78a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x7f33921e78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33921e7bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33921e7d78"/>
        <function-ref name="rxDone" scoped="" ref="0x7f33921e6020"/>
        <function-ref name="txDone" scoped="" ref="0x7f33921e61a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33921e6330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33921e64b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33921e6640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f33921e67c8"/>
        <function-ref name="tx" scoped="" ref="0x7f33921e6950"/>
        <function-ref name="rx" scoped="" ref="0x7f33921e6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x7f33921e6e30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x7f33921e6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33921e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x7f33921e36d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x7f33921e36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33921e3a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33921e3bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x7f33921e3d38"/>
        <function-ref name="txDone" scoped="" ref="0x7f33921e2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33921e21a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33921e2330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33921e24b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x7f33921e2640"/>
        <function-ref name="tx" scoped="" ref="0x7f33921e27c8"/>
        <function-ref name="rx" scoped="" ref="0x7f33921e2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x7f33921e7020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x7f33921e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921e7370"/>
        <function-ref name="stop" scoped="" ref="0x7f33921e74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x7f33921e4568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x7f33921e4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921e48b8"/>
        <function-ref name="stop" scoped="" ref="0x7f33921e4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x7f33921e4e00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x7f33921e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921e31a8"/>
        <function-ref name="stop" scoped="" ref="0x7f33921e3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f33921e2c70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f33921e2c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f33921e1020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f33921e11a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f33921e1330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f33921e14b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f33921e1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f33921e1950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f33921e1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f33921e1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x7f33921e8730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x7f33921e8730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33921e8a80"/>
        <function-ref name="stop" scoped="" ref="0x7f33921e8c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3392183188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f3392183188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392182020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3392182930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33921824a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f3392182db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f339217d020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f339217d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3393a17d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f339217dd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f339217c6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f339217c230"/>
        <function-ref name="overflow" scoped="" ref="0x7f339217cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f3392174c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f3392174c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3392173020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f33921731a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3392173330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f33921734b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3392173640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f33921737c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f3392173950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f3392173ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f3392173c60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f3392173de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3392172350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f3392172350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f339216e580"/>
        <function-ref name="test" scoped="" ref="0x7f339216fc20"/>
        <function-ref name="get" scoped="" ref="0x7f3392171020"/>
        <function-ref name="captured" scoped="" ref="0x7f3392171980"/>
        <function-ref name="reset" scoped="" ref="0x7f3392171e58"/>
        <function-ref name="isOn" scoped="" ref="0x7f339216e0f8"/>
        <function-ref name="set" scoped="" ref="0x7f33921714a8"/>
        <function-ref name="start" scoped="" ref="0x7f339216f310"/>
        <function-ref name="stop" scoped="" ref="0x7f339216f798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f339216d1c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f339216d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f339216a930"/>
        <function-ref name="fired" scoped="" ref="0x7f339216b6d0"/>
        <function-ref name="get" scoped="" ref="0x7f339216dd48"/>
        <function-ref name="reset" scoped="" ref="0x7f339216bb58"/>
        <function-ref name="isOn" scoped="" ref="0x7f339216adb8"/>
        <function-ref name="set" scoped="" ref="0x7f339216b1f8"/>
        <function-ref name="start" scoped="" ref="0x7f339216a020"/>
        <function-ref name="stop" scoped="" ref="0x7f339216a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f339217bc30" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f339217bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f3392175db8"/>
        <function-ref name="test" scoped="" ref="0x7f33921754a8"/>
        <function-ref name="get" scoped="" ref="0x7f3392178820"/>
        <function-ref name="setScale" scoped="" ref="0x7f3392174270"/>
        <function-ref name="getScale" scoped="" ref="0x7f3392174748"/>
        <function-ref name="reset" scoped="" ref="0x7f3392177658"/>
        <function-ref name="overflow" scoped="" ref="0x7f33921771d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392175930"/>
        <function-ref name="set" scoped="" ref="0x7f3392178ca8"/>
        <function-ref name="start" scoped="" ref="0x7f3392177ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392175020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f33921603d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f33921603d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f3392160720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f33921608a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f3392160a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f3392160bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f3392160d40"/>
        <function-ref name="setControlB" scoped="" ref="0x7f339215f020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f339215f1a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f339215f330"/>
        <function-ref name="setControlC" scoped="" ref="0x7f339215f4b8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f339215f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f339215a4e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f339215a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3392158c30"/>
        <function-ref name="fired" scoped="" ref="0x7f33921599e8"/>
        <function-ref name="get" scoped="" ref="0x7f3392159088"/>
        <function-ref name="reset" scoped="" ref="0x7f3392159e70"/>
        <function-ref name="isOn" scoped="" ref="0x7f33921560f8"/>
        <function-ref name="set" scoped="" ref="0x7f3392159510"/>
        <function-ref name="start" scoped="" ref="0x7f3392158320"/>
        <function-ref name="stop" scoped="" ref="0x7f33921587a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f339215fb18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f339215fb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f339215bdb8"/>
        <function-ref name="test" scoped="" ref="0x7f339215b4a8"/>
        <function-ref name="get" scoped="" ref="0x7f339215e728"/>
        <function-ref name="captured" scoped="" ref="0x7f339215d0c0"/>
        <function-ref name="reset" scoped="" ref="0x7f339215d598"/>
        <function-ref name="isOn" scoped="" ref="0x7f339215b930"/>
        <function-ref name="set" scoped="" ref="0x7f339215ebb0"/>
        <function-ref name="start" scoped="" ref="0x7f339215da20"/>
        <function-ref name="stop" scoped="" ref="0x7f339215b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f3392156770" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f3392156770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f3392152020"/>
        <function-ref name="fired" scoped="" ref="0x7f3392155d08"/>
        <function-ref name="get" scoped="" ref="0x7f33921553a8"/>
        <function-ref name="reset" scoped="" ref="0x7f33921541f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f33921524a8"/>
        <function-ref name="set" scoped="" ref="0x7f3392155830"/>
        <function-ref name="start" scoped="" ref="0x7f3392154680"/>
        <function-ref name="stop" scoped="" ref="0x7f3392154b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f3392152b20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f3392152b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f339214f310"/>
        <function-ref name="fired" scoped="" ref="0x7f33921500c0"/>
        <function-ref name="get" scoped="" ref="0x7f3392151728"/>
        <function-ref name="reset" scoped="" ref="0x7f3392150548"/>
        <function-ref name="isOn" scoped="" ref="0x7f339214f798"/>
        <function-ref name="set" scoped="" ref="0x7f3392151bb0"/>
        <function-ref name="start" scoped="" ref="0x7f33921509d0"/>
        <function-ref name="stop" scoped="" ref="0x7f3392150e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f3392165298" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f3392165298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f33921624a8"/>
        <function-ref name="test" scoped="" ref="0x7f3392163a40"/>
        <function-ref name="get" scoped="" ref="0x7f3392165e18"/>
        <function-ref name="setScale" scoped="" ref="0x7f3392162930"/>
        <function-ref name="getScale" scoped="" ref="0x7f3392162e08"/>
        <function-ref name="reset" scoped="" ref="0x7f3392164c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f33921647e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f3392162020"/>
        <function-ref name="set" scoped="" ref="0x7f3392164310"/>
        <function-ref name="start" scoped="" ref="0x7f3392163130"/>
        <function-ref name="stop" scoped="" ref="0x7f33921635b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33920d9020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33920d9020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f3393ae3388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f3393ae3388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33920d9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33920d9740" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f33920d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f33920d5930"/>
        <function-ref name="test" scoped="" ref="0x7f33920d5020"/>
        <function-ref name="get" scoped="" ref="0x7f33920d73a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f33920d5db8"/>
        <function-ref name="getScale" scoped="" ref="0x7f33920d32f0"/>
        <function-ref name="reset" scoped="" ref="0x7f33920d61f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f33920d7d08"/>
        <function-ref name="isOn" scoped="" ref="0x7f33920d54a8"/>
        <function-ref name="set" scoped="" ref="0x7f33920d7830"/>
        <function-ref name="start" scoped="" ref="0x7f33920d6680"/>
        <function-ref name="stop" scoped="" ref="0x7f33920d6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33920d1020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f33920d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3393a17d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33920d1d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33920cf6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33920cf230"/>
        <function-ref name="overflow" scoped="" ref="0x7f33920cfb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33920ce0e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f33920ce0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f33920ca270"/>
        <function-ref name="test" scoped="" ref="0x7f33920cc930"/>
        <function-ref name="get" scoped="" ref="0x7f33920cec60"/>
        <function-ref name="setScale" scoped="" ref="0x7f33920ca6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f33920cabd0"/>
        <function-ref name="reset" scoped="" ref="0x7f33920cda90"/>
        <function-ref name="overflow" scoped="" ref="0x7f33920cd608"/>
        <function-ref name="isOn" scoped="" ref="0x7f33920ccdb8"/>
        <function-ref name="set" scoped="" ref="0x7f33920cd130"/>
        <function-ref name="start" scoped="" ref="0x7f33920cc020"/>
        <function-ref name="stop" scoped="" ref="0x7f33920cc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f33920c4e20" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f33920c4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TThree" ref="0x7f3393a17d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33920c2be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33920c1548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33920c10c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33920c19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33920c6c50" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f33920c6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f3393a57430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f3393a57788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33920c59f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33920c4330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33920c5e78"/>
        <function-ref name="overflow" scoped="" ref="0x7f33920c47b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f33920b96e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x7f33920b96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f33920b9a30"/>
        <function-ref name="offset" scoped="" ref="0x7f33920b9bb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f33920b9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f339208b1d0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f339208b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339208b520"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339208b6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339208b830"/>
        <function-ref name="cancel" scoped="" ref="0x7f339208b9b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339208bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f339208bd88" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f339208bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339208a170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f339208a2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339208a480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339208a608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339208a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f339208a9d8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f339208a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f339208ad28"/>
        <function-ref name="source" scoped="" ref="0x7f3392089020"/>
        <function-ref name="address" scoped="" ref="0x7f33920891a8"/>
        <function-ref name="destination" scoped="" ref="0x7f3392089330"/>
        <function-ref name="setSource" scoped="" ref="0x7f33920894b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3392089640"/>
        <function-ref name="type" scoped="" ref="0x7f33920897c8"/>
        <function-ref name="setType" scoped="" ref="0x7f3392089950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3392089ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3392089c60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3392089de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33920880a0" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f33920880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33920883f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f3392088578"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3392088700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3391633600" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3391633600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391633950"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3391633ad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391633c60"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391633de8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391632020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f33916322c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33916322c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3391632618"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33916327a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3391632928"/>
        <function-ref name="cancel" scoped="" ref="0x7f3391632ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3391632c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3391632e80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3391632e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33916311f8"/>
        <function-ref name="source" scoped="" ref="0x7f3391631380"/>
        <function-ref name="address" scoped="" ref="0x7f3391631508"/>
        <function-ref name="destination" scoped="" ref="0x7f3391631690"/>
        <function-ref name="setSource" scoped="" ref="0x7f3391631818"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33916319a0"/>
        <function-ref name="type" scoped="" ref="0x7f3391631b28"/>
        <function-ref name="setType" scoped="" ref="0x7f3391631cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f3391631e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3391630020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33916301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f339209b440" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f339209b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339209b790"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339209b918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339209baa0"/>
        <function-ref name="cancel" scoped="" ref="0x7f339209bc28"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339209bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f3392098ac0" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f3392098ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3392098e30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392097020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33920971a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392097330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33920974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3392099d20" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f3392099d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33920980d8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3392098260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33920983e8"/>
        <function-ref name="cancel" scoped="" ref="0x7f3392098570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33920986f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f3392096d20" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f3392096d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33920950a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3392095228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33920953b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3392095538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33920956c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f3392095988" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f3392095988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392095cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392095e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f3392094160" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f3392094160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33920944b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392094638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3392097700" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f3392097700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f3392097a50"/>
        <function-ref name="source" scoped="" ref="0x7f3392097bd8"/>
        <function-ref name="address" scoped="" ref="0x7f3392097d60"/>
        <function-ref name="destination" scoped="" ref="0x7f3392096020"/>
        <function-ref name="setSource" scoped="" ref="0x7f33920961a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3392096330"/>
        <function-ref name="type" scoped="" ref="0x7f33920964b8"/>
        <function-ref name="setType" scoped="" ref="0x7f3392096640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33920967c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3392096950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f3392096ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f33920831e8" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f33920831e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392080158"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3392081610"/>
        <function-ref name="empty" scoped="" ref="0x7f3392083d30"/>
        <function-ref name="put" scoped="" ref="0x7f3392081a60"/>
        <function-ref name="size" scoped="" ref="0x7f33920811c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f33915eb370" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f33915eb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33915e93e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33915ea8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f33915ea020"/>
        <function-ref name="put" scoped="" ref="0x7f33915ead10"/>
        <function-ref name="size" scoped="" ref="0x7f33915ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33915edc68" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33915edc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33915eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f339207d2b0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f339207d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f339207cb18"/>
        <function-ref name="enqueue" scoped="" ref="0x7f339207b818"/>
        <function-ref name="element" scoped="" ref="0x7f339207be48"/>
        <function-ref name="maxSize" scoped="" ref="0x7f339207c6c8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f339207b1b8"/>
        <function-ref name="empty" scoped="" ref="0x7f339207ddf8"/>
        <function-ref name="size" scoped="" ref="0x7f339207c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f33920777c8" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f33920777c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3392075730"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3392076c10"/>
        <function-ref name="empty" scoped="" ref="0x7f3392076370"/>
        <function-ref name="put" scoped="" ref="0x7f3392075088"/>
        <function-ref name="size" scoped="" ref="0x7f33920767c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f33915cf370" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f33915cf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33915cc3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33915ce8c0"/>
        <function-ref name="empty" scoped="" ref="0x7f33915ce020"/>
        <function-ref name="put" scoped="" ref="0x7f33915ced10"/>
        <function-ref name="size" scoped="" ref="0x7f33915ce470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33915d0b40" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f33915d0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33915cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f33920727c8" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f33920727c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f3392070088"/>
        <function-ref name="enqueue" scoped="" ref="0x7f3392070d48"/>
        <function-ref name="element" scoped="" ref="0x7f339206e3a8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f3392071c10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33920706e8"/>
        <function-ref name="empty" scoped="" ref="0x7f3392071370"/>
        <function-ref name="size" scoped="" ref="0x7f33920717c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f339206c100" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f339206c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339206c450"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339206c5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339206c760"/>
        <function-ref name="cancel" scoped="" ref="0x7f339206c8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339206ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f339206ccb8" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f339206ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f339206b0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f339206b228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339206b3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339206b538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f339206b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f339206b908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f339206b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f339206bc58"/>
        <function-ref name="source" scoped="" ref="0x7f339206bde0"/>
        <function-ref name="address" scoped="" ref="0x7f339206a020"/>
        <function-ref name="destination" scoped="" ref="0x7f339206a1a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f339206a330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f339206a4b8"/>
        <function-ref name="type" scoped="" ref="0x7f339206a640"/>
        <function-ref name="setType" scoped="" ref="0x7f339206a7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f339206a950"/>
        <function-ref name="setGroup" scoped="" ref="0x7f339206aad8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f339206ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f3392069020" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f3392069020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3392069370"/>
        <function-ref name="noAck" scoped="" ref="0x7f33920694f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3392069680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33915b0be0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f33915b0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33915af020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33915af1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33915af330"/>
        <function-ref name="cancel" scoped="" ref="0x7f33915af4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33915af640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f33915af8e8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f33915af8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33915afc38"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33915afdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33915ae020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33915ae1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33915ae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33915ae578" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f33915ae578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33915ae8c8"/>
        <function-ref name="source" scoped="" ref="0x7f33915aea50"/>
        <function-ref name="address" scoped="" ref="0x7f33915aebd8"/>
        <function-ref name="destination" scoped="" ref="0x7f33915aed60"/>
        <function-ref name="setSource" scoped="" ref="0x7f33915ad020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33915ad1a8"/>
        <function-ref name="type" scoped="" ref="0x7f33915ad330"/>
        <function-ref name="setType" scoped="" ref="0x7f33915ad4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33915ad640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33915ad7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33915ad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x7f3392064020" loc="4:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x7f3392064020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x7f3392064370"/>
        <function-ref name="logEventMsg" scoped="" ref="0x7f33920644f8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x7f3392064680"/>
        <function-ref name="logEventRoute" scoped="" ref="0x7f3392064808"/>
        <function-ref name="logEventDbg" scoped="" ref="0x7f3392064990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f3392064c88" loc="7:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f3392064c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f3392063020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x7f339205b060" loc="10:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x7f339205b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f339205b3b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f339205b538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f339205b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f339205b848"/>
        <function-ref name="sendDone" scoped="" ref="0x7f339205b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f3392061cf8" loc="9:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x7f3392061cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f339205e610"/>
        <function-ref name="enqueue" scoped="" ref="0x7f339205d300"/>
        <function-ref name="element" scoped="" ref="0x7f339205d930"/>
        <function-ref name="maxSize" scoped="" ref="0x7f339205e1c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f339205ec70"/>
        <function-ref name="empty" scoped="" ref="0x7f339205f8b8"/>
        <function-ref name="size" scoped="" ref="0x7f339205fd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f3392054a88" loc="36:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f3392054a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3392054dd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f3392053020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x7f33920634b0" loc="8:/opt/tinyos-2.1.2/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x7f33920634b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
            <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33920613e8"/>
        <function-ref name="maxSize" scoped="" ref="0x7f33920628c0"/>
        <function-ref name="empty" scoped="" ref="0x7f3392062020"/>
        <function-ref name="put" scoped="" ref="0x7f3392062d10"/>
        <function-ref name="size" scoped="" ref="0x7f3392062470"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f33939d47a0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f33939d2458" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f33939c6810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f33939c65a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f33939c9020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f33939c9a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f33939c97a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f33939c84d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f33939c8260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f33939c8d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f33939b6dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f33939b44c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f33939b6070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f33939b3290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f33939b6710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f33939b4b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33939b7328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f33939b7998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f3393ac8378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f3393ac5258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f3393ac8a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f3393abd070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f3393abd860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f3393a10e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f33939f04f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f3393a82940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f33939f1020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f3393776b00" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f3393782d88" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f3393776478" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f3393778348" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393779d58" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f33937780c8" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f339377c5d8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339377c020" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f339377c358" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f339377bc78" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339377b6a0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f339377b9f8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f339377d8a8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339377d638" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f3393779670" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393779400" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f339377b020" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339377ccf0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f3393809378" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3393809108" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f3393807780" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3393807510" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f339380a748" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3393809b60" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f339378c020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339378e5d8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f339378e900" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f339378ec10" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x7f3393797a40" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33937974b0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33937977c0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3393790020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33937928e0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3393792bf0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f33937920d8" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3393794c80" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393794a10" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33937932a0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393795c70" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3393793020" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f339376b5e8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f339376b5e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f33937654f8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f339376b5e8"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f3393768e50" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f339376be10" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f3393766860" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f339376b5e8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f33937665f0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f339376b5e8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f3393768640" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f33937523b8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33937523b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f3393752bf0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f33937518d0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33937523b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f3393751350" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f3393751650" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33937523b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33937885c0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f3393803c48" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3393788020" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3393788330" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3393783a68" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33937834a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33937837b0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3393784c58" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3393786890" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393786620" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3393785cf8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393785750" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3393785a78" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f3393804020" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33938047c0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f339374a020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f339374a758" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f3393749020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f3393749e70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f3393746480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3393746c18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f3393749738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3393745768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f33937454f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f339374b7e0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f3393747608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f3393747d20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f3393780bc0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3393780bc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f3393772a30" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3393780bc0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f3393771338" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3393780bc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f33937710c8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3393780bc0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f33943c9488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f33943c9488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f339376e290" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3393780bc0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f339376e020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f3393772328" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f33937705a0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f3393780bc0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f3393773418" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f3393773b38" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f3393763e30" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f3393763e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f3393759918" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f339375d258" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f339375b020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f339375c910" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f339375cc28" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f339375c1d8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f3393758878" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f3393758070" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f339375d9d0" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f3393760928" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33937606b8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f3393759020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f339375b950" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f339375bc68" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f339375f390" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f339375f120" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f339375fb38" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33936b5518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33936b5518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f33936b5da8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33936a6a50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33936a6a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33936a6c80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936a6c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f33936a3548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936a6c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f33936a2590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f33936a3d60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f33936a2c80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33936b0738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33936b0738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33936b0968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f33936aa290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f33936ac418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f33936ab920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f33936ab380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f33936ab6a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f33936acb88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f33936aaa10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f33936ad4a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33936ad238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33936b0968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33936adc78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f3393676878" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f3393677780" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f339367a540" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f3393676118" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f3393677e80" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f3393677020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3393678c80" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f3393674290" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f3393674020" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f339367ac70" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f33936785c8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3393678358" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f3393663020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f3393666020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f3393666738" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f3393665020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f33936637d0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f33936657f0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f339366ad10" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f3393a3e978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f3393a3ed80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f3393667708" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f3393a3e978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f3393a3ed80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f3393667498" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f3393a3e978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f3393a3ed80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f339367cce0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f339367cce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f339366d3e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f3393670760" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3393671608" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f339367cce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3393670e68" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f339366db30" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3393670020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f339367cce0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3393671ce0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f339367cce0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f339366f590" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f339366fc78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f3393689e68" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3393689e68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f3393681438" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f3393682568" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3393686738" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3393689e68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f3393681d88" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f3393681b18" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f3393680548" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3393684020" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f33936857c8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f3393682cc0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33936850a8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3393689e68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3393686e00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f3393689e68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3393684718" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3393684e00" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f33934fa7d0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f33934fa020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f33934fde00" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f33934fd618" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f33934fc658" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f33934f7e58" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33934f7e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f33934f3708" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f33934f2418" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33934f7e58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f33934f3e50" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f33934f2198" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33934f7e58"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f33934ec938" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f33934eda00" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f33934ed110" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f33934ec1d8" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f33934eb360" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f33934de138" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f33934df420" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f33934df778" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f33934dfae0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f33934dfe30" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f33934ddda8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33934ded00" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f33934dd060" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f33934dd398" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f33934dd748" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f33934ddaf8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f33934e4cd0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f33934e4020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f33934e4378" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f33934e46e0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f33934e4a30" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33934e16a8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f33934e3e08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33934e3868" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f33934e3b88" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f33934caa68" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f33934d6ab8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3393a643a0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f3393a64858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f33934c8cc0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f33934c8a50" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f33934c9328" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f33934ce780" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f33934d14f0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3393a643a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f3393a64858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f33934d1280" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3393a643a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f3393a64858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f33934cd5d8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f33934c8258" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33934c6488" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f33934cee70" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f33934cc470" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f33934cdd20" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f33934ccb98" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f33934c9a88" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f33934cf6e8" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3393a5ece0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f3393a5d438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f33934cf478" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3393a5ece0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f3393a5d438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f33934ca378" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f33934d1cc8" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f3393a5ece0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f3393a5d438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f33934ce020" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f33934c5020" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33934c6d28" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f33934d58e8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33934d4110" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f3393454178" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f3393454a40" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f3393451e60" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f3393450e60" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f3393451640" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f3393450698" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f339344f760" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f339344d4b8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f339344dca8" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f3393442290" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f339344b4c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3393442020" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f339344b4c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f3393445360" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f3393445de0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f339344b4c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3393445b70" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f339344b4c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f33934436d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f339344b4c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f33933dac18" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33933b8b18" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33933b8b18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33933b8d48" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33933b8d48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f33933b5820" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33933b8d48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33933b55b0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33933b8d48"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x7f339331d578" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f339331d308" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x7f3393319940" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f339331bcc0" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3393319020" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x7f3393319368" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x7f33933196a0" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x7f339331c2a0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f339331dc68" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f339331c020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x7f3393318cd0" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3393318060" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x7f33933183a8" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x7f33933186f0" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x7f3393318a30" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x7f339331b5f0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f339331c970" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x7f339331cca0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x7f339331b020" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x7f339331b350" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f339334c5c0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393350bf0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f339334c020" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f339334c330" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f339334fe48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339334fbd8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f3393347e20" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393347bb0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3393342020" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393344a08" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3393344d18" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3393344178" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f33933452a0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393346c48" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3393345020" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x7f33933279a0" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3393327730" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f339332a070" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x7f3393327020" loc="95:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x7f339332b020" loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f339332d628" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x7f339332d3b8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x7f339332b848" loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x7f339332ad98" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f339332a7e0" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x7f339332ab18" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x7f3393326cb8" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3393326a48" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f3393340ba8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x7f3393340938" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x7f3393326378" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3393326108" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x7f3393329788" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f3393329518" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x7f339332ee58" loc="7:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x7f33933237f0" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x7f3393323580" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f3393334020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393335978" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x7f3393335ca0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x7f339333c5f0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339333c020" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f339333c370" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f33933382a0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393339c30" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f3393338020" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x7f3393337880" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33933372c8" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3393337600" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f339333d7e8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339333d1f8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f339333d568" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f33933395b8" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393339348" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x7f3393338c08" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393338998" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f33933335a8" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393333020" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x7f3393333328" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f339333fac0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339333f4d0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x7f339333f840" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x7f33933300b8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f3393331a90" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f3393331de8" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x7f339333b020" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339333ccb0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f3393335290" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393335020" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x7f33933313c0" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x7f3393333d90" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x7f3393331140" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x7f3393334958" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33933346e8" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x7f339333bc28" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339333b698" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x7f339333b9a8" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x7f3393320700" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x7f339377e9d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x7f33933066a8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393306438" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x7f3393308378" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393308108" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x7f3393305030" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393306d90" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x7f33933099c0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393309750" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f33933042d0" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393304060" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x7f3393305998" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393305728" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x7f3393308d10" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f3393308aa0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x7f3393309020" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x7f339330cd40" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f33932f5020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f33932f9920" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f33932f9c80" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f33932daad0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932da4e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f33932da850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f33932d8bc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932d8950" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f33932dcc90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f33932dc338" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f33932dc0c8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f33932e10a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932f3dd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f33932df290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932df020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f33932de338" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932de0c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f33932d2a48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932d27d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f33932e2d50" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932e2768" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f33932e2ad0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f33932d5af0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932d5880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f33932d50b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932d4a90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f33932d4df8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f33932d0970" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932d0700" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f33932e7680" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932e7410" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f33932f1600" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932f1390" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f33932f7b78" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f33932f2600" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932f2390" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f33932edd90" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932ed7d8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f33932edb10" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f33932ef948" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932ef390" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f33932ef6c8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f33932ea290" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932ea020" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f33932e95a0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932e9020" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f33932e9320" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33937af848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f33932eb020" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932ecd60" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f33932e6a50" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33932e64a0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f33932e67d0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f33932e3818" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f33932cd178" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f33932dd990" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f33932dd720" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f33932cd950" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f33932d9a58" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33932d9a58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33932d9c88" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33932d9c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f33932c9938" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33932d9c88"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932c96c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f33932c7a38" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932c77c8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f33932cb7d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932cb560" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33932c6c68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33932d9c88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932c66a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f33932c69e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33932d9c88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f33932b16d8" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f33932b16d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f33932ad6a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932ad438" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f33932aec88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f33932b16d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932aea18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f33932ae290" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932ae020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33932ab388" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f33932b16d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932add98" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f33932ab108" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f33932b16d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f33932a0020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932a4c50" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f339327f9a0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339327f730" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f33932804f8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f339327f020" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393280c38" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f339327c388" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339327ed50" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f339327c108" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f339327e6b8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339327e0c8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f339327e438" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f339327b630" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f33937c44c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339327b3c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f33932792e0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f33937c44c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339327bca8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f3393279060" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f33937c44c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f339327cca8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339327ca38" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f33932799e8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f33937c44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33932895c0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f339328cc80" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f3393289020" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3393289330" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f3393285988" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932853c0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33932856d0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3393286b70" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3393287338" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932870c8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33932862a0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393287c68" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f3393286020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f3393235020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f3393249938" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932496c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f339323ad10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339323aaa0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f3393238370" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393238100" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f339323b6b0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339323b440" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f339323d020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339324bc70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f339323a388" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339323bd88" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f339323a108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f339323dce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339323d728" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f339323da60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f33932399b0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393239400" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f3393239730" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f3393243598" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f3393242020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f339323f290" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339323f020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f3393242aa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393242838" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f33932405b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393240348" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f33932178e0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f3393218a70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f33937c7540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f3393218800" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f33937c7540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33932171d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f3393218020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f33932160d8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f33937c7540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f339320f290" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339320f020" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f33932136f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393213488" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f3393212d80" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f33932125d0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393212020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3393212350" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f339321abf0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339321a980" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f33932117f0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393211580" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f339325dc90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f339325d4e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339325d278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f339325c780" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339325c510" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f339325a020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f339325ab28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339325a8b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f339324a338" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339324a0c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f33932517a8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f3393251040" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3393253a30" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3393253d90" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f3393257cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393257a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f33932557b8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393255548" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f3393254640" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3393254060" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f33932543c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f3393258468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f33932572a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393258c70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f3393257020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f3393253290" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393253020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f3393226290" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393226020" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f3393228a08" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393228798" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f33932335c0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393233020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f3393233340" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f33932305b8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393230348" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f3393220020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932229c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3393222cf8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f3393231aa8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393231838" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f3393227808" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393227278" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f3393227588" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f339322d020" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f339322f8a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f339322fc08" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f3393222290" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393222020" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f3393231030" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393233d90" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f339322c920" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339322c6b0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f339322de50" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f339322d870" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f339322dbd0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f339321e548" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f33937c48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f3393220a20" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932207b0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f339321fd88" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f33937c44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f3393223748" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393223198" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f33932234c8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f339322f0a8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393230dd0" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f3393228020" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339322aa38" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f339322ad58" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f3393224020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932269e8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f3393226d08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f339321c020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339321ec88" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f339322b678" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339322b100" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f339322b3f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f33932347f0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393234580" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f339321f538" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339321f2c8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f3393224a28" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33932247b8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f339322a290" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339322a020" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f339324c020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339324ea20" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f339324ed50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f339324c7a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f339324f830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339324f5c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f339324e290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339324e020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f3393247ad8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393247868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f3393247020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393250cf8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f3393245328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f3393245d78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393245b08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f33931a3a18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f33931a1328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f33931a1c40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f33931a3328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f339316e8c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339316e658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3393169290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3393169020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f339316b7a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339316b1f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f339316b520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f339316dc10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339316d968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f33931558f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f33931547c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f33931540d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f3393155118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f3393158ae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33937afbf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f3393158e20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f3392f4ee70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
              <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392f4ebc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f3392f4e290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392f4e020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f3392f3c020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3392f3dce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f3392f3c790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3392f45cf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3392f45a88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3392f3d640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3392f3d3d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f3392f42020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3392f43d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f3392f414e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3392f41270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f3392f42ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3392f42840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f3392f3f020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f3392f41ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f3392f435b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f3392f43340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f3392e60328" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f3392e5f378" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f3392e5fd80" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f3392e5fb10" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f3392e5e538" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f3392e60b58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f3392e5ed68" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f3392e629f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392e62780" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f3392e5ad88" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3392e5a580" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3392e5a310" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f3392de9540" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f3392decd78" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f33943c3608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f3392dbf9f0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f3392dbf9f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f3392dbc4c8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f3392dbf9f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f3392dbc258" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f3392dbf9f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f3392d96988" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392d96718" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3392d998b0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392d99640" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f3392d985f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392d98060" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f3392d98370" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3392d96020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392d98d18" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f3392d65020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f3392d66c68" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f3392d664e0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f3392c72cb0" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f3392c71d38" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f3392c71600" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f3392c71390" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f3392c724c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f3392c79ab8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392c79848" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f3392c78dc0" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392c78b50" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f3392c78328" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3392c76840" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392c765d0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f3392b8c4d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3392b8c4d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f3392b83020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f3392b84c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f3392b86e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f3392b8cd88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3392b8c4d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f3392b87108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3392b8c4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3392b88e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3392b8c4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f3392b87848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f3392b845c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3392b886f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3392b8c4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f3392b88480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f3392b8c4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f3392b86020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f3392b86708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3392b6bb88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f3392b6b278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f3392b6b5d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3392b6b8f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3392b67020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f3392b6a2b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f3392b6a610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3392b6a930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3392b6ac78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f3392b6d020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f3392b71c18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f3392b54328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f3392b4bc40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f3392b4f7a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f3392b4a610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f3392b4a3a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f3392b56ba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f3392b4d338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f3392b4d0c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f3392b50020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f3392b52c88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f3392b531d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f3392b46de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f3392b46b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f3392b50758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f3392b49690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f3392b49420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f3392b48538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f3392b4b518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f3392b4b2a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f3392b464a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f3392b4e290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f3392b4e020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3392b53b30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392b538c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f3392b4f0a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f3392b50df8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f3392b4db48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f3392b4ad18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f3392b49d80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f3392b48c80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f3392b4e9a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f3392b54a40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f3392b524e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392b52270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f3392a8e728" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f3392a8ba98" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f3392a8f7d0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f3392a8ac08" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f3392a8a4a8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f3392a8a238" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f3392a8d9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3392a8d760" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f3392a895b8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f3392a89348" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f3392a8e020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f3392a8b338" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3392a8b0c8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f3392a8d0a8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f3392a8ede0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f33928bad38" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f33928bad38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x7f33928b77a0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f33928bad38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f33928b7530" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f33928bad38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f33928b69b8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x7f33928b6290" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f33928bad38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f33928b6020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f33928bad38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x7f33928c6988" loc="49:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x7f33928c5030" loc="51:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x7f33928c61d8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x7f33928c5690" loc="52:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x7f33926f9bf0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33926fce70" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f33926f9650" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33926f9960" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x7f3392592a10" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33925927a0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x7f339258d2a0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339258ecd0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x7f339258d020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x7f3392594d60" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392594790" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3392594ae0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f339258e338" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f339258e0c8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x7f3392595d50" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392595780" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3392595ad0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x7f3392590680" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33925900c8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f3392590400" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f33925916d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33937ae020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392591460" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x7f3392596d50" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3392596780" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x7f3392596ad0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x7f33933583f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f33923d62a0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33923d7b70" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f33923d6020" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f33923d9458" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f33923d72a0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33923d9c70" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f3393799780"/>
                <typename><typedef-ref name="message_t" ref="0x7f3393798cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f33923d7020" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f33923a2b60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f33923a2450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f33923ab1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f33923a9528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f33923a7020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33923a8d60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f33923a9d40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f33923abcc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33923aba58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f33923a7818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f33923a85b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f33923b1020" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f33923b18d8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f33923b3668" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f33923b33f8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f33923b0430" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f33923b01c0" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f33923ae020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f33923aebc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33923ae958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f33923ad640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f33923ad3d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33922849b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f3392284418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3392284738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f339227f4a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f339227f238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f339227d2a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f339227fc20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f339227d020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f33922801d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f339227ca38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f339227c160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f339227c480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f339227c7a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f3392280a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33922832b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f3392282880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3392282ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f33943c4b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3392283020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3392260bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f3392260940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f339225c9b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f339225c3f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f339225c730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f3392248578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f339224a738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x7f3392246c08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392246998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f3392247c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f339224e7f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f339224a020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f339224ae58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f3393ac1ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x7f3392248c58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f3393ae69b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f3392247578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3392247308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f3392246328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33943c4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
